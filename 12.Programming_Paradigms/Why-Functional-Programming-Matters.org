#+TITLE: Why Functional Programming Matters
#+VERSION: based on the earliest 1984 version
#+AUTHOR: John Hughes
#+ORGANIZATION: Institutionen för Datavetenskap, Chalmers Tekniska Högskola,
#+STARTUP: overview
#+STARTUP: entitiespretty

This paper dates from 1984,
and circulated as a Chalmers memo for many years. Slightly revised versions
appeared in 1989 and 1990 as [Hug90] and [Hug89].
  This version is based on the original Chalmers memo nroff source, lightly
edited for LaTeX and to bring it closer to the published versions, and with one
or two errors corrected. Please excuse the slightly old-fashioned type-setting,
and the fact that the examples are not in Haskell!

* Abstraction - 1
* 1 Introduction - 1
* 2 An Analogy with Structured Programming - 3
* 3 Glueing Functions Together - 4
* 4 Glueing Programs Together - 8
** 4.1 Newton-Raphson Square Roots - 9
** 4.2 Numerical Differentiation - 11
** 4.3 Numerical Integration - 13

* 5 An Example from Artificial Intelligence - 15
* 6 Conclusion - 22
* Acknowledgements - 22
* References - 23
