#+TITLE: Modern Mathematics
#+SUBTITLE: Cutting-edge math for today's coders
#+YEAR: 2024 - First (PrePrint) Edition - Build date 2025-02-13
#+AUTHOR: Vlad Patryshev
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Contents - viii
* List of Figures - xiii
* List of Tables - xvii
* List of Listings - xviii
* Foreword - xix
* Acknowledgments - xxii
* Introduction - xxiii
* 1 Functions - 29
** 1.1 General ideas - 29
** 1.2 Basic definitions - 33
** 1.3 Special Classes of functions - 35
** 1.4 Restricting a function - 43
** 1.5 Image of a function - 44
** 1.6 Decomposing a function - 46
** 1.7 Predicate - 47
** 1.8 Functions having more than one parameter - 48
** 1.9 Binary relations - 50
** 1.10 Binary operations - 54
** 1.11 Conclusion - 55

* 2 Abstractions of Algebra - 56
** 2.1 Monoid. Formal description - 54
** 2.2 Mappings between monoids - 57
** 2.3 Special kinds of monoids - 59
** 2.4 Removing constraints - 66
** 2.5 Conclusion - 70

* 3 Partial Orders, Graphs, and DAGs - 71
** 3.1 Partial order - 71
** 3.2 Graphs - 79
** 3.3 Conclusion - 85

* 4 Boolean Logic - 87
** 4.1 The language of first-order logic - 87
** 4.2 Logical operations - 90
** 4.3 Proving something - 94
** 4.4 Expressions simplification - 100
** 4.5 Conclusion - 102

* 5 Non-Boolean Logic - 103
** 5.1 The Meaning of Non-Booleanness - 103
** 5.2 Dropping Booleanness - 104
** 5.3 Logic produces a partial order - 106
** 5.4 Which partial orders are good for logic? - 108
** 5.5 Proof in intuitionistic logic - 113
** 5.6 Conclusion - 113

* 6 Quantifiers - 114
** 6.1 What are they? - 114
** 6.2 Universal quantifier - 115
** 6.3 Existential quantifier - 115
** 6.4 Quantifiers and logical connectives - 116
** 6.5 Connectives and quantifiers in Boolean logic - 119
** 6.6 Connectives and quantifiers in intuitionistic logic - 120
** 6.7 Combining quantifiers - 124

* 7 Models and Theories - 126
** 7.1 Theories - 127
** 7.2 Dealing with theories - 134
** 7.3 Algebraic and geometric theories - 139
** 7.4 Models - 140
** 7.5 Conclusion - 142

* 8 Category: Multi-Tiered Monoid - 144
** 8.1 Monoid of functions - 144
** 8.2 More Than one domain - 145
** 8.3 Examples of categories - 146
** 8.4 Conclusion - 153

* 9 Working with Categories - 154
** 9.1 Arrows in a category - 154
** 9.2 Initial and terminal objects - 159

* 10 Products and Sums - 163
** 10.1 Product of two objects - 163
** 10.2 Product in a category - 164
** 10.3 Sum of Two objects - 170

* 11 More Constructions in a Category - 174
** 11.1 Equalizer - 174
** 11.2 Coequalizer - 177
** 11.3 Pullback - 178
** 11.4 Pushout - 184

* 12 Relations Between Categories - 186
** 12.1 Introduction - 186
** 12.2 Functors - 187
** 12.3 Examples of functors - 189
** 12.4 Building new categories - 195
** 12.5 Reversing the arrows - 196

* 13 Relations Between Functors - 200
** 13.1 Introduction - 200
** 13.2 Natural Transformations - 200
** 13.3 Adjoint Functors - 207
** 13.4 Limits - 215

* 14 Cartesian Closed Categories - 218
** 14.1 Basic ideas - 218
** 14.2 Features of cartesian-closed categories - 220
** 14.3 Conclusion - 222

* 15 Monads - 223
** 15.1 Main ideas - 223
** 15.2 Conclusion - 231

* 16 Monads: Algebras and Kleisli - 233
** 16.1 Monad algebras - 233
** 16.2 Kleisli category - 238
** 16.3 Adjunction for a monad is not unique - 241

* 17 Untyped Lambda Calculus - 243
** 17.1 Introduction - 243
** 17.2 The language of lambda calculus - 244
** 17.3 The theory of lambda calculus - 246
** 17.4 Free and bound variables - 246
** 17.5 Alpha equivalence - 247
** 17.6 Substitution in lambda - 239
** 17.7 Eta equivalence - 249
** 17.8 Beta equivalence - 249
** 17.9 Functional view of lambda calculus - 251
** 17.10 Natural numbers (Church Numerals) - 254
** 17.11 Pair and predecessor - 257
** 17.12 Boolean logic - 259
** 17.13 Loops and recursion - 262
** 17.14 Church encoding of data structures - 267
** 17.15 Combinators - 270
** 17.16 Conclusion - 272

* 18 Typed Lambda Calculus - 273
** 18.1 Introduction - 273
** 18.2 Terms Having Types - 273
** 18.3 \lambda{} -> -Curry Calculus - 274
** 18.4 \lambda{} -> -Church Calculus - 278
** 18.5 Churchâ€“Curry conversions - 280
** 18.6 \lambda{}2-Curry Calculus - 281
** 18.7 Conclusion - 282

* 19 Curry-Howard-Lambek Correspondence - 283
** 19.1 Strange similarities - 283
** 19.2 Hilbert logical system - 284
** 19.3 Role of combinators in lambda calculus - 286
** 19.4 Combinator-like proofs in Hilbert logic - 287
** 19.5 Types that look like logic - 287
** 19.6 Categorical semantics - 289
** 19.7 Conclusion - 291

* 20 Answers to Exercises - 294
* 21 Conclusion - 304
* Glossary - 305
* Bibliography - 327
* About the Author - 328
* Index - 329
