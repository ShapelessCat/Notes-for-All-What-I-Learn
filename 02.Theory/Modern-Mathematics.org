#+TITLE: Modern Mathematics
#+SUBTITLE: Cutting-edge math for today's coders
#+YEAR: First (PrePrint) Edition - Build date 2025-02-13
#+AUTHOR: Vlad Patryshev
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Contents - viii
* List of Figures - xiii
* List of Tables - xvii
* List of Listings - xviii
* Foreword - xix
* Acknowledgments - xxii
* Introduction - xxiii
* 1 Functions - 29
** 1.1 General ideas - 29
** 1.2 Basic definitions - 33
** 1.3 Special Classes of functions - 35
** 1.4 Restricting a function - 43
** 1.5 Image of a function - 44
** 1.6 Decomposing a function - 46
** 1.7 Predicate - 47
** 1.8 Functions having more than one parameter - 48
** 1.9 Binary relations - 50
** 1.10 Binary operations - 54
** 1.11 Conclusion - 55

* 2 Abstractions of Algebra - 56
** 2.1 Monoid, informally - 56
** 2.2 Monoid. formally - 57
** 2.3 Mappings between monoids - 61
** 2.4 Special kinds of monoids - 62
** 2.5 Removing constraints - 71
** 2.6 Conclusion - 72

* 3 Partial Orders, Graphs, and DAGs - 73
** 3.1 Partial order - 73
** 3.2 Graphs - 82
** 3.3 Conclusion - 88

* 4 Boolean Logic - 89
** 4.1 The language of first-order logic - 89
** 4.2 Logical operations - 92
** 4.3 Proving something - 96
** 4.4 Expressions simplification - 102
** 4.5 Conclusion - 104

* 5 Non-Boolean Logic - 105
** 5.1 The Meaning of Non-Booleanness - 105
** 5.2 Dropping Booleanness - 106
** 5.3 Logic produces a partial order - 108
** 5.4 Which partial orders are good for logic? - 110
** 5.5 Proof in intuitionistic logic - 115
** 5.6 Conclusion - 115

* 6 Quantifiers - 116
** 6.1 What are they? - 116
** 6.2 Universal quantifier - 117
** 6.3 Existential quantifier - 118
** 6.4 Quantifiers and logical connectives - 118
** 6.5 Connectives and quantifiers in Boolean logic - 121
** 6.6 Connectives and quantifiers in intuitionistic logic - 122
** 6.7 Combining quantifiers - 127
** 6.8 Conclusion - 127

* 7 Models and Theories - 128
** 7.1 Theories - 129
** 7.2 Dealing with theories - 137
** 7.3 Algebraic and geometric theories - 142
** 7.4 Models - 143
** 7.5 Conclusion - 145

* 8 Category: Multi-Tiered Monoid - 146
** 8.1 Monoid of functions - 146
** 8.2 More Than one domain - 147
** 8.3 Examples of categories - 149
** 8.4 Conclusion - 156

* 9 Working with Categories - 157
** 9.1 Arrows in a category - 157
** 9.2 Initial and terminal objects - 162
** 9.3 Conclusion - 165

* 10 Products and Sums - 166
** 10.1 Product of two objects - 166
** 10.2 Product in a category - 167
** 10.3 Sum of Two objects - 173
** 10.4 Conclusion - 176

* 11 More Constructions in a Category - 177
** 11.1 Equalizer - 177
** 11.2 Coequalizer - 180
** 11.3 Pullback - 181
** 11.4 Pushout - 187
** 11.5 Conclusion - 188

* 12 Relations Between Categories - 189
** 12.1 Examples of relations - 189
** 12.2 Functors - 190
** 12.3 Examples of functors - 192
** 12.4 Building new categories - 198
** 12.5 Reversing the arrows - 199
** 12.6 Conclusion - 202

* 13 Relations Between Functors - 203
** 13.1 Natural Transformations - 203
** 13.2 Adjoint Functors - 210
** 13.3 Limits - 217
** 13.4 Conclusion - 220

* 14 Cartesian Closed Categories - 221
** 14.1 Basic ideas - 221
** 14.2 Features of cartesian-closed categories - 223
** 14.3 Conclusion - 225

* 15 Monads - 226
** 15.1 Main ideas - 226
** 15.2 Conclusion - 235

* 16 Monads: Algebras and Kleisli - 236
** 16.1 Monad algebras - 236
** 16.2 Kleisli category - 241
** 16.3 Adjunction for a monad is not unique - 244
** 16.4 Conclusion - 245

* 17 Untyped Lambda Calculus - 246
** 17.1 General ideas - 246
** 17.2 The language of lambda calculus - 247
** 17.3 The theory of lambda calculus - 249
** 17.4 Free and bound variables - 249
** 17.5 Alpha equivalence - 250
** 17.6 Substitution in lambda - 251
** 17.7 Eta equivalence - 252
** 17.8 Beta equivalence - 252
** 17.9 Functional view of lambda calculus - 254
** 17.10 Natural numbers (Church Numerals) - 257
** 17.11 Pair and predecessor - 260
** 17.12 Boolean logic - 262
** 17.13 Loops and recursion - 264
** 17.14 Church encoding of data structures - 270
** 17.15 Combinators - 273
** 17.16 Conclusion - 275

* 18 Typed Lambda Calculus - 276
** 18.1 Terms having types - 276
** 18.2 \lambda{} -> -Curry calculus - 277
** 18.3 \lambda{} -> -Church calculus - 280
** 18.4 Churchâ€“Curry conversions - 282
** 18.5 \lambda{}2-Curry calculus - 283
** 18.6 Conclusion - 285

* 19 Curry-Howard-Lambek Correspondence - 286
** 19.1 Strange similarities - 286
** 19.2 Hilbert logical system - 287
** 19.3 Role of combinators in lambda calculus - 289
** 19.4 Combinator-like proofs in Hilbert logic - 290
** 19.5 Types that look like logic - 291
** 19.6 Categorical semantics - 292
** 19.7 Conclusion - 295

* Answers to Exercises - 297
* Conclusion - 307
* Glossary - 308
* Bibliography - 330
* About the Author - 331
* Index - 332
