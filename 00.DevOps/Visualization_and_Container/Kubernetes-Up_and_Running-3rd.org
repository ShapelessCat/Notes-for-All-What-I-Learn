#+TITLE: Kubernetes Up &rRunning
#+SUBTITLE: Dive into the Future of Infrastructure
#+VERSION: 3rd
#+AUTHOR: Brendan Burns, Joe Beda, Kelsey Hightower & Lachlan Evenson
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - xiii
* 1. Introduction - 1
** Velocity - 2
*** The Value of Immutability - 3
*** Declarative Configuration - 4
*** Self-Healing Systems - 5

** Scaling Your Service and Your Teams - 6
*** Decoupling - 6
*** Easy Scaling for Applications and Clusters - 6
*** Scaling Development Teams with Microservices - 7
*** Separation of Concerns for Consistency and Scaling - 8

** Abstracting Your Infrastructure - 10
** Efficiency - 10
** Cloud Native Ecosystem - 12
** Summary - 13

* 2. Creating and Running Containers - 15
** Container Images - 16
** Building Application Images with Docker - 18
*** Dockerfiles - 18
*** Optimizing Image Sizes - 20
*** Image Security - 21

** Multistage Image Builds - 22
** Storing Images in a Remote Registry - 24
** The Container Runtime Interface - 25
*** Running Containers with Docker - 25
*** Exploring the kuard Application - 26
*** Limiting Resource Usage - 26

** Cleanup - 27
** Summary - 28
* 3. Deploying a Kubernetes Cluster - 29
** Installing Kubernetes on a Public Cloud Provider - 30
*** Installing Kubernetes with Google Kubernetes Engine - 30
*** Installing Kubernetes with Azure Kubernetes Service - 30
*** Installing Kubernetes on Amazon Web Services - 31

** Installing Kubernetes Locally Using minikube - 31
** Running Kubernetes in Docker - 32
** The Kubernetes Client - 32
*** Checking Cluster Status - 33
*** Listing Kubernetes Nodes - 34

** Cluster Components - 36
*** Kubernetes Proxy - 36
*** Kubernetes DNS - 36
*** Kubernetes UI - 37

** Summary - 37

* 4. Common kubectl Commands - 39
** Namespaces - 39
** Contexts - 39
** Viewing Kubernetes API Objects - 40
** Creating, Updating, and Destroying Kubernetes Objects - 41
** Labeling and Annotating Objects - 42
** Debugging Commands - 43
** Cluster Management - 44
** Command Autocompletion - 45
** Alternative Ways of Viewing Your Cluster - 45
** Summary - 46

* 5. Pods - 47
** Pods in Kubernetes - 48
** Thinking with Pods - 48
** The Pod Manifest - 49
*** Creating a Pod - 50
*** Creating a Pod Manifest - 50

** Running Pods - 51
*** Listing Pods - 52
*** Pod Details - 52
*** Deleting a Pod - 53

** Accessing Your Pod - 54
*** Getting More Information with Logs - 54
*** Running Commands in Your Container with exec - 54
*** Copying Files to and from Containers - 55

** Health Checks - 55
*** Liveness Probe - 55
*** Readiness Probe - 57
*** Startup Probe - 57
*** Advanced Probe Configuration - 57
*** Other Types of Health Checks - 57

** Resource Management - 58
*** Resource Requests: Minimum Required Resources - 59
*** Capping Resource Usage with Limits - 60

** Persisting Data with Volumes - 61
*** Using Volumes with Pods - 61
*** Different Ways of Using Volumes with Pods - 62

** Putting It All Together - 63
** Summary - 64
* 6. Labels and Annotations - 65
** Labels - 65
*** Applying Labels - 66
*** Modifying Labels - 68
*** Label Selectors - 68
*** Label Selectors in API Objects - 70
*** Labels in the Kubernetes Architecture - 71

** Annotations - 71
** Cleanup - 73
** Summary - 73

* 7. Service Discovery - 75
** What Is Service Discovery? - 75
** The Service Object - 76
*** Service DNS - 77
*** Readiness Checks - 78

** Looking Beyond the Cluster - 79
** Load Balancer Integration - 81
** Advanced Details - 83
*** Endpoints - 83
*** Manual Service Discovery - 84
*** kube-proxy and Cluster IPs - 85
*** Cluster IP Environment Variables - 86

** Connecting with Other Environments - 86
*** Connecting to Resources Outside of a Cluster - 87
*** Connecting External Resources to Services Inside a Cluster - 87

** Cleanup - 88
** Summary - 88
* 8. HTTP Load Balancing with Ingress - 89
** Ingress Spec Versus Ingress Controllers - 90
** Installing Contour - 91
*** Configuring DNS - 92
*** Configuring a Local hosts File - 92

** Using Ingress - 93
*** Simplest Usage - 93
*** Using Hostnames - 94
*** Using Paths - 96
*** Cleanup - 97

** Advanced Ingress Topics and Gotchas - 97
*** Running Multiple Ingress Controllers - 97
*** Multiple Ingress Objects - 98
*** Ingress and Namespaces - 98
*** Path Rewriting - 98
*** Serving TLS - 99

** Alternate Ingress Implementations - 100
** The Future of Ingress - 101
** Summary - 101

* 9. ReplicaSets - 103
** Reconciliation Loops - 104
** Relating Pods and ReplicaSets - 104
*** Adopting Existing Containers - 105
*** Quarantining Containers - 105

** Designing with ReplicaSets - 105
** ReplicaSet Spec - 106
*** Pod Templates - 106
*** Labels - 107

** Creating a ReplicaSet - 107
** Inspecting a ReplicaSet - 108
*** Finding a ReplicaSet from a Pod - 108
*** Finding a Set of Pods for a ReplicaSet - 108

** Scaling ReplicaSets - 109
*** Imperative Scaling with kubectl scale - 109
*** Declaratively Scaling with kubectl apply - 109
*** Autoscaling a ReplicaSet - 110

** Deleting ReplicaSets - 111
** Summary - 112
* 10. Deployments - 113
** Your First Deployment - 114
** Creating Deployments - 116
** Managing Deployments - 117
** Updating Deployments - 118
*** Scaling a Deployment - 118
*** Updating a Container Image - 119
*** Rollout History - 120

** Deployment Strategies - 123
*** Recreate Strategy - 123
*** RollingUpdate Strategy - 123
*** Slowing Rollouts to Ensure Service Health - 126

** Deleting a Deployment - 128
** Monitoring a Deployment - 128
** Summary - 128

* 11. DaemonSets - 129
** DaemonSet Scheduler - 130
** Creating DaemonSets - 131
** Limiting DaemonSets to Specific Nodes - 133
*** Adding Labels to Nodes - 133
*** Node Selectors - 133

** Updating a DaemonSet - 135
** Deleting a DaemonSet - 136
** Summary - 136

* 12. Jobs - 137
** The Job Object - 137
** Job Patterns - 138
*** One Shot - 138
*** Parallelism - 142
*** Work Queues - 144

** CronJobs - 148
** Summary - 148

* 13. ConfigMaps and Secrets - 149
** ConfigMaps - 149
*** Creating ConfigMaps - 149
*** Using a ConfigMap - 150

** Secrets - 153
*** Creating Secrets - 154
*** Consuming Secrets - 155
*** Private Container Registries - 156

** Naming Constraints - 157
** Managing ConfigMaps and Secrets - 158
*** Listing - 158
*** Creating - 159
*** Updating - 159

** Summary - 161

* 14. Role-Based Access Control for Kubernetes - 163
** Role-Based Access Control - 164
*** Identity in Kubernetes - 164
*** Understanding Roles and Role Bindings - 165
*** Roles and Role Bindings in Kubernetes - 165

** Techniques for Managing RBAC - 168
*** Testing Authorization with can-i - 168
*** Managing RBAC in Source Control - 168

** Advanced Topics - 168
*** Aggregating ClusterRoles - 169
*** Using Groups for Bindings - 169

** Summary - 171

* 15. Service Meshes - 173
** Encryption and Authentication with Mutal TLS - 174
** Traffic Shaping - 174
** Introspection - 175
** Do You Really Need a Service Mesh? - 176
** Introspecting a Service Mesh Implementation - 176
** Service Mesh Landscape - 177
** Summary - 178

* 16. Integrating Storage Solutions and Kubernetes - 179
** Importing External Services - 180
*** Services Without Selectors - 181
*** Limitations of External Services: Health Checking - 183

** Running Reliable Singletons - 183
*** Running a MySQL Singleton - 183
*** Dynamic Volume Provisioning - 187

** Kubernetes-Native Storage with StatefulSets - 188
*** Properties of StatefulSets - 189
*** Manually Replicated MongoDB with StatefulSets - 189
*** Automating MongoDB Cluster Creation - 192
*** Persistent Volumes and StatefulSets - 195
*** One Final Thing: Readiness Probes - 195

** Summary - 196

* 17. Extending Kubernetes - 197
** What It Means to Extend Kubernetes - 197
** Points of Extensibility - 198
** Patterns for Custom Resources - 206
*** Just Data - 206
*** Compilers - 207
*** Operators - 207
*** Getting Started - 207

** Summary - 208

* 18. Accessing Kubernetes from Common Programming Languages - 209
** The Kubernetes API: A Clientâ€™s Perspective - 209
*** OpenAPI and Generated Client Libraries - 210
*** But What About kubectl x? - 210

** Programming the Kubernetes API - 211
*** Installing the Client Libraries - 211
*** Authenticating to the Kubernetes API - 212
*** Accessing the Kubernetes API - 214
*** Putting It All Together: Listing and Creating Pods in Python, Java, and .NET - 214
*** Creating and Patching Objects - 216
*** Watching Kubernetes APIs for Changes - 217
*** Interacting with Pods - 219
*** Summary - 222

* 19. Securing Applications in Kubernetes - 223
** Understanding SecurityContext - 223
*** SecurityContext Challenges - 229

** Pod Security - 229
*** What Is Pod Security? - 230
*** Applying Pod Security Standards - 231

** Service Account Management - 233
** Role-Based Access Control - 234
** RuntimeClass - 234
** Network Policy - 236
** Service Mesh - 239
** Security Benchmark Tools - 239
** Image Security - 241
** Summary - 241

* 20. Policy and Governance for Kubernetes Clusters - 243
** Why Policy and Governance Matter - 243
** Admission Flow - 244
** Policy and Governance with Gatekeeper - 245
*** What Is Open Policy Agent? - 245
*** Installing Gatekeeper - 246
*** Configuring Policies - 247
*** Understanding Constraint Templates - 250
*** Creating Constraints - 251
*** Audit - 252
*** Mutation - 253
*** Data Replication - 255
*** Metrics - 257
*** Policy Library - 257

** Summary - 257

* 21. Multicluster Application Deployments - 259
** Before You Even Begin - 260
** Starting at the Top with a Load-Balancing Approach - 262
** Building Applications for Multiple Clusters - 263
*** Replicated Silos: The Simplest Cross-Regional Model - 265
*** Sharding: Regional Data - 266
*** Better Flexibility: Microservice Routing - 267

** Summary - 268

* 22. Organizing Your Application - 269
** Principles to Guide Us - 269
*** Filesystems as the Source of Truth - 269
*** The Role of Code Review - 270
*** Feature Gates - 271

** Managing Your Application in Source Control - 272
*** Filesystem Layout - 272
*** Managing Periodic Versions - 273

** Structuring Your Application for Development, Testing, and Deployment - 275
*** Goals - 275
*** Progression of a Release - 275

** Parameterizing Your Application with Templates - 277
*** Parameterizing with Helm and Templates - 277
*** Filesystem Layout for Parameterization - 278

** Deploying Your Application Around the World - 279
*** Architectures for Worldwide Deployment - 279
*** Implementing Worldwide Deployment - 280
*** Dashboards and Monitoring for Worldwide Deployments - 282

** Summary - 282

* Building Your Own Kubernetes Cluster - 283
* Index - 291
