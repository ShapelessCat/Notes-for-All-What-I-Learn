#+TITLE: Play Framework Essentials
#+VERSION: 2014
#+AUTHOR: Julien Richard-Foy
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - 1
* Chapter 1: Building a Web Service - 5
** Play - a framework used to write web applications - 5
** Bootstrapping a Play application - 9
*** Play applications' layout - 11

** URL routing - 12
*** Route path parameters - 14
*** Parameters type coercion - 15
*** Parameters with fixed values - 15
*** Query string parameters - 16
*** Default values of query string parameters - 16
*** Trying the routes - 17

** Building HTTP responses - 17
*** Serializing application data in JSON - 19

** Reading JSON requests - 22
*** Validating JSON data - 26
*** Handling optional values and recursive types - 27

** Summary - 29

* Chapter 2: Persisting Data and Testing - 31
** Testing your web service - 31
*** Writing and running tests - 32
*** Testing the HTTP layer - 33
*** Using the reverse router to generate URLs - 34
*** Running a fake Play application - 35
*** Effectively writing HTTP tests - 35

** Persisting data - 37
*** Using a relational database - 37
**** Getting a reference to the currently running application - 39

*** Using a database management library - 40
**** Using Slick in Scala - 40
**** Using JPA in Java - 42

*** Integrating with other persistence technologies - 43
*** Populating the database with fixtures - 43
****  The application's Global object - 44

*** Managing database schema evolutions

** Using an in-memory database for tests - 46
** Summary - 49

* Chapter 3: Turning a Web Service into a Web Application - 51
** Delta between a web service and a web application - 51
** Using the template engine to build web pages - 52
*** Inserting dynamic values - 53
*** Looping and branching - 55
*** Reusing document fragments - 55
*** Comments - 57
*** Import statements - 57

** Generating HTML forms - 58
*** Repeated and nested fields - 61

** Reading and validating HTML form data - 63
*** Handling the HTML form submission - 63
*** Validating the HTML form data - 63
**** The Scala form validation API - 64
**** The Java form validation API - 66
**** Optional and mandatory fields - 67

*** Sharing JSON validation and HTML form validation rules - 68

** Handing content negotiation - 69
** Putting things together - 71
** Writing web user interface here things together - 73
** Summary - 76

* Chapter 4: Integrating with Client-side Technologies - 77
** Philosiphy of Play regarding client-side technologies - 77
** Serving static assert - 78
*** Sprinkling some JavaScript and CSS - 80

** Using the javaScript reverse rouber - 81
** Managing assets from the build  - 84
*** Producing web assets - 84
*** Pipelining web assets' transformations 85
**** concatenating ands assets - 86
**** Gzipping assets - 88
**** Gzipping assets - 88
**** Fingerprinting assets - 89

** Summary - 92k

* Chapter 5: Reactively Handling Long-running Requests - 95
** Play application's execution model - 95
** Scaling up your server - 98
** Embracing non-blocking APIs - 100
** Managing execution contexts - 105
** Writing Incremental computations using iteratees - 108
** Streaming results using enumerators - 110
** Manipulating data streams by combining iteratees, enumerators, and enumeratees - 111
*** Unidirectional streaming with server-sent events - 112
**** Preparing the ground - 112
**** Transforming streams of data using enumeratees - 114
**** Implementing a publish/subscribe system using Akka - 117

*** Bidirectional streaming with WebSockets - 124 

** Controlling the data flow - 126
** Summary - 127

* Chapter 6: Leveraging the Play Stack - Security, Internationalization, Cache, and the HTTP Client - 129
** Handling security concerns - 130
*** Authentication - 130
*** Cross-site scripting - 134
*** Cross-site request forgery - 135
**** HTTP request filters - 135
**** Using the CSRF filter - 138

*** Enabling HTTPS - 139

** Saving computation time using cache - 141
** Serving content in several languages - 143
** Calling remote web services - 145
*** Background â€“ the OAuth 2.0 protocol - 146
*** Integrating your application with your preferred social network - 147
*** Implementing the OAuth client - 148
*** Calling the HTTP API of your preferred social network - 152

** Summary - 153

* Chapter 7: Scaling Your Codebase and Depoying Your Application - 155
** Making an action's logic reusable and composable with action builders - 155
*** Capturing the logic of actions using blocking APIs - 156
*** Capturing the logic of actions that require authentication - 159
*** Combining action builders - 161

** Modularizing your code - 162
*** Applying the inversion of control principle 163
**** Using dynamic calls in route definitions - 164
**** Setting up a dependency injection system - 165
**** Making your code injectable - 167

*** Mocking components - 170
*** Splitting your code into several artifacts - 173
*** Splitting your controller layer into several artifacts - 175

** Application deployment - 176
*** Deploying to your dedicated infrastructure - 177
*** Deploying to the cloud - 177
*** Handling the per environment configuration - 178
**** Overriding configuration settings using Java system properties - 178
**** Using different configuration files - 179

** Summary - 179

* Index - 181
