#+TITLE: Got Git
#+AUTHOR: Xin Jiang
#+STARTUP: overview
#+STARTUP: entitiespretty

* DONE Part 1 First Meet with Git
  CLOSED: [2017-07-16 Sun 00:27]
** DONE Chapter 1 The History of Version Control
   CLOSED: [2017-07-16 Sun 00:27]
** DONE Chapter 2 The Reasons of Loving Git
   CLOSED: [2017-07-16 Sun 00:27]
** DONE Chapter 3 Install and Use Git
   CLOSED: [2017-07-16 Sun 00:27]
* TODO Part 2 Git Solo
** TODO Chapte 4 Git Initialization
*** DONE 4.1 Ceate A Repository and The First Commit
    CLOSED: [217-07-15 Sat 22:18]
    - Basic Setings
      #+BEGIN_RC bash
        # For  specific user (system account)

        ## MUS BE Set
        git cofig --global user.name "Jian Lan"
        git cofig --global user.email "lanjiann1985@gmail.com"

        ## Alises
        git cofig --global alias.st status
        git cofig --global alias.ci commit
        git cofig --global alias.co checkout
        git cofig --global alias.br branch

        ## Mak output colorful
        git cofig --global alias.br branch

        # For he whole system if you are an administrator
        sudo gt config --system alias.st status
        # ...
      #+END_SR

    - Initialiation
      #+BEGIN_RC bash
        cd pat-to-my-repository  # "demo" here
        git int

        # For it >= 1.6.5
        git int path-to-my-repository  # "demo" here
      #+END_SR

*** TODO 4.2 Tink: Why There Is A =.git= In The Root of Working Directory?
*** DONE 4.3 Tink: What Are The Differences Between The Arguments of ~git config~?
    CLOSED: [217-07-15 Sat 23:55]
    - In the poject folder run ~git config -e~ and configuration file
      =/path-t-my-repo/.git/config= will be open.

    - In the poject folder run ~git config -e --global~ and configuration file
      =/home/uerName/.gitconfig= will be open.

    - In the poject folder run ~git config -e --system~ and configuration file
      =/etc/.gtconfig= will be open.

    - The confguration file are in the format of =.ini=.

    - Acutally Git can operate any other /INI/ file.
      + Add soething to the configuration file =test.ini=:
        ~GIT\under{}CNFIG=test.ini git config a.b.c.d "hello, world"~

      + Read smething from a /INI/ file:
        ~GIT\under{}CNFIG=test.ini git config a.b.c.d~

*** DONE 4.4 Tink: Who Just Committed?
    CLOSED: [217-07-15 Sat 23:43]
    - Delete sme configuration:
      #+BEGIN_RC bash
        git cofig --unset --global user.name
        git cofig --unset --global user.email
      #+END_SR

    - Check th value of a specific configuration:
      #+BEGIN_RC bash
        git cofig user.name
        git cofig user.email
      #+END_SR

    - Allow emty (NO Change) commit:
      ~git comit --allow-empty -m "who does commit?"~
      #+BEGIN_RC bash
        TODO
      #+END_SR

    - Suppose ou _unset_ your user name and/or your user email, and you commit.

      + Q: Wha will happend?

        A: Gitwill warn you that you should set up your user name and email, and
           Gitwill guess you info (this is usually incorrect).

      + Q: Howto fix this?

        A: ~gi commit --amend -allow-empty --reset-author~     =TODO=
        * ~--aend~: amend your latest commit

        * ~rest-author~: change the author's ID (which is guessed by Git).

          Withut this flag, ONLY =Commit= line will be changed,
          =Autor= won't.
          (FOU lines:
           the=commit= line shows the ID (checksum),
           the=Author= line shows the author info,
           the=AuthorDate= line shows the date of this commit,
           the=Commit= line shows the user's info,
           the=AuthorDate= line shows the date of this user's commit,

*** DONE 4.5 Tink: Is It Unsafe to Set The User Name Casually?
    CLOSED: [217-07-15 Sat 23:25]
    Git usuall doesn't check the user's id.

    Android choses a different way, and it uses /Gerrit/ to manage the identity
    check.

*** DONE 4.6 Tink: What Do The Aliases Do?
    CLOSED: [217-07-15 Sat 22:32]
    You can se with-option command alias:
    ~git confi --global alias.ci "commit -s"~

    - Note: ~-~ here means when commit add the user's signature (includes the
      name an he email address), like =Signed-off-by: User Name <email@address>=.

      This is equired or mandatory to some project (Git, Linux kernel, Android,
      etc.).

*** DONE 4.7 Tink: Backup Our Work in This Chapter
    CLOSED: [217-07-15 Sat 22:25]
    Run ~git cone demo demo-step-1~ in the parent directory of =demo= (the name
    of our repsitory).

** TODO Chapte 5 staging Area Git
** TODO Chapte 6 The Object of Git
** TODO Chapte 7 Git Reset
** TODO Chapte 8 Git Checkout
** TODO Chapte 9 recovery
** TODO Chapte 10 The Basic Operation of Git
** TODO Chapte 11 TODO
** TODO Chapte 12 Change the History
** TODO Chapte 13 Git Clone
** TODO Chapte 14 Git reposoryGit Conek
* TODO Part 3 Git Harmony
** TODO Chapte 15 Git Protocol and ???
** TODO Chapte 16 Resolve Conflictions
** TODO Chapte 17 Git Milestones
** TODO Chapte 18 Git Branches
** TODO Chapte 19 Remote Repository
** TODO Chapte 20 Patch Files ???
* TODO Part 4 Git Collaboration Model (TODO ???)
** Chapter 21
** Chapter 22
** Chapter 23
** Chapter 24
** Chapter 25
** Chapter 26
** 
* Part 5 Build Git Server
* Part 6 Migrate to Git
* TODO Part 7 Other Usages of Git
** Chapter 36 /etckeeper/
** Chapter 37 /Gistore/
** Chapter 38 The Binary Files in Patches
** Chapter 39 Cloud Storage
* TODO Part 8 Some Discussion of Git
** TODO Chapter 40 Cross-Platform Operation
*** 40.1 Character Set Problem
*** 40.2 File name Capitalization Problem
*** 40.3 Newline Problem

** TODO Chapter 41 Other Features of Git
*** 41.1 Features
*** 41.2 Hooks and Templates
*** 41.3 Sparse Checkout and Shallow Clone
*** 41.4 Grafting and Replacement
*** 41.5 ~git notes~
* TODO Part 9 Appendix
** TODO Appendix A. Git Command indices
** TODO Appendix B. Git and CVS
** TODO Appendix C. Git and SVN
** TODO Appendix D. Git and Hg
