#+TITLE: Programtic Guide to Git
#+AUTHOR: Travis Swicegood
#+STARTUP: overview
#+STARTUP: entitiespretty

* Introduction - 9
** Who Is This Book For? - 9
** How to Read This Book - 10
** How Git Is Different - 12
** The Git Workflow - 13
** Online Resources - 16

* I Getting Started - 17
  - Covered in this part:
    + We start off with Task 1, Installing Git, on page 20 to handle
      installation. Git’s heritage in the Linux world means it can be
      compiled directly from source, but there are other (easier)
      options for every major operating system.

    + You need to tell Git a few configuration settings before you
      start using it, covered in Task 2, Configuring Git, on page 22.

    + Now that Git is installed and configured, you start using it in
      Task 3, Creating a New Repository, on page 24. You learn how
      to create a completely new repository.

    + Another way to start a Git repository is to create a clone of
      someone else’s repository, covered in Task 4, Creating a Local Copy of an
      Existing Repository, on page 26.
    
** Task 1. Installing Git - 20
** Task 2. Configuring Git - 22
** Task 3. Creating a New Repository - 24
** Task 4. Creating a Local Copy of an Existing Repository - 26

* II Working with Git 28
** Task 5. Seeing What Has Changed - 32
** Task 6. Staging Changes to Commit - 34
** Task 7. Committing Changes - 36
** Task 8. Ignoring Files - 38
** Task 9. Undoing Uncommitted Changes - 40
** Task 10. Moving Files in Git - 42
** Task 11. Deleting Files in Git - 44
** Task 12. Sharing Changes - 46

* III Organizing Your Repository with Branches and Tags - 48
** Task 13. Creating and Switching Branches - 54
** Task 14. Viewing Branches - 56
** Task 15. Merging Commits Between Branches - 58
** Task 16. Rewriting History by Rebasing - 60
** Task 17. Deleting Branches - 62
** Task 18. Tagging Milestones - 64

* IV Working with a Team - 66
** Task 19. Adding and Removing Remotes - 70
** Task 20. Retrieving Remote Changes - 72
** Task 21. Retrieving Remote Changes, Part II - 74
** Task 22. Sending Changes to Remotes - 76
** Task 23. Handling Remote Tags and Branches - 78

* V Branches and Merging Revisited - 80
** Task 24. Handling Conflicts - 82
** Task 25. Handling Conflicts with a GUI - 84
** Task 26. Temporarily Hiding Changes - 86
** Task 27. Cherry-Picking Commits - 88
** Task 28. Controlling How You Replay Commits - 90
** Task 29. Moving Branches - 92

* VI Working with the Repository's History - 94
** Task 30. Viewing the Log - 98
** Task 31. Filtering the Log Output - 100
** Task 32. Comparing Differences - 102
** Task 33. Generating Statistics About Changes - 104
** Task 34. Assigning Blame - 106

* VII Fixing Things - 108
** Task 35. Fixing Commits - 110
** Task 36. Reverting Commits - 112
** Task 37. Resetting Staged Changes and Commits - 114
** Task 38. Erasing Commits - 116
** Task 39. Finding Bugs with bisect - 118
** Task 40. Retrieving “Lost” Commits - 120

* VIII Moving Beyond the Basics - 122
** Task 41. Exporting Your Repository - 124
** Task 42. Doing Some Git Housekeeping - 126
** Task 43. Syncing with Subversion - 128
** Task 44. Initializing Bare Repositories - 130

* A Glossary - 132
** Index - 136
