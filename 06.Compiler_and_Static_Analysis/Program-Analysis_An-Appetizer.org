#+TITLE: Program Analysis
#+SUBTITLE: An Appetizer
#+VERSION: December 2020
#+AUTHOR: Flemming Nielson, Hanne Riis Nielson
#+STARTUP: overview
#+STARTUP: entitiespretty

* 1 Programs as Graphs - 1
** 1.1 Actions - 2
** 1.2 Memories - 3
** 1.3 Semantics - 5
** 1.4 Program Graphs - 10
** 1.5 Execution Sequences - 12
** 1.6 The Nature of Approximation - 14
   
* 2 The Bit-Vector Framework - 17
** 2.1 Reaching Definitions - 17
** 2.2 Live Variables - 24
** 2.3 Available Expressions - 29
** 2.4 Very Busy Expressions - 36
   
* 3 The Monotone Framework - 41
** 3.1 Beyond the Bit-Vector Framework - 41
** 3.2 Analysis Domains - 45
** 3.3 Analysis Functions - 50
** 3.4 Duality and Reversal - 55
  
* 4 Advanced Algorithms - 59
** 4.1 The Worklist Algorithms - 59
** 4.2 Reverse Postorder - 63
** 4.3 Strong Components and Natural Loops - 68
** 4.4 Duality and Reversal - 75
  
* 5 Analysis of Integers - 79
** 5.1 Detection of Signs Analysis - 79
** 5.2 Constant Propagation Analysis - 89
** 5.3 Interval Analysis - 97
  
* 6 Abstract Interpretation - 105
** 6.1 Abstract and Concretisation Functions - 105
** 6.2 Inducing along the Concretisation Function - 110
** 6.3 Inducing along the Abstraction Function - 114
** 6.4 Relational Detection of Signs Analysis - 120
  
* 7 Types for Information Flow Analysis - 127
** 7.1 Guarded Commands - 127
** 7.2 Security as Information Flow - 130
** 7.3 Multi-Level Security Policies - 136
** 7.4 Types for Measuring Leakage - 142
** 7.5 Types for Avoiding Leakage - 149
** 7.6 Algorithmic Issues - 153
  
* 8 Datalog Based Analyses - 159
** 8.1 Reaching Definitions is Datalog - 159
** 8.2 Control Flow Analysis in Datalog - 163
** 8.3 Stratified Datalog - 168
** 8.4 Program Analyses in Stratified Datalog - 173
  
* A The Guarded Commands Language - 179
* B The MicroC Language - 185
* C Project: An Analysis Module - 189
* Index - 195
