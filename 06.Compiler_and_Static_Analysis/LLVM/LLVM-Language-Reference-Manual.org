#+TITLE: LLVM Language Reference Manual
#+RELEASE: 1.0, May 16 2019
#+AUTHOR: WebAssembly Community Group
#+STARTUP: overview
#+STARTUP: entitiespretty

* Abstract
* Introduction
** Well-Formedness

* Identifiers
* High Level Structure
** Module Structure
** Linkage Types
** Calling Conventions
** Visibility Styles
** DLL Storage Classes
** Thread Local Storage Models
** Runtime Preemption Specifiers
** Structure Types
** Non-Integral Pointer Type
** Global Variables
** Functions
** Aliases
** IFuncs
** Comdats
** Named Metadata
** Parameter Attributes
** Garbage Collector Strategy Names
** Prefix Data
** Prologue Data
** Personality Function
** Attribute Groups
** Function Attributes
** Global Attributes
** Operand Bundles
*** Deoptimization Operand Bundles
*** Funclet Operand Bundles
*** GC Transition Operand Bundles

** Module-Level Inline Assembly
** Data Layout
** Target Triple
** Pointer Aliasing Rules
** Volatile Memory Accesses
** Memory Model for Concurrent Operations
** Atomic Memory Ordering Constraints
** Floating-Point Environment
** Fast-Math Flags
** Use-list Order Directives
** Source Filename

* Type System
** Void Type
** Function Type
** First Class Types
*** Single Value Types
**** Integer Type
**** Floating-Point Types
**** X86_mmx Type
**** Pointer Type
**** Vector Type

*** Label Type
*** Token Type
*** Metadata Type
*** Aggregate Types
**** Array Type
**** Structure Type
**** Opaque Structure Types

* Constants
** Simple Constants
** Complex Constants
** Global Variable and Function Addresses
** Undefined Values
** Poison Values
** Addresses of Basic Blocks
** Constant Expressions

* Other Values
** Inline Assembler Expressions
*** Inline Asm Constraint String
**** Output constraints
**** Input constraints
**** Indirect inputs and outputs
**** Clobber constraints
**** Constraint Codes
**** Supported Constraint Code List

*** Asm template argument modifiers
*** Inline Asm Metadata

* Metadata
** Metadata Nodes and Metadata Strings
*** Specialized Metadata Nodes
**** DICompileUnit
**** DIFile
**** DIBasicType
**** DISubroutineType
**** DIDerivedType
**** DICompositeType
**** DISubrange
**** DIEnumerator
**** DITemplateTypeParameter
**** DITemplateValueParameter
**** DINamespace
**** DIGlobalVariable
**** DIGlobalVariableExpression
**** DISubprogram
**** DILexicalBlock
**** DILexicalBlockFile
**** DILocation
**** DILocalVariable
**** DIExpression
**** DIObjCProperty
**** DIImportedEntity
**** DIMacro
**** DIMacroFile

*** 'tbaa' Metadata
**** Semantics
**** Representation

*** 'tbaa.struct' Metadata
*** 'noalias' and 'alias.scope' Metadata
*** 'fpmath' Metadata
*** 'range' Metadata
*** 'absolute_symbol' Metadata
*** 'callees' Metadata
*** 'callback' Metadata
*** 'unpredictable' Metadata
*** 'llvm.loop'
*** 'llvm.loop.disable_nonforced'
*** 'llvm.loop.vectorize' and 'llvm.loop.interleave'
*** 'llvm.loop.interleave.count' Metadata
*** 'llvm.loop.vectorize.enable' Metadata
*** 'llvm.loop.vectorize.width' Metadata
*** 'llvm.loop.vectorize.followup_vectorized' Metadata
*** 'llvm.loop.vectorize.followup_epilogue' Metadata
*** 'llvm.loop.vectorize.followup_all' Metadata
*** 'llvm.loop.unroll'
*** 'llvm.loop.unroll.count' Metadata
*** 'llvm.loop.unroll.disable' Metadata
*** 'llvm.loop.unroll.runtime.disable' Metadata
*** 'llvm.loop.unroll.enable' Metadata
*** 'llvm.loop.unroll.full' Metadata
*** 'llvm.loop.unroll.followup' Metadata
*** 'llvm.loop.unroll.followup_remainder' Metadata
*** 'llvm.loop.unroll_and_jam'
*** 'llvm.loop.unroll_and_jam.count' Metadata
*** 'llvm.loop.unroll_and_jam.disable' Metadata
*** 'llvm.loop.unroll_and_jam.enable' Metadata
*** 'llvm.loop.unroll_and_jam.followup_outer' Metadata
*** 'llvm.loop.unroll_and_jam.followup_inner' Metadata
*** 'llvm.loop.unroll_and_jam.followup_remainder_outer' Metadata
*** 'llvm.loop.unroll_and_jam.followup_remainder_inner' Metadata
*** 'llvm.loop.unroll_and_jam.followup_all' Metadata
*** 'llvm.loop.licm_versioning.disable' Metadata
*** 'llvm.loop.distribute.enable' Metadata
*** 'llvm.loop.distribute.followup_coincident' Metadata
*** 'llvm.loop.distribute.followup_sequential' Metadata
*** 'llvm.loop.distribute.followup_fallback' Metadata
*** 'llvm.loop.distribute.followup_all' Metadata
*** 'llvm.access.group' Metadata
*** 'llvm.loop.parallel_accesses' Metadata
*** 'irr_loop' Metadata
*** 'invariant.group' Metadata
*** 'type' Metadata
*** 'associated' Metadata
*** 'prof' Metadata
**** branch_weights
**** function_entry_count
**** VP

* Module Flags Metadata
** Objective-C Garbage Collection Module Flags Metadata
** C type width Module Flags Metadata

* Automatic Linker Flags Named Metadata
* ThinLTO Summary
** Module Path Summary Entry
** Global Value Summary Entry
*** Function Summary
*** Global Variable Summary
*** Alias Summary
*** Function Flags
*** Calls
*** Refs
*** TypeIdInfo
**** TypeTests
**** TypeTestAssumeVCalls
**** TypeCheckedLoadVCalls
**** TypeTestAssumeConstVCalls
**** TypeCheckedLoadConstVCalls

** Type ID Summary Entry

* Intrinsic Global Variables
** The 'llvm.used' Global Variable
** The 'llvm.compiler.used' Global Variable
** The 'llvm.global\under{}ctors' Global Variable
** The 'llvm.global\under{}dtors' Global Variable

* Instruction Reference
** Terminator Instructions
*** 'ret' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'br' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'switch' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Implementation:
**** Example:

*** 'indirectbr' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Implementation:
**** Example:

*** 'invoke' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'callbr' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'resume' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'catchswitch' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'catchret' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'cleanupret' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'unreachable' Instruction
**** Syntax:
**** Overview:
**** Semantics:

** Unary Operations
*** 'fneg' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Binary Operations
*** 'add' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fadd' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'sub' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fsub' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'mul' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fmul' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'udiv' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'sdiv' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fdiv' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'urem' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'srem' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'frem' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Bitwise Binary Operations
*** 'shl' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'lshr' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'ashr' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'and' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'or' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'xor' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Vector Operations
*** 'extractelement' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'insertelement' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'shufflevector' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:
** Aggregate Operations
*** 'extractvalue' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'insertvalue' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Memory Access and Addressing Operations
*** 'alloca' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'load' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Examples:

*** 'store' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fence' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'cmpxchg' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'atomicrmw' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'getelementptr' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** Vector of pointers:

** Conversion Operations
*** 'trunc .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'zext .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'sext .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fptrunc .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fpext .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fptoui .. to' Instruction
****'Syntax:
****'Overview:
****'Arguments:
****'Semantics:
****'Example:

*** 'fptosi .. to' Instruction
****'Syntax:
****'Overview:
****'Arguments:
****'Semantics:
****'Example:

*** 'uitofp .. to' Instruction
****'Syntax:
****'Overview:
****'Arguments:
****'Semantics:
****'Example:

*** 'sitofp .. to' Instruction
****'Syntax:
****'Overview:
****'Arguments:
****'Semantics:
****'Example:

*** 'ptrtoint .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'inttoptr .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'bitcast .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'addrspacecast .. to' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Other Operations
*** 'icmp' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'fcmp' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'phi' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'select' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'call' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'va_arg' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'landingpad' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'catchpad' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

*** 'cleanuppad' Instruction
**** Syntax:
**** Overview:
**** Arguments:
**** Semantics:
**** Example:

** Intrinsic Functions
*** Variable Argument Handling Intrinsics
**** 'llvm.va\under{}start' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.va\under{}end' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.va\under{}copy' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Accurate Garbage Collection Intrinsics
**** Experimental Statepoint Intrinsics
**** 'llvm.gcroot' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.gcread' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.gcwrite' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Code Generator Intrinsics
**** 'llvm.returnaddress' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.addressofreturnaddress' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.sponentry' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.frameaddress' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.localescape' and 'llvm.localrecover' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.read\under{}register' and 'llvm.write\under{}register' Intrinsics
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.stacksave' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.stackrestore' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.get.dynamic.area.offset' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.prefetch' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.pcmarker' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.readcyclecounter' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.clear\under{}cache' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.instrprof.increment' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.instrprof.increment.step' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.instrprof.value.profile' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.thread.pointer' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

*** Standard C Library Intrinsics
**** 'llvm.memcpy' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.memmove' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.memset.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.sqrt.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.powi.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.sin.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.cos.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.pow.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.exp.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.exp2.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.log.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.log10.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.log2.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.fma.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.fabs.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.minnum.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.maxnum.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.minimum.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.maximum.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.copysign.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.floor.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.ceil.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.trunc.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.rint.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.nearbyint.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.round.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Bit Manipulation Intrinsics
**** 'llvm.bitreverse.*' Intrinsics
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.bswap.*' Intrinsics
***** Syntax:
***** Overview:
***** Semantics:

**** 'llvm.ctpop.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.ctlz.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.cttz.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.fshl.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Example:

**** 'llvm.fshr.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Example:

*** Arithmetic with Overflow Intrinsics
**** 'llvm.sadd.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.uadd.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.ssub.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.usub.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.smul.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.umul.with.overflow.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

*** Saturation Arithmetic Intrinsics
**** 'llvm.sadd.sat.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

**** 'llvm.uadd.sat.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

**** 'llvm.ssub.sat.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

**** 'llvm.usub.sat.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

*** Fixed Point Arithmetic Intrinsics
**** 'llvm.smul.fix.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

**** 'llvm.umul.fix.*' Intrinsics
***** Syntax
***** Overview
***** Arguments
***** Semantics:
***** Examples

*** Specialised Arithmetic Intrinsics
**** 'llvm.canonicalize.*' Intrinsic
***** Syntax:
***** Overview:

**** 'llvm.fmuladd.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

*** Experimental Vector Reduction Intrinsics
**** 'llvm.experimental.vector.reduce.add.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.fadd.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Examples:

**** 'llvm.experimental.vector.reduce.mul.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.fmul.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Examples:

**** 'llvm.experimental.vector.reduce.and.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.or.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.xor.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.smax.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.smin.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.umax.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.umin.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.fmax.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

**** 'llvm.experimental.vector.reduce.fmin.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:

*** Half Precision Floating-Point Intrinsics
**** 'llvm.convert.to.fp16' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

**** 'llvm.convert.from.fp16' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Examples:

*** Debugger Intrinsics
*** Exception Handling Intrinsics
*** Trampoline Intrinsics
**** 'llvm.init.trampoline' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.adjust.trampoline' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Masked Vector Load and Store Intrinsics
**** 'llvm.masked.load.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.masked.store.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Masked Vector Gather and Scatter Intrinsics
**** 'llvm.masked.gather.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.masked.scatter.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Masked Vector Expanding Load and Compressing Store Intrinsics
**** 'llvm.masked.expandload.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.masked.compressstore.*' Intrinsics
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Memory Use Markers
**** 'llvm.lifetime.start' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.lifetime.end' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.invariant.start' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.invariant.end' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.launder.invariant.group' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.strip.invariant.group' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Constrained Floating-Point Intrinsics
**** 'llvm.experimental.constrained.fadd' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fsub' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fmul' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fdiv' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.frem' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fma' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fptrunc' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.fpext' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** Constrained libm-equivalent Intrinsics
**** 'llvm.experimental.constrained.sqrt' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.pow' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.powi' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.sin' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.cos' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** ‘llvm.experimental.constrained.exp' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.exp2' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.log' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.log10' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.log2' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.rint' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.nearbyint' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.maxnum' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.minnum' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.ceil' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.floor' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.round' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.constrained.trunc' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

*** General Intrinsics
**** 'llvm.var.annotation' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.ptr.annotation.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.annotation.*' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.codeview.annotation' Intrinsic
***** Syntax:
***** Arguments:

**** 'llvm.trap' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.debugtrap' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.stackprotector' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.stackguard’ Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.objectsize' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
**** 'llvm.expect' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.assume' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** ‘llvm.ssa\under{}' Intrinsic
***** Syntax:
***** Arguments:
***** Overview:

**** 'llvm.type.test' Intrinsic
***** Syntax:
***** Arguments:
***** Overview:

**** 'llvm.type.checked.load' Intrinsic
***** Syntax:
***** Arguments:
***** Overview:

**** 'llvm.donothing' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:

**** 'llvm.experimental.deoptimize' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Lowering:
**** 'llvm.experimental.guard' Intrinsic
***** Syntax:
***** Overview:

**** 'llvm.experimental.widenable.condition' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Guard widening:
***** Lowering:

**** 'llvm.load.relative' Intrinsic
***** Syntax:
***** Overview:

**** 'llvm.sideeffect' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
     
**** 'llvm.is.constant.*' Intrinsic
***** Syntax:
***** Overview:
***** Semantics:

*** Stack Map Intrinsics
*** Element Wise Atomic Memory Intrinsics
**** 'llvm.memcpy.element.unordered.atomic' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Lowering:

**** 'llvm.memmove.element.unordered.atomic' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Lowering:

**** 'llvm.memset.element.unordered.atomic' Intrinsic
***** Syntax:
***** Overview:
***** Arguments:
***** Semantics:
***** Lowering:

*** Objective-C ARC Runtime Intrinsics
**** 'llvm.objc.autorelease' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.autoreleasePoolPop' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.autoreleasePoolPush' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.autoreleaseReturnValue' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.copyWeak' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.destroyWeak' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.initWeak' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.loadWeak' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.loadWeakRetained' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.moveWeak' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.release' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.retain' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.retainAutorelease' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.retainAutoreleaseReturnValue' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.retainAutoreleasedReturnValue' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.retainBlock' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.storeStrong' Intrinsic
***** Syntax:
***** Lowering:

**** 'llvm.objc.storeWeak' Intrinsic
***** Syntax:
***** Lowering:
