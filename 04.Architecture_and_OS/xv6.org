#+TITLE: xv6
#+SUBTITLE: a simple, Unix-like teaching operating system
#+VERSION: Draft as of August 29, 2017
#+AUTHOR: Russ Cox, Frans Kaashoek, Robert Morris
#+STARTUP: overview
#+STARTUP: entitiespretty

* TODO 0 Operating system interfaces - 7
** TODO Processes and memory - 8
** TODO I/O and File descriptors - 10
** TODO Pipes - 13
** TODO File system - 14
** TODO Real world - 16

* TODO 1 Operating system organization - 17
** TODO Abstracting physical resources - 17
** TODO User mode, kernel mode, and system calls - 18
** TODO Kernel organization - 19
** TODO Process overview - 20
** TODO Code: the first address space - 22
** TODO Code: creating the first process - 23
** TODO Code: Running the first process - 25
** TODO The first system call: exec - 26
** TODO Real world - 27
** TODO Exercises - 27
   1. 
   2. 

* TODO 2 Page tables - 29
** TODO Paging hardware - 29
** TODO Process address space - 30
** TODO Code: creating an address space - 32
** TODO Physical memory allocation - 32
** TODO Code: Physical memory allocator - 33
** TODO User part of an address space - 34
** TODO Code: sbrk - 34
** TODO Code: exec - 35
** TODO Real world - 36
** TODO Exercises - 37
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 

* TODO 3 Traps, interrupts, and drivers - 39
** TODO Systems calls, exceptions, and interrupts - 39
** TODO X86 protection - 40
** TODO Code: The first system call - 41
** TODO Code: Assembly trap handlers - 42
** TODO Code: C trap handler - 44
** TODO Code: System calls - 44
** TODO Code: Interrupts - 45
** TODO Drivers - 46
** TODO Code: Disk driver - 47
** TODO Real world - 48
** TODO Exercises - 49
   1. 
   2. 
   3. 
   4. 

* TODO 4 Locking - 51
** TODO Race conditions - 51
** TODO Code: Locks - 53
** TODO Code: Using locks - 54
** TODO Deadlock and lock ordering - 55
** TODO Interrupt handlers - 56
** TODO Instruction and memory ordering - 57
** TODO Sellp locks - 57
** TODO Limitations of locks - 58
** TODO Real world - 59
** TODO Exercises - 59
   1. 
   2. 
   3. 
   4. 

* TODO 5 Scheduling - 61
** Multiplexing - 61
** Code: Context switch - 62
** Code: Scheduling - 63
** Code: mycpu and myproc - 65
** Sleep and wakeup - 65
** Code: Sleep and wakeup - 69
** Code: Pipe - 70
** Code: Wait, exit, and kill - 71
** Real words - 72
** Exercises - 74
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 

* TODO 6 File system - 77
** Overview - 77
** Buffer cache layer - 78
** Code: Buffer cache - 79
** Logging layer - 80
** Log design - 81
** Code: logging - 82
** Code: Block allocator - 83
** Inode layer - 83
** Code: Inodes - 84
** Code: Inode content - 86
** Code: directory layer - 87
** Code: Path names - 88
** File descriptor layer - 89
** Code: System calls - 90
** Real world - 91
** Exercises - 92
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 
   8. 
   9. 

* TODO 7 Summary - 93
* TODO A PC hardware - 95
** TODO Processor and memory - 95
** TODO I/O - 96

* TODO B The boot loader 99
** Code: Assembly bootstrap - 99
** Code: C bootstrap - 102
** Real world - 102
** Exercises - 103
   1. 
   2. 
   3. 

* Index 105
