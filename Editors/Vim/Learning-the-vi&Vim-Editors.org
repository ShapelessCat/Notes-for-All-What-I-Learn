#+TITLE: Learning the vi & Vim Editors
#+SUBTITLE: Power and Agility Beyond Just Text Editing
#+VERSION: 8th, 2022
#+AUTHOR: Arnold Robbins & Elbert Hannah
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* xxx
* Preface - xv
* Part I. vi and Vim Fundamentals
** 1. Introducing vi and Vim - 3
*** Text Editors and Text Editing - 3
**** Text Editors - 3
**** Text Editing - 6

*** A Brief Historical Perspective - 7
*** Opening and Closing Files - 9
**** Opening a File from the Command Line - 9
**** Opening a File from the GUI - 10
**** Problems Opening Files - 10
**** Modus Operandi - 11
**** Saving and Quitting a File - 12

*** Quitting Without Saving Edits - 13
**** Problems Saving Files - 13
**** Exercises - 14

** 2. Simple Editing - 15
*** vi Commands - 16
*** Moving the Cursor in Command Mode - 17
**** Single Movements - 18
**** Numeric Arguments - 20
**** Movement Within a Line - 20
**** Movement by Text Blocks - 22

*** Simple Edits - 23
**** Inserting New Text - 24
**** Appending Text - 25
**** Changing Text - 25
**** Changing Case - 28
**** Deleting Text - 28
**** Moving Text - 32
**** Copying Text - 33
**** Repeating or Undoing Your Last Command - 34

*** More Ways to Insert Text - 36
**** Numeric Arguments for Insert Commands - 37

*** Joining Two Lines with J - 37
**** Problems with vi Commands - 38

*** Mode Indicators - 38
*** Review of Basic vi Commands - 39
** 3. Moving Around in a Hurry - 41
*** Movement by Screens - 41
**** Scrolling the Screen - 42
**** Repositioning the Screen with z - 43
**** Redrawing the Screen - 43
**** Movement Within a Screen - 44
**** Movement by Line - 45

*** Movement by Text Blocks - 46
*** Movement by Searches - 47
**** Repeating Searches - 48
**** Current Line Searches - 50

*** Movement by Line Number - 51
**** The G (Go To) Command - 52

*** Review of vi Motion Commands - 52

** 4. Beyond the Basics - 55
*** More Command Combinations - 55
*** Options When Starting vi and Vim - 56
**** Advancing to a Specific Place - 57
**** Read-Only Mode - 58
**** Recovering a Buffer - 59

*** Making Use of Registers - 60
**** Recovering Deletions - 60
**** Yanking to Named Registers - 61

*** Marking Your Place - 62
*** Other Advanced Edits - 63
*** Review of Register and Marking Commands - 63
** 5. Introducing the ex Editor - 65
*** ex Commands - 66
**** Exercise: The ex Editor - 68
**** Problem Getting to Visual Mode - 68

*** Editing with ex - 68
**** Line Addresses - 69
**** Defining a Range of Lines - 69
**** Line-Addressing Symbols - 71
**** Search Patterns - 72
**** Redefining the Current Line Position - 73
**** Global Searches - 73
**** Combining ex Commands - 74

*** Saving and Exiting Files - 74
**** Renaming the Buffer - 76
**** Saving Part of a File - 76
**** Appending to a Saved File - 76

*** Copying a File into Another File - 77
*** Editing Multiple Files - 77
**** Invoking Vim on Multiple Files - 78
**** Using the Argument List - 78
**** Calling in New Files - 79
**** Filename Shortcuts - 79
**** Switching Files from Command Mode - 80
**** Edits Between Files - 80

*** ex Command Summaries - 81

** 6. Global Replacement - 85
*** The Substitute Command - 85
*** Confirming Substitutions - 86
*** Doing Things Globally Across the File - 88
*** Context-Sensitive Replacement - 88
*** Pattern-Matching Rules - 89
**** Metacharacters Used in Search Patterns - 90
**** POSIX Bracket Expressions - 92
**** Metacharacters Used in Replacement Strings - 94
**** More Substitution Tricks - 96

*** Pattern-Matching Examples - 97
**** Search for General Class of Words - 98
**** Block Move by Patterns - 99
**** More Examples - 100

*** A Final Look at Pattern Matching - 106
**** Deleting an Unknown Block of Text - 106
**** Switching Items in a Textual Database - 107
**** Using :g to Repeat a Command - 109
**** Collecting Lines - 110

** 7. Advanced Editing - 113
*** Customizing vi and Vim - 114
**** The :set Command - 114
**** The .exrc File - 116
**** Alternate Environments - 116
**** Some Useful Options - 117

*** Executing Unix Commands - 118
**** Filtering Text Through a Command - 120

*** Saving Commands - 122
**** Word Abbreviation - 122
**** Using the map Command - 124
**** Mapping with a Leader - 125
**** Protecting Keys from Interpretation by ex - 125
**** A Complex Mapping Example - 126
**** More Examples of Mapping Keys - 128
**** Mapping Keys for Insert Mode - 130
**** Mapping Function Keys - 131
**** Mapping Other Special Keys - 132
**** Mapping Multiple Input Keys - 134
**** @-Functions - 135
**** Executing Registers from ex - 136

*** Using ex Scripts - 136
**** Looping in a Shell Script - 137
**** Here Documents - 139
**** Sorting Text Blocks: A Sample ex Script - 140
**** Comments in ex Scripts - 142
**** Beyond ex - 142

*** Editing Program Source Code - 143
**** Indentation Control - 143
**** A Special Search Command - 146
**** Using Tags - 147
**** Enhanced Tags - 148
* Part II. Vim
** 8. Vim (vi Improved): Overview and Improvements over vi - 157
*** About Vim - 158
*** Overview - 159
**** Author and History - 159
**** Why Vim? - 160
**** Compare and Contrast with vi - 160
**** Categories of Features - 161
**** Philosophy - 164

*** Aids and Easy Modes for New Users - 164
*** Built-In Help - 165
*** Startup and Initialization Options - 167
**** Command-Line Options - 167
**** Behaviors Associated to Command Name - 170
**** System and User Configuration Files - 171
**** Environment Variables - 172

*** New Motion Commands - 174
**** Visual Mode Motion - 175

*** Extended Regular Expressions - 176
*** Extended Undo - 180
*** Incremental Searching - 181
*** Left-Right Scrolling - 181
*** Summary - 181

** 9. Graphical Vim (gvim) - 183
*** General Introduction to gvim - 184
**** Starting gvim - 184
**** Using the Mouse - 186
**** Useful Menus - 188

*** Customizing Scrollbars, Menus, and Toolbars - 190
**** Scrollbars - 190
**** Menus - 191
**** Toolbars - 199
**** Tooltips - 202

*** gvim in Microsoft Windows - 202
*** gvim in the X Window System - 203
*** Running gvim in Microsoft Windows WSL - 203
**** Installing gvim in WSL 2 - 204
**** Installing an X Server for Windows - 205
**** Configuring the X Server for Windows - 205

*** GUI Options and Command Synopsis - 211

** 10. Multiple Windows in Vim - 213
*** Initiating Multiwindow Editing - 215
**** Multiwindow Initiation from the Command Line - 215
**** Multiwindow Editing Inside Vim - 217

*** Opening Windows - 218
**** New Windows - 218
**** Options During Splits - 218
**** Conditional Split Commands - 220
**** Window Command Summary - 220

*** Moving Around Windows (Getting Your Cursor from Here to There) - 221
*** Moving Windows Around - 222
**** Moving Windows (Rotate or Exchange) - 222
**** Moving Windows and Changing Their Layout - 223
**** Window Move Commands: Synopsis - 224

*** Resizing Windows - 224
**** Window Resize Commands - 225
**** Window Sizing Options - 226
**** Resizing Command Synopsis - 227

*** Buffers and Their Interaction with Windows - 228
**** Vim’s Special Buffers - 229
**** Hidden Buffers - 229
**** Buffer Commands - 230
**** Buffer Command Synopsis - 231

*** Playing Tag with Windows - 231
*** Tabbed Editing - 233
*** Closing and Quitting Windows - 234
*** Summary - 236

** 11. Vim Enhancements for Programmers - 237
*** Folding and Outlining (Outline Mode) - 238
**** The Fold Commands - 240
**** Manual Folding - 242
**** Outlining - 247
**** A Few Words About the Other Fold Methods - 249

*** Auto and Smart Indenting - 250
**** Vim autoindent Extensions to vi’s autoindent - 251
**** smartindent - 251
**** cindent - 252
**** indentexpr - 258
**** A Final Word on Indentation - 259

*** Keyword and Dictionary Word Completion - 260
**** Insertion Completion Commands - 261
**** Some Final Comments on Vim Autocompletion - 268

*** Tag Stacking - 269
*** Syntax Highlighting - 271
**** Getting Started - 271
**** Customization - 272
**** Rolling Your Own - 278

*** Compiling and Checking Errors with Vim - 281
**** More Uses for the Quickfix List Window - 285

*** Some Final Thoughts on Vim for Writing Programs - 287
** 12. Vim Scripts - 289
*** What’s Your Favorite Color (Scheme)? - 289
**** Conditional Execution - 290
**** Variables - 292
**** The execute Command - 293
**** Defining Functions - 295
**** A Nice Vim Piggybacking Trick - 296
**** Tuning a Vim Script with Global Variables - 297
**** Arrays - 299

*** Dynamic File Type Configuration Through Scripting - 300
**** Autocommands - 300
**** Checking Options - 302
**** Buffer Variables - 303
**** The exists() Function - 304
**** Autocommands and Groups - 306
**** Deleting Autocommands - 306

*** Some Additional Thoughts About Vim Scripting - 308
**** A Useful Vim Script Example - 309
**** More About Variables - 310
**** Expressions - 311
**** Extensions - 311
**** A Few More Comments About autocmd - 311
**** Internal Functions - 311

*** Resources - 313
** 13. Other Cool Stuff in Vim - 315
*** Spell It! (i-t) - 315
**** For a Different Take on Words, Try Thesaurus - 318

*** Editing Binary Files - 318
*** Digraphs: Non-ASCII Characters - 320
*** Editing Files in Other Places - 322
*** Navigating and Changing Directories - 324
*** Backups with Vim - 326
*** HTML Your Text - 327
*** What’s the Difference? - 328
*** viminfo: Now, Where Was I? - 330
**** The viminfo Option - 331
**** The mksession Command - 332

*** What’s My Line (Size)? - 334
*** Abbreviations of Vim Commands and Options - 336
*** A Few Quickies (Not Necessarily Vim-Specific) - 337
*** More Resources - 338

** 14. Some Vim Power Techniques - 339
*** Several Convenience Maps - 339
**** Exiting Vim Simplified - 339
**** Resize Your Window - 340
**** Double Your Fun - 340

*** Moving into the Fast Lane - 343
**** Finding a Hard-to-Remember Command - 343
**** Analyzing a Famous Speech - 345
**** Some More Use Cases - 348

*** Hitting the Speed Limit - 350
*** Enhancing the Status Line - 352
*** Summary - 353
* Part III. Vim in the Larger Milieu
** 15. Vim as IDE: Some Assembly Required - 357
*** Plug-In Managers - 357
*** Finding Just the Right Plug-In - 359
*** Why Do We Want an IDE? - 360
*** Doing It Yourself - 361
**** EditorConfig: Consistent Text Editing Setup - 361
**** NERDTree: File Tree Traversal Within Vim - 362
**** nerdtree-git-plug-in: NERDTree with Git Status Indicators - 362
**** Fugitive: Running Git from Within Vim - 363
**** Completion - 365
**** Termdebug: Use GDB Directly Within Vim - 369

*** All-in-One IDEs - 370
*** Coding Is Great, but What If I’m a Writer? - 372
*** Conclusion - 373

** 16. vi Is Everywhere - 375
*** Introduction - 375
*** Improving the Command-Line Experience - 375
*** Sharing Multiple Shells - 376
*** The readline Library - 377
**** The Bash Shell - 377
**** Other Programs - 380
**** The .inputrc File - 380

*** Other Unix Shells - 381
**** The Z Shell (zsh) - 382
**** Keep As Much History As You Can - 382
**** Command-Line Editing: Some Closing Thoughts - 383

*** Windows PowerShell - 384
*** Developer Tools - 384
**** The Clewn GDB Driver - 384
**** CGDB: Curses GDB - 385
**** Vim Inside Visual Studio - 386
**** Vim for Visual Studio Code - 387

*** Unix Utilities - 391
**** More or Less? - 391
**** screen - 393

*** And ..., Browsers! - 397
**** Wasavi - 398
**** Vim + Chromium = Vimium - 399

*** vi for MS Word and Outlook - 405
*** Honorable Mention: Tools with Some vi Features - 408
**** Google Mail - 408
**** Microsoft PowerToys - 408

*** Summary - 409

** 17. Epilogue - 411
* Part IV. Appendixes
** A. The vi, ex, and Vim Editors - 415
** B. Setting Options - 461
** C. The Lighter Side of vi - 471
** D. vi and Vim: Source Code and Building - 483

* Index - 491
