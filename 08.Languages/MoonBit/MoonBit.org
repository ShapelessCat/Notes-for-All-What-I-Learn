#+TITLE: MoonBit
#+VERSION: beta-preview 2024-10-10
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

MoonBit is an end-to-end programming language toolchain
FOR *cloud and edge computing using WebAssembly.*

The IDE environment is available at https://try.moonbitlang.com without any
installation; it does not rely on any server either.

* MoonBit
** Status and aimed timeline
- MoonBit is currently in beta-preview.

- We expect to reach beta in 2024/11/22, and 1.0 in 2025.

** Main advantages
- Generate significantly smaller WASM output than any existing solutions.
- Much faster runtime performance.
- State of the art compile-time performance.
- Simple but practical, data-oriented language design.

** Overview
*** Program entrance
*** Expressions and Statements

** Functions
*** Top-Level Functions
*** Local Functions
*** Function Applications
*** Labelled arguments
*** Optional arguments
*** Autofill arguments

** Control Structures
*** Conditional Expressions
*** While Loops
*** For Loop
*** ~for .. in~ loop
*** Functional Loop
*** Guard Statement

** TODO Iterator
*** Implementation details

** Built-in Data Structures
*** Boolean
*** Number
*** String
*** Char
*** Byte(s)
*** Tuple
*** Array
*** Map

** Json literal
** Variable Binding
** Data Types
*** Struct
*** Enum
*** NewType

** Pattern Matching
*** Map Pattern
*** Json Pattern

** Operators
*** Operator Overloading
*** Pipe operator
*** Cascade Operator
*** Bitwise Operator

** TODO Error Handling - =START HERE!!!=
*** Error types
*** The Default Error Type
*** Handling Errors
*** Error Inference

** Generics
** Access Control
** Method system
** View
** Trait system
** Access control of methods and direct implementation of traits
** Automatically derive builtin traits
** Trait objects
** Test Blocks
** Doc Comments
*** Pragmas

** MoonBit's build system

* MoonBit's Build System Tutorial
** 1. Tutorial
*** Prerequisites
*** Creating a New Module
*** Understanding the Module Directory Structure
*** Working with Packages
*** Package Importing
*** Creating and Using a New Package
*** Adding Tests
*** Stand-alone test files

** 2. Moon Commands
# Command-Line Help for ~moon~

** 3. Module Configuration
*** 3.1. name
*** 3.2. version
*** 3.3. deps
*** 3.4. readme
*** 3.5. repository
*** 3.6. license
*** 3.7. keywords
*** 3.8. description
*** 3.9. source
*** 3.10. warn-list
*** 3.11. alert-list

** 4. Package Configuration
*** 4.1. name
*** 4.2. is-main
*** 4.3. import
*** 4.4. test-import
*** 4.5. wbtest-import
*** 4.6. link
**** 4.6.1. wasm
**** 4.6.2. wasm-gc
**** 4.6.3. js

*** 4.7. warn-list
*** 4.8. alert-list
*** 4.9. targets
*** 4.10. pre-build

** 5. JSON Schema

* Foreign Function Interface (FFI)
** FFI
*** Declare Foreign Reference
*** Declare Foreign Function
*** Exported functions
*** Use compiled Wasm
**** Provide host functions

** Example: Smiling face

* MoonBit's Package Manager Tutorial
** Overview
** Setup mooncakes.io account
** Update index
** Setup MoonBit project
** Add dependencies
** Import packages from module
** Remove dependencies
** Publish your module
*** Semantic versioning convention
*** Readme & metadata
*** Moondoc

* A Tour of MoonBit for Beginners
** Installation
*** the Extension
*** the toolchain

** Start Writing
*** Variables
*** Function

** Implementing List
*** enum type
*** Trait
*** Pattern Matching

** Iteration
** Closing

* Error handling in MoonBit
** Example: Division by Zero
** Calling an error-able function
*** As-is calling
*** Convert to Result
**** Extracting values
**** Mapping values

** Built-in error type and functions

* Example
** Sudoku Solver
** Lambda calculus
** G-Machine 1
** G-Machine 2
** G-Machine 3
** Myers diff
** Myers diff 2
** Myers diff 3
