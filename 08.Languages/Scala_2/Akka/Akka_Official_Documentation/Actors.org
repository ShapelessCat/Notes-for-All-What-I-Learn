#+TITLE: Actors
#+VERSION: 2.7.0 -> 2.8.3
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Introduction to Actors
** Module info
** Akka Actors
** First example
** A More Complex Example

* Actor lifecycle
** Dependency
** Introduction
** Creating Actors
** Stopping Actors
** Watching Actors

* Interaction Patterns
** Dependency
** Introduction
** Fire and Forget
** Request-Response
** Adapted Response
** Request-Response with ask between two actors
** Request-Response with ask from outside an Actor
** Generic response wrapper
** Ignoring replies
** Send Future result to self
** Per session child Actor
** General purpose response aggregator
** Latency tail chopping
** Scheduling messages to self
** Responding to a sharded actor

* Fault Tolerance
** Supervision
** Child actors are stopped when parent is restarting
** The PreRestart signal
** Bubble failures up through the hierarchy

* Actor discovery
** Dependency
** Obtaining Actor references
** Receptionist
** Cluster Receptionist
** Receptionist Scalability

* Routers
** Dependency
** Introduction
** Pool Router
** Group Router
** Routing strategies
** Routers and performance

* Stash
** Dependency
** Introduction

* Behaviors as finite state machines
** Example project

* Coordinated Shutdown
* Dispatchers
** Dependency
** Introduction
** Default dispatcher
** Internal dispatcher
** Looking up a Dispatcher
** Selecting a dispatcher
** Types of dispatchers
** Dispatcher aliases
** Blocking Needs Careful Management
** More dispatcher configuration examples

* Mailboxes
** Dependency
** Introduction
** Selecting what mailbox is used
** Mailbox Implementations
** Custom Mailbox type

* Testing
** Module info
** Introduction
** Asynchronous testing
** Synchronous behavior testing

* Coexistence
** Dependency
** Introduction
** Classic to typed
** Typed to classic
** Supervision

* Style guide
** Functional versus object-oriented style
** Passing around too many parameters
** Behavior factory method
** Where to define messages
** Public versus private messages
** Partial versus total Function
** How to compose Partial Functions
** ask versus ?
** Nesting setup
** Additional naming conventions

* Learning Akka Typed from Classic
** Dependencies
** Package names
** Actor definition
** actorOf and Props
** ActorRef
** ActorSystem
** become
** sender
** parent
** Supervision
** Lifecycle hooks
** watch
** Stopping
** ActorSelection
** ask
** pipeTo
** ActorContext.children
** Remote deployment
** Routers
** FSM
** Timers
** Stash
** PersistentActor
** Asynchronous Testing
** Synchronous Testing
