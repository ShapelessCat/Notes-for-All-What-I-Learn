#+TITLE: Persistence (Event Sourcing)
#+VERSION: 2.7.0
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Event Sourcing
** Module info
** Introduction
** Example and core API
** Effects and Side Effects
** Cluster Sharding and EventSourcedBehavior
** Accessing the ActorContext
** Changing Behavior
** Replies
** Serialization
** Recovery
** Tagging
** Event adapters
** Wrapping EventSourcedBehavior
** Journal failures
** Stash
** Scaling out
** Configuration
** Example project

* Replicated Event Sourcing
** Relaxing the single-writer principle for availability
** API
** Resolving conflicting updates
** Side effects
** How it works
** Sharded Replicated Event Sourced entities
** Tagging events and running projections
** Direct Replication of Events
** Hot Standby
** Examples
** Journal Support

* CQRS
* Style Guide
** Event handlers in the state
** Command handlers in the state
** Optional initial state

* Snapshotting
** Snapshots
** Snapshot failures
** Snapshot deletion
** Event deletion

* Testing
** Module info
** Unit testing with the BehaviorTestKit
** Unit testing with the the ActorTestKit and EventSourcedBehaviorTestKit
** Persistence TestKit
** Integration testing

* EventSourced behaviors as finite state machines
* Schema Evolution for Event Sourced Actors
** Dependency
** Introduction
** Schema evolution in event-sourced systems
** Picking the right serialization format
** Schema evolution in action

* Persistence Query
** Dependency
** Introduction
** Design overview
** Read Journals
** Performance and denormalization
** Query plugins
** Scaling out
** Example project

* Persistence Query for LevelDB
** Dependency
** Introduction
** How to get the ReadJournal
** Supported Queries
** Configuration

* Persistence Plugins
** Eager initialization of persistence plugin
** Pre-packaged plugins

* Persistence - Building a storage backend
** Journal plugin API
** Snapshot store plugin API
** Plugin TCK
** Corrupt event logs

* Replicated Event Sourcing Examples
** Auction example
** Shopping cart example
