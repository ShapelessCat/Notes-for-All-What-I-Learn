#+TITLE: Scala Collections
#+AUTHOR: Martin Odersky, Julien Richard-Foy
#+CONTRIBUTORS: SethTisue, kotobotov, ashawley, julienrf, dongxuwang
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Introduction
- *Easy to use*
- *Concise*
- *Safe*
- *Fast*
- *Parallel*
- *Universal*
- *Example*

* Mutable and Immutable Collections
** An Overview of the Collections API

* Trait ~Iterable~
** Operations in Class ~Iterable~

* The sequence traits ~Seq~, ~IndexedSeq~, and ~LinearSeq~
** Operations in Class ~Seq~
*** Operations in Class ~mutable.IndexedSeq~

** ~Buffer~'s
*** Operations in Class ~Buffer~

* ~Set~'s
** Operations in Class ~Set~
** Operations in Class ~immutable.Set~
** Operations in Class ~mutable.Set~
** Sorted Sets
** Bitsets

* ~Map~'s
** Operations in Class ~Map~
** Operations in Class ~immutable.Map~
** Operations in Class ~mutable.Map~

* Concrete Immutable Collection Classes
** Lists
** LazyLists
** Immutable ArraySeqs
** Vectors
** Immutable Queues
** Ranges
** Compressed Hash-Array Mapped Prefix-trees
** Red-Black Trees
** Immutable BitSets
** VectorMaps
** ListMaps

* Concrete Mutable Collection Classes
** Array Buffers
** List Buffers
** StringBuilders
** ArrayDeque
** Queues
** Stacks
** Mutable ArraySeqs
** Hash Tables
** Weak Hash Maps
** Concurrent Maps
*** Operations in Class ~concurrent.Map~

** Mutable Bitsets

* ~Array~'s
* ~String~'s
* Performance Characteristics
* Equality
* Views
* Iterators
** Operations in class ~Iterator~
** Laziness
** Buffered iterators

* Creating Collections From Scratch
** Factory Methods for Sequences

* Conversions Between Java and Scala Collections
* Conversions Between ~Option~ and the Collections
