#+TITLE: The Art of the Metaobject-Protocol
#+VERSION: 1991
#+AUTHOR: Gregor Kiczales, Jim des Rivieres, Daniel G. Bobrow
#+STARTUP: overview
#+STARTUP: entitiespretty

* I The Design and Implementation of Metaobject Protocols
** 1 How CLOS is Implemented - 13 
*** 1.1 A Subset of CLOS - 14
*** 1.2 The Basic Backstage Structures - 15
*** 1.3 Representing Classes - 17
*** 1.4 Printing Objects - 26
*** 1.5 Representing the Structure of Instances - 26
*** 1.6 Representing Generic Functions - 34
*** 1.7 Representing Methods - 36
*** 1.8 Invoking Generic Functions - 40
*** 1.9 A Word About Performance - 45
*** 1.10 Summary - 45

** 2 Introspection and Analysis - 47
*** 2.1 Introducing Class Metaobjects - 48
*** 2.2 Browsing Classes - 52
*** 2.3 Browsing Generic Functions - 58
*** 2.4 Programmatic Creation of New Classes - 66
*** 2.5 Summary - 69

** 3 Extending the Language - 71
*** 3.1 Specialized Class Metaobjects - 72
*** 3.2 Terminology - 74
*** 3.3 Using Specialized Class Metaobject Classes - 76
*** 3.4 Class Precedence Lists - 78
*** 3.5 slot Inheritance - 83
*** 3.6 Other Inheritance Protocols - 90
*** 3.7 Slot Access - 96
*** 3.8 Instance Allocation - 99
*** 3.9 Summary - 105

** 4 Protocol Design - 107
*** 4.1 A Simple Generic function Invocation Protocol - 107
*** 4.2 Functional and Procedural Protocol - 110
*** 4.3 Layered Protocol - 119
*** 4.4 Improving Performance - 125
*** 4.5 Protocol Design Summary - 131

* II A Metaobject protocol for CLOS
** 5 Concepts - 137
*** 5.1 CIntroduction - 137
*** 5.2 Metaobjects - 137
*** 5.3 Inheritance Structure of Metaobject Classes - 140
*** 5.4 Processing of the User Interface Macros - 145
*** 5.5 Subprotocols - 153

** 6 Generic Functions and Methods - 163
** A Introduction to CLOS - 243
** B Solutions to Selected Exercises - 255
** C Living with Circularity - 269
** D A Working Closette Implementation - 277
** E Cross Reference to Full MOP - 317

* References - 325
* Index - 327
