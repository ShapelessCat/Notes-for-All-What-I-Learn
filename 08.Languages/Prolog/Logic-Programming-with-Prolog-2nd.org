#+TITLE: Logic Programming with Prolog
#+VERSION: 2nd
#+YEAR: 2013
#+AUTHOR: Max Bramer
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Introduction - ix
* 1 Getting Started - 1
** 1.1 Starting Prolog - 1
** 1.2 Prolog Programs - 3
** 1.3 Data Objects in Prolog: Prolog Terms - 8
** Practical Exercise 1 - 11

* 2 Clauses and Predicates - 13
** 2.1 Clauses - 13
** 2.2 Predicates - 15
** 2.3 Loading Clauses - 18
** 2.4 Variables - 22
** Practical Exercise 2 - 27

* 3 Satisfying Goals - 29
** 3.1 Introduction - 29
** 3.2 Unification - 31
** 3.2.1 Unifying Call Terms - 31
** 3.3 Evaluating Goals - 35
** 3.4 Backtracking - 39
** 3.5 Satisfying Goals: A Summary - 48
** 3.6 Removing Common Variables - 50
** 3.7 A Note on Declarative Programming - 51
** 3.8 Important Note on User-Controlled Backtracking - 52
** Practical Exercise 3 - 53

* 4 Operators and Arithmetic - 55
** 4.1 Operators - 55
** 4.2 Arithmetic - 58
** 4.3 Equality Operators - 61
** 4.4 Logical Operators - 64
** 4.5 More About Operator Precedence - 65
** Practical Exercise 4 - 68

* 5 Input and Output - 69
** 5.1 Introduction - 69
** 5.2 Outputting Terms - 69
** 5.3 Inputting Terms - 71
** 5.4 Input and Output Using Characters - 72
** 5.5 Outputting Characters - 72
** 5.6 Inputting Characters - 73
** 5.7 Using Characters: Examples - 74
** 5.8 Input and Output Using Files - 76
** 5.9 File Output: Changing the Current Output Stream - 77
** 5.10 File Input: Changing the Current Input Stream - 77
*** 5.10.1 Reading from Files: End of File - 78
*** 5.10.2 Reading from Files: End of Record - 78

** 5.11 Using Files: Examples - 79
** Practical Exercise 5 - 81
* 6 Loops - 85
** 6.1 Introduction- 85
** 6.2 Looping a Fixed Number of Times - 85
** 6.3 Looping Until a Condition Is Satisfied - 89
*** 6.3.1 Recursion - 89
*** 6.3.2 Using the 'repeat' Predicate - 91
** 6.4 Backtracking with Failure - 94
*** 6.4.1 Searching the Prolog Database - 94
*** 6.4.2 Finding Multiple Solutions - 96

** Practical Exercise 6 - 97

* 7 Preventing Backtracking - 99
** 7.1 Introduction- 99
** 7.2 The Cut Predicate - 99
** 7.3 Cut with Failure - 105
** Practical Exercise 7 - 107

* 8 Changing the Prolog Database - 109
** 8.1 Changing the Database: Adding and Deleting Clauses - 109
** 8.2 Adding Clauses - 110
** 8.3 Deleting Clauses- - 111
** 8.4 Changing the Database: Example - 112
** 8.5 Maintaining a Database of Facts - 114
** Practical Exercise 8 - 117

* 9 List Processing - 119
** 9.1 Representing Data as Lists - 119
** 9.2 Notation for Lists - 120
** 9.3 Decomposing a List - 122
** 9.4 Built-in Predicate: member - 124
** 9.5 Built-in Predicate: length - 125
** 9.6 Built-in Predicate: reverse - 126
** 9.7 Built-in Predicate: append - 127
** 9.8 List Processing: Examples - 128
** 9.9 Using findall/3 to Create a List - 132
** Practical Exercise 9 - 134

* 10 String Processing - 137
** 10.1 Converting Strings of Characters To and From Lists - 137
** 10.2 Joining Two Strings - 138
** 10.3 Trimming a String - 139
** 10.4 Inputting a String of Characters - 141
** 10.5 Searching a String - 142
** 10.6 Dividing a String into Its Component Parts - 144
** Practical Exercise 10 - 146

* 11 More Advanced Features - 147
** 11.1 Introduction - 147
** 11.2 Extending Prolog: Arithmetic - 147
** 11.3 Extending Prolog: Operations on Strings - 153
** 11.4 Extending Prolog: Sets - 155
** 11.5 Processing Terms - 157
** Practical Exercise 11 - 163

* 12 Using Grammar Rules to Analyse English Sentences - 165
** 12.1 Introduction - 165
** 12.2 Parsing English Sentences - 165
** 12.3 Converting Sentences to List Form - 181
** Practical Exercise 12 - 186

* 13 Prolog in Action - 187
** 13.1 Implementing an Artificial Language - 187
** 13.2 Developing an Expert System Shell - 200
** Practical Exercise 13 - 210

* Appendix 1 Built-in Predicates - 211
* Appendix 2 Built-in Operators - 217
* Appendix 3 Specimen Solutions to Practical Exercises - 221
* Appendix 4 Glossary - 243
* Index - 251
