#+TITLE: Asynchronous Programming in Rust
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* DONE 1. Getting Started - =TODO: NOTE=
CLOSED: [2024-08-02 Fri 10:29]
*** What This Book Covers

** 1.1. Why Async?
*** Async vs other concurrency models
*** Async in Rust vs other languages
*** Async vs threads in Rust
**** Example: Concurrent downloading

*** Custom concurrency models in Rust

** 1.2. The State of Asynchronous Rust
*** Language and library support
*** Compiling and debugging
**** Compilation errors
**** Runtime errors
**** New failure modes

*** Compatibility considerations
*** Performance characteristics

** 1.3. ~async~ / ~.await~ Primer

* TODO 2. Under the Hood: Executing Futures and Tasks
** 2.1. The ~Future~ Trait
** 2.2. Task Wakeups with Waker
*** Applied: Build a Timer

** 2.3. Applied: Build an Executor
** 2.4. Executors and System IO

* TODO 3. ~async~ / ~.await~
*** ~async~ Lifetimes
*** ~async move~
*** ~.await~'ing on a Multithreaded Executor

* TODO 4. Pinning
*** Why Pinning
*** Pinning in Detail
*** Pinning in Practice
**** Pinning to the Stack
**** Pinning to the Heap

*** Summary

* TODO 5. The ~Stream~ Trait
** 5.1. Iteration and Concurrency

* TODO 6. Executing Multiple Futures at a Time
** 6.1. ~join!~
*** ~join!~
*** ~try_join!~

** 6.2. ~select!~
*** ~default => ...~ and ~complete => ...~
*** Interaction with ~Unpin~ and ~FusedFuture~
*** Concurrent tasks in a ~select~ loop with ~Fuse~ and ~FuturesUnordered~

** 6.3. Spawning
** 6.4. TODO: Cancellation and Timeouts
** 6.5. TODO: FuturesUnordered

* TODO 7. Workarounds to Know and Love
** 7.1. ~?~ in ~async~ Blocks
** 7.2. ~Send~ Approximation
** 7.3. Recursion
** 7.4. ~async~ in Traits

* TODO 8. The Async Ecosystem
*** Async Runtimes
*** Community-Provided Async Crates
**** The Futures Crate
**** Popular Async Runtimes

*** Determining Ecosystem Compatibility
*** Single Threaded vs Multi-Threaded Executors

* TODO 9. Final Project: Building a Concurrent Web Server with Async Rust
*** Recap

** 9.1. Running Asynchronous Code
*** Adding and Async Runtime

** 9.2. Handling Connections Concurrently
*** Serving Requests in Parallel

** 9.3. Testing the TCP Server

* TODO 10. TODO: I/O
** 10.1. TODO: AsyncRead and AsyncWrite

* TODO 11. TODO: Asynchronous Design Patterns: Solutions and Suggestions
** 11.1. TODO: Modeling Servers and the Request/Response Pattern
** 11.2. TODO: Managing Shared State

* 12. Appendix: Translations of the Book
