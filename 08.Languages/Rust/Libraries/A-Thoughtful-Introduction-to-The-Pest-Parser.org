#+TITLE: A Thoughtful Introduction to The Pest Parser
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* 1. Introduction
*** Sample
*** About this book

** 1.1. Example: CSV
*** Setup
*** Writing the parser
*** The main program loop
*** Done

* 2. Parser API
*** Tokens
**** Nested rules
**** Interface

*** Pairs
**** The ~parse~ method
**** Using ~Pair~ and ~Pairs~ with a grammar

*** Spans and positions

** 2.1. Example: INI
*** Writing the grammar
*** Program initialization
*** The main loop
*** Whitespace
*** Done

* 3. Grammars
*** How to activate ~pest~
*** Inline grammar
*** Load multiple grammars
*** Warning about PEGs!

** 3.1. Parsing expression grammars
*** Eagerness
*** Ordered choice
*** Non-backtracking
*** Unambiguous
*** Don't panic

** 3.2. Syntax of pest parsers
*** Expressions
**** Terminals
**** Sequence
**** Ordered choice
**** Repetition
**** Predicates

*** Operator precedence and grouping (WIP)
*** Start and end of input
*** Implicit whitespace
*** Silent and atomic rules
**** Silent
**** Atomic
**** Non-atomic
**** Tags

*** The stack (WIP)
**** Indentation-Sensitive Languages

*** Cheat sheet

** 3.3. Comments
*** Non-doc comments
*** Doc comments

** 3.4. Built-in rules
*** ASCII rules
*** Unicode rules
**** General categories
**** Binary properties
**** Script properties
**** All available rules:

** 3.5. Example: JSON
*** Setup
*** Writing the grammar
*** AST generation
*** Finishing

** 3.6. Example: The J language
*** The grammar
*** Parsing and AST generation
*** Running the Parser

* 4. Operator precedence
*** Pratt Parser

** 4.1. Example: Calculator
*** Precedence and associativity
*** Calculator example
*** Grammar
*** Abstract Syntax Tree
*** Pratt parser
*** Unary minus and parenthesis
**** Parentheses
**** Unary minus

* 5. Final project: Awk clone (WIP)
