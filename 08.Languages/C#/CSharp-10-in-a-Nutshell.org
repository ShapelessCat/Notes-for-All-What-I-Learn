#+TITLE: C# 10.0 in a Nutshell
#+SUBTITLE: The Definitive Reference
#+VERSION: 2022
#+AUTHOR: Joseph Albahari
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Preface - xi
* 1. Introducing C# and .NET - 1
** Object Orientation - 1
** Type Safety - 2
** Memory Management - 3
** Platform Support - 3
** CLRs, BCLs, and Runtimes - 3
** A Brief History of C# - 7

* 2. C# Language Basics - 25
** A First C# Program - 25
** Syntax - 28
** Type Basics - 30
** Numeric Types - 41
** Boolean Type and Operators - 49
** Strings and Characters - 51
** Arrays - 54
** Variables and Parameters - 59
** Expressions and Operators - 70
** Null Operators - 74
** Statements - 76
** Namespaces - 87

* 3. Creating Types in C# - 95
** Classes - 95
** Inheritance - 115
** The object Type - 125
** Structs - 129
** Access Modifiers - 132
** Interfaces - 134
** Enums - 140
** Nested Types - 144
** Generics - 145

* 4. Advanced C# - 159
** Delegates - 159
** Events - 167
** Lambda Expressions - 174
** Anonymous Methods - 180
** try Statements and Exceptions - 181
** Enumeration and Iterators - 189
** Nullable Value Types - 194
** Nullable Reference Types - 200
** Extension Methods - 202
** Anonymous Types - 205
** Tuples - 207
** Records - 211
** Patterns - 222
** Attributes - 227
** Caller Info Attributes - 229
** Dynamic Binding - 232
** Operator Overloading - 239
** Unsafe Code and Pointers - 243
** Preprocessor Directives - 249
** XML Documentation - 252

* 5. .NET Overview - 257
** .NET Standard - 259
** Runtime and C# Language Versions - 261
** Reference Assemblies - 261
** The CLR and BCL - 262
** Application Layers - 266

* 6. .NET Fundamentals - 271
** String and Text Handling - 271
** Dates and Times - 284
** DateOnly and TimeOnly - 292
** DateTime and Time Zones - 292
** Formatting and Parsing - 297
** Standard Format Strings and Parsing Flags - 303
** Other Conversion Mechanisms - 310
** Globalization - 314
** Working with Numbers - 315
** BitOperations - 320
** Enums - 320
** The Guid Struct - 323
** Equality Comparison - 324
** Order Comparison - 335
** Utility Classes - 338

* 7. Collections - 343
** Enumeration - 343
** The ICollection and IList Interfaces - 351
** The Array Class - 355
** Lists, Queues, Stacks, and Sets - 363
** Dictionaries - 372
** Customizable Collections and Proxies - 378
** Immutable Collections - 384
** Plugging in Equality and Order - 388

* 8. LINQ Queries - 395
** Getting Started - 395
** Fluent Syntax - 397
** Query Expressions - 403
** Deferred Execution - 408
** Subqueries - 414
** Composition Strategies - 418
** Projection Strategies - 421
** Interpreted Queries - 424
** EF Core - 430
** Building Query Expressions - 442

* 9. LINQ Operators - 447
** Overview - 448
** Filtering - 451
** Projecting - 456
** Joining - 468
** Ordering - 476
** Grouping - 479
** Set Operators - 483
** Conversion Methods - 485
** Element Operators - 488
** Aggregation Methods - 490
** Quantifiers - 495
** Generation Methods - 496

* 10. LINQ to XML - 497
** Architectural Overview - 497
** X-DOM Overview - 498
** Instantiating an X-DOM - 502
** Navigating and Querying - 504
** Updating an X-DOM - 510
** Working with Values - 513
** Documents and Declarations - 515
** Names and Namespaces - 519
** Annotations - 524
** Projecting into an X-DOM - 525

* 11. Other XML and JSON Technologies - 529
** XmlReader - 529
** XmlWriter - 537
** Patterns for Using XmlReader/XmlWriter - 539
** Working with JSON - 544

* 12. Disposal and Garbage Collection - 557
** IDisposable, Dispose, and Close - 557
** Automatic Garbage Collection - 563
** Finalizers - 565
** How the GC Works - 569
** Managed Memory Leaks - 576
** Weak References - 579

* 13. Diagnostics - 585
** Conditional Compilation - 585
** Debug and Trace Classes - 589
** Debugger Integration - 592
** Processes and Process Threads - 593
** StackTrace and StackFrame - 594
** Windows Event Logs - 596
** Performance Counters - 598
** The Stopwatch Class - 602
** Cross-Platform Diagnostic Tools - 603

* 14. Concurrency and Asynchrony - 609
** Introduction - 609
** Threading - 610
** Tasks - 626
** Principles of Asynchrony - 634
** Asynchronous Functions in C# - 639
** Asynchronous Patterns - 659
** Obsolete Patterns - 667

* 15. Streams and I/O - 671
** Stream Architecture - 671
** Using Streams - 673
** Stream Adapters - 687
** Compression Streams - 695
** Working with ZIP Files - 698
** File and Directory Operations - 699
** OS Security - 710
** Memory-Mapped Files - 712

* 16. Networking - 717
** Network Architecture - 717
** Addresses and Ports - 719
** URIs - 720
** HttpClient - 722
** Writing an HTTP Server - 731
** Using DNS - 734
** Sending Mail with SmtpClient - 734
** Using TCP - 735
** Receiving POP3 Mail with TCP - 739

* 17. Assemblies - 741
** Whatâ€™s in an Assembly - 741
** Strong Names and Assembly Signing - 746
** Assembly Names - 747
** Authenticode Signing - 749
** Resources and Satellite Assemblies - 752
** Loading, Resolving, and Isolating Assemblies - 759

* 18. Reflection and Metadata - 781
** Reflecting and Activating Types - 782
** Reflecting and Invoking Members - 789
** Reflecting Assemblies - 802
** Working with Attributes - 803
** Dynamic Code Generation - 808
** Emitting Assemblies and Types - 815
** Emitting Type Members - 818
** Emitting Generic Methods and Types - 823
** Awkward Emission Targets - 825
** Parsing IL - 829

* 19. Dynamic Programming - 835
** The Dynamic Language Runtime - 835
** Numeric Type Unification - 836
** Dynamic Member Overload Resolution - 838
** Implementing Dynamic Objects - 844
** Interoperating with Dynamic Languages - 847

* 20. Cryptography - 851
** Overview - 851
** Windows Data Protection - 852
** Hashing - 853
** Symmetric Encryption - 855
** Public-Key Encryption and Signing - 860

* 21. Advanced Threading - 865
** Synchronization Overview - 866
** Exclusive Locking - 866
** Locking and Thread Safety - 874
** Nonexclusive Locking - 880
** Signaling with Event Wait Handles - 887
** The Barrier Class - 894
** Lazy Initialization - 896
** Thread-Local Storage - 898
** Timers - 901

* 22. Parallel Programming - 907
** Why PFX? - 908
** PLINQ - 911
** The Parallel Class - 924
** Task Parallelism - 930
** Working with AggregateException - 940
** Concurrent Collections - 942
** BlockingCollection<T> - 945

* 23. Span<T> and Memory<T> - 951
** Spans and Slicing - 952
** Memory<T> - 955
** Forward-Only Enumerators - 957
** Working with Stack-Allocated and Unmanaged Memory - 958

* 24. Native and COM Interoperability - 961
** Calling into Native DLLs - 961
** Type and Parameter Marshaling - 962
** Callbacks from Unmanaged Code - 967
** Simulating a C Union - 970
** Shared Memory - 971
** Mapping a Struct to Unmanaged Memory - 973
** COM Interoperability - 977
** Calling a COM Component from C# - 979
** Embedding Interop Types - 982
** Exposing C# Objects to COM - 983

* 25. Regular Expressions - 987
** Regular Expression Basics - 987
** Quantifiers - 992
** Zero-Width Assertions - 993
** Groups - 996
** Replacing and Splitting Text - 997
** Cookbook Regular Expressions - 999
** Regular Expressions Language Reference - 1003

* Index - 1007
