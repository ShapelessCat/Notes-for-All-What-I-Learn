#+TITLE: ZIO 2.x
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Oveerview
** Getting Started
*** Main
*** Console

** Summary
*** ZIO
*** Type Aliases
**** Tips For Getting Started With Type Aliases

*** Next Steps

** Creating Effects
*** From Success Values
*** From Failure Values
*** From Scala Values
**** Option
**** Either
**** Try
**** Future

*** From Code
**** Synchronous Code
**** Asynchronous Code

*** Blocking Synchronous Code
*** Next Steps

** Basic Operations
*** Mapping
*** Chaining
*** For Comprehensions
*** Zipping
*** Next Step

** Handling Errors
*** Either
*** Catching All Errors
*** Catching Some Errors
*** Fallback
*** Folding
*** Retrying
*** Next Steps

** Handling Resources
*** Finalizing
*** Acquire Release
*** Next Steps

** Basic Concurrency
*** Fibers
**** The Fiber Data Type
**** Forking Effects
**** Joining Fibers
**** Awaiting Fibers
**** Interrupting Fibers
**** Composing Fibers

*** Parallelism
*** Racing
*** Timeout
*** Next Steps

** Running Effects
*** App
*** Default Runtime
*** Custom Runtime
*** Error Reporting
*** Next Steps

** Performance
** Platforms
*** JVM
*** Scala.js
*** Scala Native

** ---------------------
** OLD - =LE ZI=
** Testing Effects
*** Environments
**** Providing Environments

*** Environmental Effects
**** Define the Service
**** Provide Helpers
**** Use the Service
**** Implement Live Service
**** Run the Database Effect
**** Implement Test Service
**** Test Database Code

*** Next Steps

** Background
*** Programs As Values
*** Next Steps

* Reference
** Introduction
*** Core Data Types
*** Contextual Data Types
*** State Management
*** Concurrency
**** Fiber Primitives
**** Concurrency Primitives
**** Synchronization Aids
**** STM

*** Resource Management
*** Streaming
*** Metrics
*** Testing
*** Miscellaneous
** Core
*** ZIO
*** ZIO Type Aliases
**** UIO
**** URIO
**** Task
**** RIO
**** IO

*** ZIOApp
*** Runtime
*** Exit
*** Cause

** Control Flow
** Error Management
** Interruption Model
*** Interruption Model ---

** Built-in Service

** =TODO= =TODO= =TODO=
** Application Architecture
** Writing ZIO Services
** Dependency Injection
** Contextual Types
** Scheduling
** State Management
** Concurrency
** Resource Management
** Streaming
** Observability
** Configuration
** Testing
