#+TITLE: Cats MTL
#+SUBTITLE: cats transformer type classes
#+VERSION: 1.3.0 - available for Scala 2.12, 2.13, 3.0.0-M2, 3.0.0-M3, and ScalaJS major version 1.x.
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* TODO Cats MTL
  - Provides transformer typeclasses for cats'
    * ~Monad~'s
    * ~Applicative~'s
    * ~Functor~'s

  - You can have _MULTIPLE_ cats-mtl transformer typeclasses in scope _at once_
    *WITHOUT implicit ambiguity*, _UNLIKE_ in pre-1.0.0 cats or Scalaz 7.

*** Usage
**** Supported Classes
     - ~EitherT~
     - ~Kleisli~
     - ~IorT~
     - ~OptionT~
     - ~ReaderWriterStateT~
     - ~StateT~
     - ~WriterT~

*** Laws
** Documentation
*** Community
*** License

* TODO What is MTL?
*** The problem

** How Cats-mtl helps
*** Monad Transformers encode some notion of /effect/
**** Available MTL classes
     - ~Ask~
     - ~Local~
     - ~Raise~
     - ~Handle~
     - ~Tell~
     - ~Listen~
     - ~Censor~
     - ~Stateful~
     - ~Chronicle~

* TODO MTL classes summary
** Tell[F, L]
** Listen[F, L]
** Ask[F, E]
** Local[F, E]
** Stateful[F, S]
** Chronicle[F, E]
** Raise[F, E]
** Handle[F, E]

** OLD - =from Jian= not in current document
*** FunctorTell
*** ApplicativeAsk
*** MonadState
*** MonadChronicle
*** FunctorListen
*** ApplicativeLocal
*** FunctorRaise
*** ApplicativeHandle

* TODO Migration Guide
** Ask / Local
** Tell / Listen

* TODO cats-mtl Design
** TODO Motivation
** TODO Laws

* TODO Contributing
** Adding a new transformer typeclass
** Adding a new transformer typeclass instance
** Running Documentation Site

* TODO MTL-CLASSES
** Listen
** Raise
** Stateful
** Chronicle
** Handle
** Tell
** Local
** Ask
