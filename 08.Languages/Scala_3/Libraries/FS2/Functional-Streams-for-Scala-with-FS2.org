#+TITLE: Functional Streams for Scala with FS2
#+LINK: https://conviva.udemy.com/course/functional-streams-for-scala-with-fs2
#+VERSION: Last updated 2022-10
#+AUTHOR: Leandro Galvan
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Section 1: Introduction
** 1. Introduction
** 2. Setting up environment
** 3. Course files

* Section 2: Why Streams
** 4. Processing a CSV File - Imperative Version
** 5. Processing a CSV File - Imperative Version - Part 2
** 6. Processing a CSV File - List version
** 7. Processing a CSV File - Iterator version
** 8. Processing a CSV File - Stream version
** 9. Processing a CSV File - Stream Version - Part 2
** Quiz 1: Streams Motivation Quiz

* Section 3: Pure Streams
** 10. Introduction
** 11. Creating finite streams
** 12. Iterate
** 13. Unfold
** 14. Range & Constant
** 15. Exercise: Producing the alphabet with Iterate
** 16. Exercise: Producing the alphabet with Unfold
** 17. Exercise: Implementing Iterate in terms of Unfold
** 18. Concatenate
** 19. Map
** 20. FlatMap
** 21. Filter & For Comprehensions
** 22. Zip & ZipWith
** 23. Fold
** 24. Exercise: produce the odds number using Map
** 25. Exercise: implement the repeat method
** 26. Exercise: implement the unNone method
** 27. Summary
** Quiz 2: Pure Streams Quiz

* Section 4: Effectful Streams
** 28. Introduction
** 29. Eval
** 30. Exec
** 31. Covary
** 32. IterateEval
** 33. UnfoldEval
** 34. Exercise: Pagination
** 35. RepeatEval
** 36. For comprehensions
** 37. EvalMap, EvalTap and EvalFilter
** 38. Concatenation
** 39. Exercise: EvalEvery
** 40. Error Handling
** 41. Resources
** 42. Basic Time Methods
** 43. Throttling
** 44. Debouncing
** 45. Retry
** 46. Exercise: Searching
** 47. Summary
** Quiz 3: Effectful Streams Quiz

* Section 5: Transforming Streams
** 48. Introduction
** 49. Pull based vs push based
** 50. Chunk structure of a stream
** 51. Chunk methods
** 52. Exercise: compact
** 53. Creating pulls via factory methods
** 54. Turning streams into pulls
** 55. Exercise: skipLimit
** 56. First chunk pipe
** 57. Drop pipe
** 58. Exercise: filter
** 59. Running sum pipe
** 60. Exercise: running max
** 61. Summary
** Quiz 4: Transforming Streams Quiz

* Section 6: Concurrency
** 62. Introduction
** 63. Merge
** 64. MergeHaltL & MergeHaltBoth
** 65. Exercise: Fetching quotes from two sources
** 66. ParJoinUnbounded
** 67. ParJoin
** 68. Exercise: Multiple producers and multiple consumers
** 69. Concurrently
** 70. Exercise: Progress tracker
** 71. ParEvalMap
** 72. Exercise: ParEvalMapSeq
** 73. Zip
** 74. ZipRight
** 75. ParZip
** 76. FixedRate
** 77. FixedDelay
** 78. AwakeEvery & AwakeDelay
** 79. Summary
** Quiz 5: Concurrency Quiz

* Section 7: Communication
** 80. Introduction
** 81. Signals
** 82. Exercise: Cooler
** 83. Channels
** 84. Exercise: Improved Cooler
** 85. Topics
** 86. Backpressure with Topics
** 87. Exercise: Car position tracker & notifier
** 88. Queues
** 89. Handling backpressure with Queues
** 90. Signalling termination with None
** 91. Exercise: simulating a server
** 92. Summary
** Quiz 6: Communication Quiz

* Section 8: Final project: A tiny http server
** 93. Implementing an http server

* Section 9: Conclusion
** 94. Conclusion
