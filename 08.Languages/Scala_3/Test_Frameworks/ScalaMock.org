#+TITLE: ScalaMock
#+VERSION: 5.1.0 (latest: 5.2.0)
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Quick Start
** Installation
** Really quick and easy example
** Leaderboad example
** Objects interacting with a tested class
** Stubbing objects interacting with a tested class
** Mocking objects interacting with a tested class
** Testing with ScalaMock
** Further reading

* User Guide
  Welcome to the ScalaMock User Guide. This guide explains in detail how to use
  ScalaMock in your tests.

  If you are new to ScalaMock or mocking in general we recommend starting with
  Quick Start.

** Installation
*** Packages
**** Releases
**** CI Builds

*** Sources
*** sbt projects
*** Maven projects
*** Gradle
*** Upgrading from ScalaMock Version 3.x

** Integration with testing frameworks
*** ScalaTest
*** Specs2

** Features
*** Supported Scala features
*** Mocking features
**** Argument Matching
**** Ordering
**** Call counts
**** Returning values
**** Throwing exceptions
**** Call handlers

** Choosing your mocking style
*** Expectations-First Style
**** Mocking functions
**** Mocking objects

*** Record-then-Verify (Mockito) Style
**** Mocking functions
**** Mocking objects

*** Mixing mocking sytles
**** Example with mixed mocking styles
**** Example using Expectations-first style only
**** Example using Record-then-verify style only

** Argument matching
*** Epsilon matching
*** Predicate matching
**** Example 1
**** Example 2

** Ordering
*** Default behaviour
*** Ordered expectations
*** In any order expectations

** Sharing mocks and expectations in ScalaTest
*** Isolated test cases
*** Fixture contexts

** Sharing mocks and expectations in Specs2
*** Fixture contexts
**** Basic usage
**** Complex fixture contexts
**** Isolated test cases

** Advanced topics
*** Mocking overloaded, curried and polymorphic methods
**** Example 1 - Overloaded methods
**** Example 2 - Polymorphic methods
**** Example 3 - Curried methods
**** Example 4 - Methods with implicit parameters
**** Example 5 - Repeated parameters
*** Returning values (onCall)
*** Call count
*** Exceptions
**** Example 1 - throws method
**** Example 2 - throwing from the ~onCall~ handler

*** Partial Functions
**** Example 1

*** Raw types
**** Example 1

*** Log Calls
**** Example 1

*** Argument Capture
*** Using ScalaMock without ScalaTest/Specs2
*** Mocking 0-parameter function and parameterless function

** FAQ
*** Is ScalaMock thread-safe? Can mocks be used in a multi-threaded environment?
*** Can I mock ~final~ / ~private~ methods or classes?
*** Can I mock ~val~ / ~lazy val~?
*** Can I mock ~object~'s?
*** Can I mock Java APIs with raw types?
*** Can I mock ~hashcode~, ~equals~, ~clone~ or ~toString~?
*** Can I mock ~static~ Java calls?
