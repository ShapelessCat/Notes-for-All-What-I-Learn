#+TITLE: Cats API
#+VERSION: Cats 2.2.0-M2 - support Scala 2.12 and 2.13, and introduce support for Scala.js 0.6 (specifically 0.6.33) and 1.1.0.
#+STARTUP: overview
#+STARTUP: entitiespretty

* cats
** arrow
*** (o, t) ~Arrow~
*** (o, t) ~ArrowChoice~
*** (o, t) ~Category~
*** (o, t) ~Choice~
*** (o, t) ~CommutativeArrow~
*** (o, t) ~Compose~
*** (o, t) ~FunctionK~
*** (o, t) ~Profunctor~
*** (o, t) ~Strong~

** data
*** (o, c) ~AndThen~
*** (o, c) ~AppFunc~
*** (o, c) ~Binested~
*** (c) ~BinestedBifoldable~
*** (c) ~BinestedBitraverse~
*** (t) ~BinestedInstances~
*** (o, c) ~Chain~
*** (o, c) ~Cokleisli~
*** (o, c) ~Const~
*** (o, c) ~ContT~
*** (o, c) ~EitherK~
*** (o, c) ~EitherT~
*** (o, c) ~Func~
*** (o, c) ~IdT~
*** (o, c) ~IndexedReaderWriterStateT~
*** (o) ~IndexedState~
*** (o, c) ~IndexedStateT~
*** (o, c) ~Ior~
*** (o, c) ~IorT~
*** (o, c) ~Kleisli~
*** (o, c) ~Nested~
*** (c) ~NonEmptyChainOps~
*** (o, c) ~NonEmptyList~
*** (c) ~NonEmptyMapOps~
*** (c) ~NonEmptySetOps~
*** (o, c) ~NonEmptyVector~
*** (o, c) ~OneAnd~
*** (o, c) ~Op~
*** (o, c) ~OptionT~
*** (o) ~Reader~
*** (o) ~ReaderWriterState~
*** (o) ~ReaderWriterStateT~
*** (o, c) ~RepresentableStore~
*** (o) ~State~
*** (o) ~StateT~
*** (o) ~Store~
*** (o, c) ~Tuple2K~
*** (o, c) ~Validated~
*** (o) ~Writer~
*** (o, c) ~WriterT~
*** (o, c) ~ZipList~
*** (o, c) ~ZipStream~
*** (o, c) ~ZipVector~

** evidence
*** (o, c) ~As~
*** (c) ~AsInstances~
*** (o, c) ~Is~
*** (c) ~IsInstances~

** free
*** (o, c) ~Cofree~
*** (o, c) ~ContravariantCoyoneda~
*** (o, c) ~Coyoneda~
*** (o, c) ~Free~
*** (o, c) ~FreeApplicative~
*** (o, c) ~FreeInvariantMonoidal~
*** (o, c) ~FreeT~
*** (o) ~Trampoline~
*** (o, c) ~Yoneda~

** instances
*** (t) ~AllInstances~
*** (c) ~AllInstancesBinCompat~
*** (t) ~AllInstancesBinCompat0~
*** (t) ~AllInstancesBinCompat1~
*** (t) ~AllInstancesBinCompat2~
*** (t) ~AllInstancesBinCompat3~
*** (t) ~AllInstancesBinCompat4~
*** (t) ~AllInstancesBinCompat5~
*** (t) ~AllInstancesBinCompat6~
*** (t) ~AnyValInstances~
*** (t) ~BigDecimalInstances~
*** (t) ~BigIntInstances~
*** (t) ~BitSetInstances~
*** (t) ~BooleanInstances~
*** (t) ~ByteInstances~
*** (t) ~CharInstances~
*** (t) ~DoubleInstances~
*** (t) ~DurationInstances~
*** (t) ~EitherInstances~
*** (t) ~EqInstances~
*** (t) ~EquivInstances~
*** (t) ~FiniteDurationInstances~
*** (t) ~FloatInstances~
*** (t) ~FunctionInstances~
*** (t) ~FutureInstances~
*** (t) ~HashInstances~
*** (t) ~IntInstances~
*** (t) ~InvariantMonoidalInstances~
*** (t) ~ListInstances~
*** (t) ~LongInstances~
*** (t) ~MapInstances~
*** (t) ~OptionInstances~
*** (t) ~OrderInstances~
*** (t) ~OrderingInstances~
*** (t) ~ParallelInstances~
*** (t) ~PartialOrderInstances~
*** (t) ~PartialOrderingInstances~
*** (t) ~QueueInstances~
*** (t) ~SetInstances~
*** (t) ~ShortInstances~
*** (c) ~SortedMapCommutativeMonoid~
*** (c) ~SortedMapEq~
*** (c) ~SortedMapHash~
*** (t) ~SortedMapInstances~
*** (t) ~SortedMapMonoid~
*** (t) ~SortedSetHash~
*** (t) ~SortedSetInstances~
*** (c) ~SortedSetOrder~
*** (c) ~SortedSetSemilattice~
*** (t) ~StreamInstances~
*** (t) ~StringInstances~
*** (t) ~SymbolInstances~
*** (t) ~TailRecInstances~
*** (t) ~TryInstances~
*** (t) ~TupleInstances~
*** (t) ~UUIDInstances~
*** (t) ~UnitInstances~
*** (t) ~VectorInstances~
*** (o) ~all~
*** (o) ~bigDecimal~
*** (o) ~bigInt~
*** (o) ~bitSet~
*** (o) ~boolean~
*** (o) ~byte~
*** (o) ~char~
*** (o) ~double~
*** (o) ~duration~
*** (o) ~either~
*** (o) ~eq~
*** (o) ~equiv~
*** (o) ~finiteDuration~
*** (o) ~float~
*** (o) ~function~
*** (o) ~future~
*** (o) ~int~
*** (o) ~invariant~
*** (o) ~list~
*** (o) ~long~
*** (o) ~map~
*** (o) ~option~
*** (o) ~order~
*** (o) ~ordering~
*** (o) ~parallel~
*** (o) ~partialOrder~
*** (o) ~partialOrdering~
*** (o) ~queue~
*** (o) ~set~
*** (o) ~short~
*** (o) ~sortedMap~
*** (o) ~sortedSet~
*** (o) ~stream~
*** (o) ~string~
*** (o) ~try_~
*** (o) ~tuple~
*** (o) ~unit~
*** (o) ~uuid~
*** (o) ~vector~

** kernel
*** TODO instances
**** (t) ~AllInstances~
**** (c) ~BigDecimalGroup~
**** (t) ~BigDecimalInstances~
**** (c) ~BigDecimalOrder~
**** (c) ~BigIntGroup~
**** (t) ~BigIntInstances~
**** (c) ~BigIntOrder~
**** (t) ~BitSetInstances~
**** (c) ~BitSetPartialOrder~
**** (c) ~BitSetSemilattice~
**** (t) ~BooleanBounded~
**** (t) ~BooleanInstances~
**** (c) ~BooleanOrder~
**** (t) ~ByteBounded~
**** (c) ~ByteGroup~
**** (t) ~ByteInstances~
**** (c) ~ByteOrder~
**** (t) ~CharBounded~
**** (t) ~CharInstances~
**** (c) ~CharOrder~
**** (c) ~DoubleGroup~
**** (t) ~DoubleInstances~
**** (c) ~DoubleOrder~
**** (c) ~DurationBounded~
**** (c) ~DurationGroup~
**** (t) ~DurationInstances~
**** (c) ~DurationOrder~
**** (c) ~EitherEq~
**** (c) ~EitherHash~
**** (t) ~EitherInstances~
**** (t) ~EqInstances~
**** (c) ~FiniteDurationBounded~
**** (c) ~FiniteDurationGroup~
**** (t) ~FiniteDurationInstances~
**** (c) ~FiniteDurationOrder~
**** (c) ~FloatGroup~
**** (t) ~FloatInstances~
**** (c) ~FloatOrder~
**** (t) ~Function0Group~
**** (t) ~Function0Monoid~
**** (t) ~Function0Semigroup~
**** (t) ~Function1Group~
**** (t) ~Function1Monoid~
**** (t) ~Function1Semigroup~
**** (t) ~FunctionInstances~
**** (t) ~HashInstances~
**** (c) ~IntBounded~
**** (c) ~IntGroup~
**** (t) ~IntInstances~
**** (c) ~IntOrder~
**** (c) ~ListEq~
**** (c) ~ListHash~
**** (t) ~ListInstances~
**** (c) ~ListMonoid~
**** (c) ~ListOrder~
**** (c) ~ListPartialOrder~
**** (c) ~LongBounded~
**** (c) ~LongGroup~
**** (t) ~LongInstances~
**** (c) ~LongOrder~
**** (c) ~MapEq~
**** (c) ~MapHash~
**** (t) ~MapInstances~
**** (c) ~MapMonoid~
**** (c) ~OptionEq~
**** (c) ~OptionHash~
**** (t) ~OptionInstances~
**** (c) ~OptionMonoid~
**** (c) ~OptionOrder~
**** (c) ~OptionPartialOrder~
**** (t) ~OrderInstances~
**** (t) ~PartialOrderInstances~
**** (c) ~QueueEq~
**** (c) ~QueueHash~
**** (t) ~QueueInstances~
**** (c) ~QueueMonoid~
**** (c) ~QueueOrder~
**** (c) ~QueuePartialOrder~
**** (c) ~SetHash~
**** (t) ~SetInstances~
**** (c) ~SetPartialOrder~
**** (c) ~SetSemilattice~
**** (c) ~ShortBounded~
**** (c) ~ShortGroup~
**** (t) ~ShortInstances~
**** (c) ~ShortOrder~
**** (c) ~SortedMapCommutativeMonoid~
**** (c) ~SortedMapEq~
**** (c) ~SortedMapHash~
**** (t) ~SortedMapInstances~
**** (c) ~SortedMapMonoid~
**** (c) ~SortedSetHash~
**** (t) ~SortedSetInstances~
**** (c) ~SortedSetOrder~
**** (c) ~SortedSetSemilattice~
**** (o) ~StaticMethods~
**** (c) ~StreamEq~
**** (c) ~StreamHash~
**** (t) ~StreamInstances~
**** (c) ~StreamMonoid~
**** (c) ~StreamOrder~
**** (c) ~StreamPartialOrder~
**** (t) ~StringInstances~
**** (t) ~StringLowerBounded~
**** (c) ~StringMonoid~
**** (c) ~StringOrder~
**** (t) ~SymbolInstances~
**** (t) ~SymbolLowerBounded~
**** (c) ~SymbolOrder~
**** (t) ~TupleInstances~
**** (t) ~UUIDBounded~
**** (t) ~UUIDInstances~
**** (c) ~UnitAlgebra~
**** (t) ~UnitBounded~
**** (t) ~UnitInstances~
**** (c) ~UnitOrder~
**** (c) ~VectorEq~
**** (c) ~VectorHash~
**** (t) ~VectorInstances~
**** (c) ~VectorMonoid~
**** (c) ~VectorOrder~
**** (c) ~VectorPartialOrder~
**** (o) ~eq~
**** (o) ~hash~
**** (o) ~order~
**** (o) ~partialOrder~

*** (o, t) ~Band~
*** (o, t) ~BoundedSemilattice~
*** (o, t) ~CommutativeGroup~
*** (o, t) ~CommutativeMonoid~
*** (o, t) ~CommutativeSemigroup~
*** (o, c) ~Comparison~
*** (o, t) ~Eq~
*** (c) ~EqFunctions~
*** (t) ~EqToEquivConversion~
*** (o, t) ~Group~
*** (c) ~GroupFunctions~
*** (o, t) ~Hash~
*** (c) ~HashFunctions~
*** (t) ~HashToHashingConversion~
*** (o, t) ~LowerBounded~
*** (t) ~LowerBoundedFunctions~
*** (o, t) ~Monoid~
*** (c) ~MonoidFunctions~
*** (o, t) ~Order~
*** (c) ~OrderFunctions~
*** (t) ~OrderToOrderingConversion~
*** (o, t) ~PartialOrder~
*** (c) ~PartialOrderFunctions~
*** (t) ~PartialOrderToPartialOrderingConversion~
*** (o, t) ~Semigroup~
*** (c) ~SemigroupFunctions~
*** (o, t) ~Semilattice~
*** (c) ~SemilatticeFunctions~
*** (o, t) ~UpperBounded~
*** (t) ~UpperBoundedFunctions~

** syntax
*** (t) ~AlignSyntax~
*** (t) ~AllSyntax~
*** (c) ~AllSyntaxBinCompat~
*** (t) ~AllSyntaxBinCompat0~
*** (t) ~AllSyntaxBinCompat1~
*** (t) ~AllSyntaxBinCompat2~
*** (t) ~AllSyntaxBinCompat3~
*** (t) ~AllSyntaxBinCompat4~
*** (t) ~AllSyntaxBinCompat5~
*** (t) ~AllSyntaxBinCompat6~
*** (t) ~AlternativeSyntax~
*** (t) ~ApplicativeErrorIdOps~
*** (c) ~ApplicativeErrorOps~
*** (t) ~ApplicativeErrorSyntax~
*** (c) ~ApplicativeIdOps~
*** (c) ~ApplicativeOps~
*** (t) ~ApplicativeSyntax~
*** (c) ~ApplyOps~
*** (t) ~ApplySyntax~
*** (t) ~ArrowChoiceSyntax~
*** (t) ~ArrowSyntax~
*** (t) ~BifoldableSyntax~
*** (t) ~BifunctorSyntax~
*** (c) ~BinestedIdOps~
*** (t) ~BinestedSyntax~
*** (c) ~BitraverseOps~
*** (t) ~BitraverseSyntax~
*** (t) ~ChoiceSyntax~
*** (t) ~CoflatMapSyntax~
*** (t) ~ComonadSyntax~
*** (t) ~ComposeSyntax~
*** (c) ~ContravariantMonoidalOps~
*** (t) ~ContravariantMonoidalSyntax~
*** (t) ~ContravariantSemigroupalSyntax~
*** (t) ~ContravariantSyntax~
*** (c) ~DistributiveOps~
*** (t) ~DistributiveSyntax~
*** (c) ~EitherIdOps~
*** (c) ~EitherKOps~
*** (t) ~EitherKSyntax~
*** (c) ~EitherObjectOps~
*** (c) ~EitherOps~
*** (o, t) ~EitherSyntax~
*** (c) ~EqOps~
*** (t) ~EqSyntax~
*** (c) ~FlatMapIdOps~
*** (c) ~FlatMapOps~
*** (c) ~FlatMapOptionOps~
*** (t) ~FlatMapOptionSyntax~
*** (t) ~FlatMapSyntax~
*** (c) ~FlattenOps~
*** (c) ~FoldableOps~
*** (c) ~FoldableOps0~
*** (t) ~FoldableSyntax~
*** (t) ~Function1Syntax~
*** (t) ~FunctorFilterSyntax~
*** (t) ~FunctorSyntax~
*** (c) ~GroupOps~
*** (t) ~GroupSyntax~
*** (c) ~GuardOps~
*** (c) ~HashOps~
*** (t) ~HashSyntax~
*** (c) ~IfApplyOps~
*** (c) ~IfMOps~
*** (c) ~IndexOps~
*** (t) ~InvariantSyntax~
*** (c) ~IorIdOps~
*** (t) ~IorSyntax~
*** (c) ~LeftNestedBitraverseOps~
*** (c) ~LeftOps~
*** (c) ~ListOps~
*** (t) ~ListSyntax~
*** (c) ~MonadErrorOps~
*** (c) ~MonadErrorRethrowOps~
*** (t) ~MonadErrorSyntax~
*** (c) ~MonadIdOps~
*** (c) ~MonadOps~
*** (t) ~MonadSyntax~
*** (c) ~MonoidOps~
*** (t) ~MonoidSyntax~
*** (c) ~NestedBitraverseOps~
*** (c) ~NestedFoldableOps~
*** (c) ~NestedIdOps~
*** (c) ~NestedReducibleOps~
*** (t) ~NestedSyntax~
*** (t) ~NonEmptyTraverseSyntax~
*** (c) ~OptionIdOps~
*** (o, c) ~OptionOps~
*** (t) ~OptionSyntax~
*** (c) ~OrderOps~
*** (t) ~OrderSyntax~
*** (c) ~ParallelApOps~
*** (c) ~ParallelApplyOps~
*** (t) ~ParallelApplySyntax~
*** (c) ~ParallelBisequenceOps~
*** (c) ~ParallelBitraverseOps~
*** (t) ~ParallelBitraverseSyntax~
*** (c) ~ParallelFlatSequenceOps~
*** (t) ~ParallelFlatSyntax~
*** (c) ~ParallelFlatTraversableOps~
*** (c) ~ParallelFoldMapAOps~
*** (c) ~ParallelFoldMapASyntax~
*** (c) ~ParallelLeftSequenceOps~
*** (c) ~ParallelLeftTraverseOps~
*** (c) ~ParallelSequenceOps~
*** (c) ~ParallelSequence_Ops~
*** (t) ~ParallelSyntax~
*** (c) ~ParallelTraversableOps~
*** (c) ~ParallelTraversable_Ops~
*** (t) ~ParallelTraverseSyntax~
*** (c) ~ParallelUnorderedFlatSequenceOps~
*** (c) ~ParallelUnorderedSequenceOps~
*** (c) ~ParallelUnorderedTraverseOps~
*** (t) ~ParallelUnorderedTraverseSyntax~
*** (c) ~PartialOrderOps~
*** (t) ~PartialOrderSyntax~
*** (t) ~ProfunctorSyntax~
*** (c) ~ReducibleOps0~
*** (t) ~ReducibleSyntax~
*** (t) ~RepresentableSyntax~
*** (c) ~RightOps~
*** (t) ~SemigroupKSyntax~
*** (c) ~SemigroupOps~
*** (t) ~SemigroupSyntax~
*** (c) ~SemigroupalOps~
*** (t) ~SemigroupalSyntax~
*** (c) ~SeparateOps~
*** (c) ~SequenceFilterOps~
*** (c) ~SetOps~
*** (t) ~SetSyntax~
*** (t) ~ShowSyntax~
*** (t) ~StrongSyntax~
*** (c) ~TabulateOps~
*** (t) ~TraverseFilterSyntax~
*** (t) ~TraverseSyntax~
*** (c) ~TryOps~
*** (t) ~TrySyntax~
*** (t) ~TupleParallelSyntax~
*** (t) ~TupleSemigroupalSyntax~
*** (c) ~UniteOps~
*** (c) ~UnorderedFoldableOps~
*** (t) ~UnorderedFoldableSyntax~
*** (t) ~UnorderedTraverseSyntax~
*** (c) ~ValidatedExtension~
*** (t) ~ValidatedExtensionSyntax~
*** (c) ~ValidatedIdSyntax~
*** (t) ~ValidatedSyntax~
*** (c) ~VectorOps~
*** (t) ~VectorSyntax~
*** (c) ~WriterIdSyntax~
*** (t) ~WriterSyntax~
*** (o) ~align~
*** (o) ~all~
*** (o) ~alternative~
*** (o) ~applicative~
*** (o) ~applicativeError~
*** (o) ~apply~
*** (o) ~arrow~
*** (o) ~arrowChoice~
*** (o) ~bifoldable~
*** (o) ~bifunctor~
*** (o) ~binested~
*** (o) ~bitraverse~
*** (o) ~choice~
*** (o) ~coflatMap~
*** (o) ~comonad~
*** (o) ~compose~
*** (o) ~contravariant~
*** (o) ~contravariantMonoidal~
*** (o) ~contravariantSemigroupal~
*** (o) ~distributive~
*** (o) ~either~
*** (o) ~eitherK~
*** (o) ~eq~
*** (o) ~flatMap~
*** (o) ~foldable~
*** (o) ~functor~
*** (o) ~functorFilter~
*** (o) ~group~
*** (o) ~invariant~
*** (o) ~ior~
*** (o) ~list~
*** (o) ~monad~
*** (o) ~monadError~
*** (o) ~monoid~
*** (o) ~nested~
*** (o) ~nonEmptyTraverse~
*** (o) ~option~
*** (o) ~order~
*** (o) ~parallel~
*** (o) ~partialOrder~
*** (o) ~profunctor~
*** (o) ~reducible~
*** (o) ~representable~
*** (o) ~semigroup~
*** (o) ~semigroupal~
*** (o) ~semigroupk~
*** (o) ~set~
*** (o) ~show~
*** (o) ~strong~
*** (o) ~traverse~
*** (o) ~traverseFilter~
*** (o) ~try_~
*** (o) ~unorderedFoldable~
*** (o) ~unorderedTraverse~
*** (o) ~validated~
*** (o) ~vector~
*** (o) ~writer~
** (o, t) ~Align~
** (o, t) ~Alternative~
** (o, c) ~Always~
** (o, t) ~Applicative~
** (o, t) ~ApplicativeError~
** (o, t) ~Apply~
** (t) ~ApplyArityFunctions~
** (o, t) ~Bifoldable~
** (o, t) ~Bifunctor~
** (o, t) ~Bimonad~
** (o, t) ~Bitraverse~
** (o, t) ~CoflatMap~
** (o, t) ~CommutativeApplicative~
** (o, t) ~CommutativeApply~
** (o, t) ~CommutativeFlatMap~
** (o, t) ~CommutativeMonad~
** (o, t) ~Comonad~
** (o, t) ~Contravariant~
** (o, t) ~ContravariantMonoidal~
** (o, t) ~ContravariantSemigroupal~
** (o, t) ~Defer~
** (o, t) ~Distributive~
** (o, c) ~Eval~
** (t) ~EvalGroup~
** (t) ~EvalMonoid~
** (t) ~EvalSemigroup~
** (o, t) ~FlatMap~
** (o, t) ~Foldable~
** (o, t) ~Functor~
** (o, t) ~FunctorFilter~
** (o, c) ~Inject~
** (o, c) ~InjectK~
** (o, t) ~Invariant~
** (o, t) ~InvariantMonoidal~
** (o, t) ~InvariantSemigroupal~
** (o, c) ~Later~
** (o, t) ~Monad~
** (o, t) ~MonadError~
** (o, t) ~MonoidK~
** (o, t) ~NonEmptyParallel~
** (c) ~NonEmptyReducible~
** (o, t) ~NonEmptyTraverse~
** (o, t) ~NotNull~
** (c) ~Now~
** (o, t) ~Parallel~
** (t) ~ParallelArityFunctions~
** (c) ~ParallelArityFunctions2~
** (o, t) ~Reducible~
** (o, t) ~Representable~
** (o, t) ~SemigroupK~
** (o, t) ~Semigroupal~
** (t) ~SemigroupalArityFunctions~
** (o, t) ~Show~
** (t) ~StackSafeMonad~
** (o, t) ~Traverse~
** (o, t) ~TraverseFilter~
** (o, t) ~UnorderedFoldable~
** (o, t) ~UnorderedTraverse~
** (o) ~implicits~
