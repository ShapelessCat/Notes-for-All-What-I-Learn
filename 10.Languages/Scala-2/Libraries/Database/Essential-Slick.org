#+TITLE: Essential Slick
#+AUTHOR: Richard Dallaway and Jonathan Ferguson
#+COPYRIGHT: 2018 Richard Dallaway and Jonathan Ferguson
#+PUBLISHED By: Underscore Consulting LLP, Brighton, UK
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - 11
** What is Slick? - 11
** How to Contact Us - 12
** Acknowledgements - 12
** Backers - 12
** Conventions Used in This Book - 13
*** Typographical Conventions - 13
*** Source Code - 13
*** REPL Output - 13
*** Callout Boxes - 14

* 1 Basics - 15
** 1.1 Orienta on - 15
** 1.2 Running the Examples and Exercises - 16
** 1.3 Working Interac vely in the sbt Console - 18
** 1.4 Example: A Sequel Odyssey - 19
*** 1.4.1 Library Dependencies - 19
*** 1.4.2 Importing Library Code - 20
*** 1.4.3 Defining our Schema - 21
*** 1.4.4 Example Queries - 22
*** 1.4.5 Configuring the Database - 22
*** 1.4.6 Creating the Schema - 24
*** 1.4.7 Inserting Data - 25
*** 1.4.8 Selecting Data - 26
*** 1.4.9 Combining Queries with For Comprehensions - 28
*** 1.4.10 Actions Combine - 28

** 1.5 Take Home Points - 30
** 1.6 Exercise: Bring Your Own Data - 31

* 2 Selecting Data - 33
** 2.1 Select All The Rows! - 33
** 2.2 Filtering Results: The filter Method - 34
** 2.3 The Query and TableQuery Types - 35
** 2.4 Transforming Results - 37
*** 2.4.1 The map Method - 38
*** 2.4.2 ~exists~ - 40

** 2.5 Converting Queries to Actions - 40
** 2.6 Executing Ac ons - 41
** 2.7 Column Expressions - 43
*** 2.7.1 Equality and Inequality Methods - 43
*** 2.7.2 String Methods - 44
*** 2.7.3 Numeric Methods - 45
*** 2.7.4 Boolean Methods - 45
*** 2.7.5 Option Methods and Type Equivalence - 46

** 2.8 Controlling Queries: Sort, Take, and Drop - 48
** 2.9 Take Home Points - 50
** 2.10 Exercises - 50
*** 2.10.1 Count the Messages - 51
*** 2.10.2 Selecting a Message - 51
*** 2.10.3 One Liners - 51
*** 2.10.4 Checking the SQL - 51
*** 2.10.5 Is HAL Real? - 52
*** 2.10.6 Selecting Columns - 52
*** 2.10.7 First Result - 52
*** 2.10.8 Then the Rest - 52
*** 2.10.9 The Start of Something - 53
*** 2.10.10 Liking - 53
*** 2.10.11 Client-Side or Server-Side? - 53

* 3 Creating and Modifying Data - 55
** 3.1 Inserting Rows - 55
*** 3.1.1 Inserting Single Rows - 55
*** 3.1.2 Primary Key Allocation - 56
*** 3.1.3 Retrieving Primary Keys on Insert - 58
*** 3.1.4 Retrieving Rows on Insert - 58
*** 3.1.5 Inserting Specific Columns - 60
*** 3.1.6 Inserting Multiple Rows - 61
*** 3.1.7 More Control over Inserts - 62

** 3.2 Deleting Rows - 64
** 3.3 Updating Rows - 64
*** 3.3.1 Updating a Single Field - 65
*** 3.3.2 Updating Multiple Fields - 66
*** 3.3.3 Updating with a Computed Value - 67

** 3.4 Take Home Points - 68
** 3.5 Exercises - 69
*** 3.5.1 Get to the Specifics - 69
*** 3.5.2 Bulk All the Inserts - 70
*** 3.5.3 No Apologies - 70
*** 3.5.4 Update Using a For Comprehension - 70
*** 3.5.5 Selective Memory - 71

* 4 Combining Actions - 73
** 4.1 Combinators Summary - 73
** 4.2 Combinators in Detail - 74
*** 4.2.1 andThen (or >> ) - 74
*** 4.2.2 DBIO.seq - 75
*** 4.2.3 map - 75
*** 4.2.4 DBIO.successful and DBIO.failed - 77
*** 4.2.5 flatMap - 78
*** 4.2.6 DBIO.sequence - 80
*** 4.2.7 DBIO.fold - 81
*** 4.2.8 zip - 83
*** 4.2.9 andFinally and cleanUp - 83
*** 4.2.10 asTry - 84

** 4.3 Logging Queries and Results - 85
** 4.4 Transac ons - 86
** 4.5 Take Home Points - 87
** 4.6 Exercises - 88
*** 4.6.1 And Then what? - 88
*** 4.6.2 First! - 88
*** 4.6.3 There Can be Only One - 89
*** 4.6.4 Let’s be Reasonable - 90
*** 4.6.5 Filtering - 90
*** 4.6.6 Unfolding - 91

* 5 Data Modelling - 95
** 5.1 Application Structure - 95
*** 5.1.1 Abstracting over Databases - 96
*** 5.1.2 Scaling to Larger Codebases - 97

** 5.2 Representations for Rows - 98
*** 5.2.1 Projections, ProvenShapes, mapTo, and <> - 98
*** 5.2.2 Tuples versus Case Classes - 101
*** 5.2.3 Heterogeneous Lists - 102

** 5.3 Table and Column Representa on - 108
*** 5.3.1 Nullable Columns - 108
*** 5.3.2 Primary Keys - 110
*** 5.3.3 Compound Primary Keys - 112
*** 5.3.4 Indices - 114
*** 5.3.5 Foreign Keys - 115
*** 5.3.6 Column Options - 119

** 5.4 Custom Column Mappings - 120
*** 5.4.1 Value Classes -123
*** 5.4.2 Modelling Sum Types - 126

** 5.5 Take Home Points - 129
** 5.6 Exercises - 130
*** 5.6.1 Filtering Optional Columns - 130
*** 5.6.2 Matching or Undecided - 131
*** 5.6.3 Enforcement - 132
*** 5.6.4 Mapping Enumerations - 132
*** 5.6.5 Alternative Enumera ons - 132
*** 5.6.6 Custom Boolean - 133
*** 5.6.7 Turning a Row into Many Case Classes - 133

* 6 Joins and Aggregates - 135
** 6.1 Two Kinds of Join - 135
** 6.2 Chapter Schema - 135
** 6.3 Monadic Joins - 137
** 6.4 Applicative Joins - 139
*** 6.4.1 More Tables, Longer Joins - 140
*** 6.4.2 Inner Join - 143
*** 6.4.3 Left Join - 145
*** 6.4.4 Right Join - 147
*** 6.4.5 Full Outer Join - 148
*** 6.4.6 Cross Joins - 149

** 6.5 Zip Joins - 149
** 6.6 Joins Summary - 151
** 6.7 Seen Any Strange Queries? - 152
** 6.8 Aggregation - 152
*** 6.8.1 Functions - 152
*** 6.8.2 Grouping - 153

** 6.9 Take Home Points - 159
** 6.10 Exercises - 159
*** 6.10.1 Name of the Sender - 159
*** 6.10.2 Messages of the Sender - 160
*** 6.10.3 Having Many Messages - 160
*** 6.10.4 Collecting Results - 160

* 7 Plain SQL - 163
** 7.1 Selects - 164
*** 7.1.1 Select with Custom Types - 167
*** 7.1.2 Case Classes - 168

** 7.2 Updates - 170
*** 7.2.1 Updating with Custom Types - 170

** 7.3 Typed Checked Plain SQL - 171
*** 7.3.1 Compile Time Database Connections - 172
*** 7.3.2 Type Checked Plain SQL - 173

** 7.4 Take Home Points - 175
** 7.5 Exercises - 175
*** 7.5.1 Plain Selects - 176
*** 7.5.2 Conversion - 177
*** 7.5.3 Substitution - 177
*** 7.5.4 First and Last - 178
*** 7.5.5 Plain Change - 178
*** 7.5.6 Robert Tables - 178

* A Using Different Database Products - 181
** A.1 Changes - 181
** A.2 PostgreSQL - 182
*** A.2.1 Create a Database - 182
*** A.2.2 Update build.sbt Dependencies - 182
*** A.2.3 Update JDBC References - 183
*** A.2.4 Update Slick Profile - 183

** A.3 MySQL - 183
*** A.3.1 Create a Database - 183
*** A.3.2 Update =build.sbt= Dependencies - 184
*** A.3.3 Update JDBC References - 184
*** A.3.4 Update Slick DriverProfile - 184

* B Solutions to Exercises - 187
** B.1 Basics - 187
*** B.1.1 Solution to: Bring Your Own Data - 187
*** B.1.2 Solution to: Bring Your Own Data Part 2 - 188

** B.2 Selecting Data - 189
*** B.2.1 Solution to: Count the Messages - 189
*** B.2.2 Solution to: Selec ng a Message - 190
*** B.2.3 Solution to: One Liners - 190
*** B.2.4 Solution to: Checking the SQL - 190
*** B.2.5 Solution to: Is HAL Real? - 191
*** B.2.6 Solution to: Selec ng Columns - 191
*** B.2.7 Solution to: First Result - 191
*** B.2.8 Solution to: Then the Rest - 192
*** B.2.9 Solution to: The Start of Something - 193
*** B.2.10 Solution to: Liking - 193
*** B.2.11 Solution to: Client-Side or Server-Side? - 193

** B.3 Crea ng and Modifying Data - 194
*** B.3.1 Solution to: Get to the Specifics - 194
*** B.3.2 Solution to: Bulk All the Inserts - 195
*** B.3.3 Solution to: No Apologies - 196
*** B.3.4 Solution to: Update Using a For Comprehension - 196
*** B.3.5 Solution to: Selective Memory - 196

** B.4 Combining Actions - 197
*** B.4.1 Solution to: And Then what? - 197
*** B.4.2 Solution to: First! - 197
*** B.4.3 Solution to: There Can be Only One - 198
*** B.4.4 Solution to: Let’s be Reasonable - 199
*** B.4.5 Solution to: Filtering - 200
*** B.4.6 Solution to: Unfolding - 200

** B.5 Data Modelling - 201
*** B.5.1 Solution to: Filtering Optional Columns - 201
*** B.5.2 Solution to: Matching or Undecided - 202
*** B.5.3 Solution to: Enforcement - 202
*** B.5.4 Solution to: Mapping Enumerations - 202
*** B.5.5 Solution to: Alterna ve Enumera ons - 203
*** B.5.6 Solution to: Custom Boolean - 204
*** B.5.7 Solution to: Turning a Row into Many Case Classes - 204

** B.6 Joins and Aggregates - 206
*** B.6.1 Solution to: Name of the Sender - 206
*** B.6.2 Solution to: Messages of the Sender - 207
*** B.6.3 Solution to: Having Many Messages - 208
*** B.6.4 Solution to: Collecting Results - 208

** B.7 Plain SQL - 209
*** B.7.1 Solution to: Plain Selects - 209
*** B.7.2 Solution to: Conversion - 210
*** B.7.3 Solution to: Substitution - 210
*** B.7.4 Solution to: First and Last - 211
*** B.7.5 Solution to: Plain Change - 211
*** B.7.5 Solution to: Robert Tables - 212
