#+TITLE: FastParse
#+SUBTITLE: Fast to write, Fast running Parsers in Scala
#+VERSION: 2.2.2
#+AUTHOR: Haoyi Li
#+STARTUP: overview
#+STARTUP: entitiespretty

* Getting Started
* Writing Parsers
** Basic
*** Failures
*** Sequence
*** Repeat
*** Optional
*** Either
*** End, Start
*** Pass, Fail
*** Index
*** Capture
*** AnyChar
*** Positive Lookahead
*** Negative Lookahead
*** Map
*** FlatMap
*** Filter
*** Opaque
*** Log

** Utilities
*** CharPred
*** CharIn
*** CharWhile
*** CharWhileIn
*** StringIn

** TODO Cuts
*** No Cuts
*** Cuts
*** Rep Cuts
*** Isolating Cuts

** TODO Higher Order Parsers
* Streaming Parsing
** Streaming Parsing Buffer Size
** Streaming Parsing Performance
** Streaming Parsing Limitations

* Example Parsers
** Math
** Whitespace Handling
** Indentation Grammars
** Json
** ScalaParse
** PythonParse
** CssParse

* API Highlights
** Parsing Results

* Performance
** Improving Performance
** Profiling

* Debugging Parsers
** Using Cuts
** Using Log
** Tracing
** Instrumenting Parsers
** Use Cases

* Comparisons
* Internals
** Inlining
** Opacity
** Synchronous
** Stack-Limited

* Change Log
*** 2.2.2
    - You can now call ~fastparse.parse~ on any ~geny.Readable~ value, such as
      ~Array[Byte]~'s to parse /binary data/, or ~java.io.InputStream~'s for
      /streaming parsing/.

*** 2.2.0
    - ~fastparse.Parsed.Failure~ is _no longer a /case class/,_
      to improve the pprinting in a the Ammonite REPL.

*** 2.1.3
    - Support for Scala 2.13.0

*** 2.1.0
*** 2.0.5
*** 2.0.4
*** 1.0.0
*** 0.4.4
*** 0.4.3
*** 0.4.2
*** 0.4.1
*** 0.4.0
*** 0.3.7
*** 0.3.6
*** 0.3.5
*** 0.3.4
*** 0.3.3
*** 0.3.2
*** 0.3.1
*** 0.2.1
*** 0.2.0
*** 0.1.7
*** 0.1.6
