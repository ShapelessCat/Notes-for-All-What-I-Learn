#+TITLE: Practical FP in Scala
#+SUBTITLE: A hands-on approach
#+VERSION: May 11, 2020, 1st
#+AUTHORS: Gabriel Volpe
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - 1
* Acknowledgments - 3
* Dependency versions - 4
* Prerequisites - 5
* How to read this book - 6
** Conventions used in this book - 7
   
* Chapter 1: Shopping Cart project - 8
** TODO Business requirements - 9
*** Third-party Payments API - 9
*** Identifying the domain - 10
*** Identifying HTTP endpoints - 12
    
** TODO Architecture - 21
** DONE Technical stack - 22
   CLOSED: [2020-11-28 Sat 02:44]
   Below is the complete list of all the libraries we will be using in our application:
   - cats:
     basic functional blocks.
     From /typeclasses/ such as ~Functor~ to syntax and instances for some
     datatypes and /monad transformers/.

   - cats-effect:
     /concurrency/ and /functional effects/.
     It ships the _default_ ~IO~ /monad/.

   - cats-mtl:
     /typeclasses/ for /monad transformer/ capabilities.

   - cats-retry:
     *retrying actions* that can fail _in a purely functional fashion_.

   - circe:
     standard JSON library to create /encoders/ and /decoders/.

   - ciris:
     _FLEXIBLE configuration library_ with support for DIFFERENT _environments_.

   - fs2:
     powerful streaming in _constant memory and control flow_.

   - http4s:
     _purely functional HTTP server and client_,
     built on top of fs2.

   - http4s-jwt-auth:
     opinionated _JWT authentication_
     built on top of _jwt-scala_.

   - log4cats:
     standard _logging framework_ for Cats.

   - meow-mtl:
     /classy optics/ for /cats-mtl typeclasses/.

   - newtype:
     /zero-cost wrappers/ for strongly typed functions.

   - redis4cats:
     client for Redis compatible with cats-effect.

   - refined:
     _refinement types_ for /type-level validation/.

   - skunk:
     _purely functional, non-blocking PostgreSQL client._

   - squants:
     _strongly-typed units_ of *measure* such as “money”.

*** DONE A note on Cats Effect - 22
    CLOSED: [2020-11-28 Sat 02:44]
    =WATCHING=
    Currently, this book use cats-effect 2.x.
    Next major version may change -- some typeclasses or datatypes may change.
   
* Chapter 2: Design patterns - 23
** Strongly-typed functions - 24
*** Value classes - 24
*** Newtypes - 26
*** Refinement types - 27
    
** Encapsulating state - 29
*** In-memory counter - 29
    
** Sequential vs concurrent state - 31
*** State Monad - 31
*** Atomic Ref - 31
    
** Shared state - 32
*** Regions of sharing - 32
*** Leaky state - 33
    
** Anti-patterns - 34
*** Seq: a base trait for sequences - 34
*** About monad transformers - 34
    
** Error handling - 36
*** MonadError and ApplicativeError - 36
*** Either Monad - 37
*** Classy prisms - 38
    
* Chapter 3: Tagless final encoding - 42
** Algebras - 43
*** Naming conventions - 44
     
** Interpreters - 45
*** Building interpreters - 45
    
** Programs - 47
** Implicit vs explicit parameters - 50
*** Achieving modularity - 51
*** Implicit convenience - 53
     
* Chapter 4: Business logic - 54
** Identifying algebras - 55
** Data access and storage - 61
** Defining programs - 62
*** Checkout - 62
*** Retrying effects - 65
    
* Chapter 5: HTTP layer - 69
** A server is a function - 70
** HTTP Routes #1 - 72
** Authentication - 76
*** JWT Auth - 77
    
** HTTP Routes #2 - 79
** Composing routes - 90
** Middlewares - 91
*** Compositionality - 91
    
** Running server - 93
** Entity codecs - 94
*** JSON codecs - 94
*** Validation - 97
    
** HTTP client - 99
*** Payment client - 99
*** Creating a client - 100
   
* Chapter 6: Persistent layer - 102
** Skunk & Doobie - 103
*** Session Pool - 103
*** Queries - 104
*** Commands - 105
*** Interpreters - 106
*** Streaming & Pagination - 116
    
** Redis for Cats - 123
*** Connection - 123
*** Interpreters - 124
    
** Blocking operations - 131
** Health check - 132
   
* Chapter 7: Testing - 135
** Functional test suite - 136
** Generators - 138
** Business logic - 142
*** Happy path - 142
*** Empty cart - 146
*** Unreachable payment client - 147
*** Recovering payment client - 149
*** Failing orders - 150
*** Failing cart deletion - 152
    
** Http routes - 154
** Integration tests - 158
*** Resource allocation - 158
*** Postgres - 160
*** Redis - 164
    
* Chapter 8: Assembly - 170
** Logging - 171
** Configuration - 173
** Modules - 177
** Resources - 185
** Main - 187
    
* Chapter 9: Deploying - 189
** Docker image - 190
*** Optimizing image - 191
*** Run it locally - 192
    
** Continuous Integration - 193
*** Dependencies - 193
*** CI build - 194
*** Furthermore - 195
    
** Summary - 196
    
* Chapter 10: Advanced techniques - 197
** Tagless Final plugin - 198
** MTL (Monad Transformers Library) - 200
*** Managing state - 200
*** Accessing context - 201
    
** Classy optics - 204
*** Lenses - 204
*** Prisms - 206
*** Classy lenses - 208
*** Classy prisms - 212
    
** Typeclass derivation - 217
*** Kinds - 218
*** Concrete types - 218
*** Higher-kinded types - 219
*** Higher-order functors - 221
    
** Effectful streams - 223
*** Concurrency - 223
*** Resource safety - 224
*** Interruption - 227
