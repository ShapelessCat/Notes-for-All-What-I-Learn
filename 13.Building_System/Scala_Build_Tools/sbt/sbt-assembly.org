#+TITLE: sbt-assembly
#+SUBTITLE: Deploy über-JARs. Restart processes. (port of codahale/assembly-sbt)
#+VERSION: 2.0.0
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

*sbt-assembly* is a _sbt plugin_ originally ported from codahale's *assembly-sbt*,
which I'm guessing was inspired by Maven's assembly plugin.

- The goal is simple:
  _Create a über JAR of your project with all of its dependencies._

* Requirements
  - sbt
  - The burning desire to have a simple deploy procedure.

* Reporting Issues & Contributing
* Setup
** Using Published Plugin
   Add sbt-assembly as a dependency in =project/plugins.sbt=:
   #+begin_src scala
     addSbtPlugin("com.eed3si9n" % "sbt-assembly" % "x.y.z")
   #+end_src

   - Use sbt-assembly *1.1.0*
     IF a project is still using *0.13.x*
     * Staring in _sbt-assembly *1.2.0*,_ it only supports *sbt 1.x.y*.

* Usage
** Applying the plugin to multi-project =build.sbt=
** assembly task
** Merge Strategy
   - *NOTE*

*** Creating a custom Merge Strategy (since 2.0.0)
    - *NOTE*

*** Third Party Merge Strategy Plugins

** Shading
*** Scala libraries

* Excluding JARs and files
** ~% Provided~ configuration
** Exclude specific transitive deps
** Excluding specific files
** Splitting your project and deps JARs
** Excluding Scala library JARs
** ~assemblyExcludedJars~

* Other Things
** Content hash
** Caching
   - *NOTE*
*** Jar assembly performance

** Prepending a launch script
** Publishing (Not Recommended)
** Q: Despite the concerned friends, I still want publish über JARs. What advice do you have?

* License
