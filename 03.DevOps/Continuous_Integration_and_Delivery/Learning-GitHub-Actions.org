#+TITLE: Learning GitHub Actions
#+SUBTITLE: Automation and Integration of CI/CD with GitHub
#+AUTHOR: Brent Laster
#+FOREWORD BY: Julian C. Dunn
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Foreword - xi
* Preface - xiii
* Part I. Foundations
** 1. The Basics - 3
*** What Is GitHub Actions? - 4
**** Automation Platform - 4
**** Framework - 5

*** What Are the Use Cases for GitHub Actions? - 6
**** Starter Workflows - 7
**** Actions Marketplace - 8

*** What Costs Are Involved? - 10
**** The Free Model - 10
**** The Paid Model - 10

*** When Does Moving to GitHub Actions Make Sense? - 13
**** Investment in GitHub - 13
**** Use of Public Actions - 13
**** Creating Your Own Actions - 13
**** Artifact Management - 13
**** Action Management - 14

*** Conclusion - 14

** 2. How Does Actions Work? - 15
*** An Overview - 15
*** Triggering Workflows - 17
**** Components - 19
**** Steps - 19
**** Runners - 20
**** Jobs - 20
**** Workflow - 21

*** Workflow Execution - 22
*** Conclusion - 24

** 3. What's in an action? - 25
*** The Structure of an action - 26
*** Interfacing with actions - 29
*** Using actions - 32
*** Public actions and the Marketplace - 32
*** Conclusion - 36

** 4. Working with Workflows - 37
*** Creating the First Workflow in a Repository - 37
*** Committing the Initial Workflow - 42
*** Using the VS Code GitHub Actions Extension - 59
*** Conclusion - 65

** 5. Runners - 67
*** GitHub-Hosted Runners - 67
**** Whatâ€™s in the Runner Images? - 69
**** Adding Additional Software on Runners - 71

*** Self-Hosted Runners - 72
**** Requirements for Self-Hosted Runners - 73
**** Limits for Self-Hosted Runners - 74
**** Security Considerations for Using Self-Hosted Runners - 74
**** Setting Up a Self-Hosted Runner - 75
**** Using a Self-Hosted Runner - 78
**** Using Labels with Self-Hosted Runners - 79
**** Troubleshooting Self-Hosted Runners - 80
**** Removing a Self-Hosted Runner - 82

*** Autoscaling Self-Hosted Runners - 86
*** Just-in-Time Runners - 86
*** Conclusion - 86

* Part II. Building Blocks
** 6. Managing Your Workflow Environments - 91
*** Naming Your Workflow and Workflow Runs - 91
*** Contexts - 93
*** Environment Variables - 94
**** Default Environment Variables - 95

*** Secrets and Configuration Variables - 97
*** Managing Permissions for Your Workflow - 103
*** Deployment Environments - 105
*** Conclusion - 115

** 7. Managing Data Within Workflows - 117
*** Working with Inputs and Outputs in Workflows - 118
**** Defining and Referencing Workflow Inputs - 118
**** Capturing Output from a Step - 119
**** Capturing Output from a Job - 120
**** Capturing Output from an Action Used in a Step - 121

*** Defining Artifacts - 122
*** Uploading and Downloading Artifacts - 123
**** Adding Parameters - 127

*** Using Caches in GitHub Actions - 135
**** Using the Explicit Cache Action - 136
**** Monitoring Caches - 141
**** Activating a Cache with a Setup Action - 143

*** Conclusion - 145

** 8. Managing Workflow Execution - 147
*** Advanced Triggering from Changes - 147
**** Triggering Based on Activity Types - 148
**** Using Filters to Refine Triggers - 150

*** Triggering Workflows Without a Change - 152
*** Dealing with Concurrency - 156
*** Running a Workflow with a Matrix - 159
*** Workflow Functions - 160
**** Conditionals and Status Functions - 161

*** Conclusion - 163

* Part III. Security and Monitoring
** 9. Actions and Security - 167
*** Security by Configuration - 168
**** Managing Execution of Workflows from Pull Requests - 173
**** Workflow Permissions - 174
**** The CODEOWNERS File - 175
**** Protected Tags - 176
**** Protected Branches - 177
**** Repository Rules - 178

*** Security by Design - 181
**** Secrets - 181
**** Securing Secrets - 182
**** Tokens - 183
**** Dealing with Untrusted Input - 191
**** Securing Your Dependencies - 199

*** Security by Monitoring - 201
**** Scanning - 202
**** Processing Pull Requests Securely - 205
**** Vulnerabilities with Workflows in Pull Requests - 207
**** Vulnerabilities with Source Code in Pull Requests - 212
**** Adding a Pull Request Validation Script - 215
**** Safely Handling Pull Requests - 218

*** Conclusion - 220

** 10. Monitoring, Logging, and Debugging - 223
*** Gaining More Observability - 223
**** Understanding Status at a High Level - 224
**** Creating Status Badges for Workflows - 226

*** Working with Past States - 232
**** Mapping Workflow Versions to Runs - 232
**** Re-running Jobs in a Workflow - 234

*** Debugging Workflows - 241
**** Step Debug Logging - 242
**** Debugging the Runner Environment - 245
**** Activating Debugging - 248

*** Augmenting and Customizing Logging - 249
**** Adding Your Own Messages in Logs - 249
**** Additional Log Customizations - 251
**** Creating a Customized Job Summary - 253

*** Conclusion - 256

* Part IV. Advanced Topics
** 11. Creating Custom actions - 259
*** Anatomy of an action - 260
*** Types of Actions - 263
**** Composite Action - 263
**** Docker Container Action - 267
**** Creating a JavaScript Action - 271

*** Completing Your Action Creation - 274
*** Publishing Actions on the GitHub Marketplace - 276
**** Updating Actions on the Marketplace - 282
**** Removing an Action from the Marketplace - 285

*** The Actions Toolkit - 285
**** Using Workflow Commands from the Toolkit - 286

*** Local actions - 289
*** Conclusion - 291

** 12. Advanced Workflows - 293
*** Creating Your Own Starter Workflows - 293
**** Creating a Starter Workflow Area - 295
**** Creating a Starter Workflow File - 295
**** Adding Supporting Pieces - 297
**** Using the New Starter Workflow - 299

*** Reusable Workflows - 300
**** Inputs and Secrets - 303
**** Outputs - 305
**** Limitations - 306

*** Required Workflows - 308
**** Constraints - 308
**** Example - 309
**** Execution - 313

*** Conclusion - 315

** 13. Advanced Workflow Techniques - 317
*** Driving GitHub from Your Workflow - 317
**** Using the GitHub CLI - 318
**** Creating Scripts - 319
**** Invoking GitHub APIs - 320

*** Using a Matrix Strategy to Automatically Create Jobs - 322
**** One-Dimensional Matrices - 322
**** Multi-dimensional Matrices - 323
**** Including Extra Values - 327
**** Excluding Values - 328
**** Handling Failure Cases - 329
**** Defining Max Concurrent Jobs - 330

*** Using Containers in Your Workflow - 330
**** Using a Container as the Environment for a Job - 331
**** Using a Container with a Step - 333
**** Running Containers as Services in a Job - 334

*** Conclusion - 335

** 14. Migrating to GitHub Actions - 337
*** Prep - 338
**** Source Code - 338
**** Automation - 340
**** Infrastructure - 340
**** Users - 341

*** Azure Pipelines - 342
*** CircleCI - 344
*** GitLab CI/CD - 346
*** Jenkins - 348
*** Travis CI - 351
*** GitHub Actions Importer - 353
**** Authentication - 354
**** Planning - 355
**** Build Steps and Related - 357
**** Manual Tasks - 359
**** File Manifest - 360
**** Forecasting - 361
**** Doing a Dry Run - 363
**** Creating Custom Transformers for the Importer - 364
**** Doing the Actual Migration - 369

*** Conclusion - 373

* Index - 375
