#+TITLE: Managing Kubernetes Resources Using Helm
#+SUBTITLE: Simplifying how to build, package, and distribute applications for Kubernetes
#+VERSION: 2nd
#+AUTHOR: Andrew Block, Austin Dewey
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - xv
* Part 1: Introduction and Setup - 1
* 1 Understanding Kubernetes and Helm - 3
** From monoliths to modern microservices - 4
** What is Kubernetes? - 5
*** Container orchestration - 6
*** HA - 7
*** Scalability - 7
*** Active community - 7

** Deploying a Kubernetes application - 8
** Approaches to resource management - 9
*** Imperative and declarative configurations - 9

** Resource configuration challenges - 13
*** The many types of Kubernetes resources - 13
*** Keeping live and local states in sync - 14
*** Application life cycles are hard to manage - 14
*** Resource files are static - 14

** Helm to the rescue - 15
*** Understanding package managers - 16
*** The Kubernetes package manager - 17
*** The benefits of Helm - 18

** Summary - 21
** Further reading - 21
** Questions - 21

* 2 Preparing a Kubernetes and Helm Environment - 23
** Technical requirements - 23
** Preparing a local Kubernetes environment with minikube - 24
*** Installing minikube - 24
*** Installing VirtualBox - 26
*** Configuring VirtualBox as the default driver - 27
*** Configuring minikube resource allocation - 28
*** Exploring the basic usage of minikube - 28

** Setting up kubectl - 29
*** Installing kubectl - 30

** Setting up Helm - 33
*** Installing Helm - 33

** Configuring Helm - 34
*** Adding upstream repositories - 34
*** Adding plugins - 36
*** Environment variables - 37
*** Tab completion - 38
*** Authentication - 39
*** Authorization/RBAC - 41

** Summary - 42
** Further reading - 42
** Questions - 43

* 3 Installing Your First App with Helm - 45
** Technical requirements - 46
** Understanding the WordPress application - 46
** Finding a WordPress chart - 47
*** Searching for WordPress charts from the command line - 48
*** Viewing the WordPress chart in a browser - 49
*** Bitnami repository chart retention policy - 50
*** Adding the full Bitnami repository - 51
*** Showing the WordPress chart information from the command line - 52

** Creating a Kubernetes environment - 54
** Installing a WordPress chart - 55
*** Creating a values file for configuration - 55
*** Running the installation - 58
*** Inspecting your release - 60

** Choosing between ~--set~ and ~--values~ - 65
** Accessing the WordPress application - 66
** Upgrading the WordPress release - 70
*** Modifying the Helm values - 70
*** Running the upgrade - 71
*** Reusing and resetting values during an upgrade - 73

** Rolling back the WordPress release - 74
*** Inspecting the WordPress history - 74
*** Running the rollback - 76

** Uninstalling the WordPress release - 78
** Shutting down your environment - 79
** Summary - 79
** Further reading - 79
** Questions - 80

* Part 2: Helm Chart Development - 81
* 4 Scaffolding a New Helm Chart - 83
** Technical requirements - 83
** Understanding the Guestbook application - 84
** Understanding the YAML format - 85
*** Defining key-value pairs - 85
*** Value types - 86
*** The JSON format - 87

** Scaffolding the Guestbook Helm chart - 88
** Deploying the scaffolded Guestbook chart - 91
** Understanding the =Chart.yaml= file - 94
** Updating the Guestbook =Chart.yaml= file - 99
** Summary - 99
** Further reading - 100
** Questions - 10

* 5 Helm Dependency Management - 101
** Technical requirements - 102
** Declaring chart dependencies - 102
** The dependencies map - 103
** Downloading chart dependencies - 104
** Creating conditionals - 108
** Altering dependency names and values - 112
** Updating the guestbook Helm chart - 117
** Cleaning up - 119
** Summary - 119
** Further reading - 119
** Questions - 120

* 6 Understanding Helm Templates - 121
** Technical requirements - 122
** Helm template basics - 122
** Template values - 124
** Built-in objects - 125
*** The ~.Release~ object - 127
*** The ~.Chart~ object - 128
*** The ~.Template~ object - 130
*** The ~.Capabilities~ object - 130
*** The ~.Files~ object - 131

** Helm template functions - 133
** Helm template control structures - 140
** Generating release notes - 145
** Helm template variables - 146
** Helm template validation - 148
*** The fail function - 148
*** The required function - 150
*** The =values.schema.json= file - 151

** Enabling code reuse with named templates and library charts - 153
** Creating CRDs - 155
** Post rendering - 156
** Updating and deploying the Guestbook chart - 158
*** Updating Redis values - 158
*** Updating Guestbook's deployment template and =values.yaml= file - 158
*** Deploying the Guestbook chart - 160

** Summary - 161
** Further reading - 161
** Questions - 162

* 7 Helm Lifecycle Hooks - 163
** Technical requirements - 164
** The basics of a Helm hook - 164
** Helm hook life cycle - 167
** Helm hook cleanup - 169
** Writing hooks in the Guestbook Helm chart - 170
*** Creating the pre-upgrade hook to take a data snapshot - 171
*** Creating the pre-rollback hook to restore the database - 174
*** Executing the life cycle hooks - 178

** Cleaning up - 180
** Summary - 180
** Further reading - 181
** Questions - 181

* 8 Publishing to a Helm Chart Repository - 183
** Technical requirements - 183
** Understanding Helm chart repositories - 184
** Publishing to an HTTP repository - 184
*** Creating a GitHub Pages repository - 185
*** Publishing the Guestbook chart - 187

** Publishing to an OCI registry - 190
*** Pulling the OCI Guestbook chart - 193

** Summary - 194
** Further reading - 194
** Questions - 194

* 9 Testing Helm Charts - 195
** Technical requirements - 195
** Setting up your environment - 196
** Verifying Helm templating - 196
*** Validating template generation locally with helm template - 196
*** Adding server-side validation to chart rendering - 198
*** Linting Helm charts and templates - 199

** Testing in a live cluster - 202
*** Running the chart test - 203

** Improving chart tests with the Chart Testing tool - 205
*** Introducing the Chart Testing project - 206
*** Installing the Chart Testing tools - 208
*** Running the lint-and-install command - 211

** Cleaning up - 214
** Summary - 214
** Further reading - 215
** Questions - 215

* Part 3: Advanced Deployment Patterns - 217
* 10 Automating Helm with CD and GitOps - 219
** Technical requirements - 220
** Understanding CI/CD and GitOps - 220
*** CI/CD - 220
*** Taking CI/CD to the next level using GitOps - 221

** Setting up your environment - 222
** Installing Argo CD - 222
** Deploying a Helm chart from a Git repository - 225
** Deploying an application from a remote Helm chart repository - 229
** Deploying a Helm chart to multiple environments - 230
** Cleaning up - 234
** Summary - 234
** Questions - 235

* 11 Using Helm with the Operator Framework - 237
** Technical requirements - 238
** Understanding Kubernetes operators - 238
** Understanding the Guestbook operator control loop - 239
*** Preparing a local development environment - 240
*** Scaffolding the operator file structure - 242
*** Building the operator image - 243
*** Deploying the Guestbook operator - 246
*** Deploying the Guestbook application - 250

** Using Helm to manage operators, CRDs, and CRs - 252
** Cleaning up - 253
** Summary - 254
** Further reading - 254
** Questions - 254

* 12 Helm Security Considerations - 255
** Technical requirements - 255
** Data provenance and integrity - 256
*** Creating a GPG key pair - 257
*** Verifying Helm downloads - 259
*** Signing and verifying Helm charts - 263

** Developing secure and stable Helm charts - 266
*** Using secure images - 266
*** Setting resource requests and limits - 268
*** Handling secrets in Helm charts - 270

** Configuring RBAC rules - 272
*** Accessing secure chart repositories - 274

** Summary - 276
** Further reading - 277
** Questions - 277

* Index - 279
* Other Books You May Enjoy - 288
