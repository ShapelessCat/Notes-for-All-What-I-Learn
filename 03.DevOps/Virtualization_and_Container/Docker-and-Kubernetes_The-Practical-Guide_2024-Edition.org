#+TITLE: Docker and Kubernetes: The Practical Guide [2024 Edition]
#+SUBTITLE: Learn Docker, Docker Compose, Multi-Container Projects, Deployment and all about Kubernetes from the ground up!
#+VERSION: Last Updated 2024-01
#+AUTHOR: Academind by Maximilian Schwarzmüller, Maximilian Schwarzmüller
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Section 1: Getting Started
** 1. Welcome to the Course
** 2. What Is Docker?
- Docker :: A container technology - A tool for creating and managing containers
  * container :: A standardized unit of software
    A package of code aand dependencies to run that code (e.g. NodeJS code + NodeJS runtime).
    + The same container always yields the exact same application and execuution behaavior!
      No matter where or by whom it might be executed.

    + Support for /containers/ *is built into* modern operating systems!!!

    + Docker _SIMPLIFIES_ the creation and management of such /containers/.

** 3. Why Docker & Containers?
** 4. Join Our Learning Community
** 5. Virtual Machines vs Docker Containers
** 6. Docker Setup - Overview
** 7. Docker Setup - macOS
** 8. Docker Setup - Windows
** 9. Docker Setup - Docker Toolbox for Older Systems
** 10. Docker Playground
** 11. An Overview of the Docker Tools
** 12. Installing & Configuring an IDE
** 13. Getting Our Hands Dirty!
** 14. Course Outline
** 15. How To Get The Most Out Of This Course
** 16. Course Resources

* Section 2: Docker Images & Containers: The Core Building Blocks
** 17. Module Introduction
** 18. Images & Containers: What and Why?
** 19. Using & Running External (Pre-Built) Images
** 20. Our Goal: A NodeJS App
** 21. Building our own Image with a Dockerfile
** 22. Running a Container based on our own Image
** 23. EXPOSE & A Little Utility Functionality
** 24. Images are Read-Only!
** 25. Understanding Image Layers
** 26. A First Summary
** Quiz 1: Images & Containers
** 27. Managing Images & Containers
** 28. Stopping & Restarting Containers
** 29. Understanding Attached & Detached Containers
** 30. Attaching to an already-running Container
** 31. Entering Interactive Mode
** 32. Deleting Images & Containers
** 33. Removing Stopped Containers Automatically
** 34. A Look Behind the Scenes: Inspecting Images
** 35. Copying Files Into & From A Container
** 36. Naming & Tagging Containers and Images
** Assignment 1: Time to Practice: Images & Containers
** 37. Sharing Images - Overview
** 38. Pushing Images to DockerHub
** 39. Pulling & Using Shared Images
** Quiz 2: Managing Images & Containers
** 40. Module Summary
** 41. Module Resources

* Section 3: Managing Data & Working with Volumes
** 42. Module Introduction
** 43. Understanding Data Categories / Different Kinds of Data
** 44. Analyzing a Real App
** 45. Building & Understanding the Demo App
** 46. Understanding the Problem
** 47. Introducing Volumes
** 48. A First, Unsuccessful Try
** 49. Named Volumes To The Rescue!
** 50. Removing Anonymous Volumes
** 51. Getting Started With Bind Mounts (Code Sharing)
** 52. Bind Mounts - Shortcuts
** 53. Combining & Merging Different Volumes
** 54. A NodeJS-specific Adjustment: Using Nodemon in a Container
** 55. Volumes & Bind Mounts: Summary
** Quiz 3: Volumes & Bind Mounts
** 56. A Look at Read-Only Volumes
** 57. Managing Docker Volumes
** 58. Using "COPY" vs Bind Mounts
** 59. Don't COPY Everything: Using "dockerignore" Files
** 60. Adding more to the .dockerignore File
** 61. Working with Environment Variables & ".env" Files
** 62. Environment Variables & Security
** 63. Using Build Arguments (ARG)
** 64. Module Summary
** 65. Module Resources

* Section 4: Networking: (Cross-)Container Communication
** 66. Module Introduction
** 67. Case 1: Container to WWW Communication
** 68. Case 2: Container to Local Host Machine Communication
** 69. Case 3: Container to Container Communication
** 70. Analyzing the Demo App
** 71. Creating a Container & Communicating to the Web (WWW)
** 72. Making Container to Host Communication Work
** 73. Container to Container Communication: A Basic Solution
** 74. Introducing Docker Networks: Elegant Container to Container Communication
** 75. How Docker Resolves IP Addresses
** Quiz 4: Docker Container Communication & Networks
** 76. Docker Network Drivers
** 77. Module Summary
** 78. Module Resources

* Section 5: Building Multi-Container Applications with Docker
** 79. Module Introduction
** 80. Our Target App & Setup
** 81. Dockerizing the MongoDB Service
** 82. Dockerizing the Node App
** 83. Moving the React SPA into a Container
** 84. Adding Docker Networks for Efficient Cross-Container Communication
** 85. Fixing MongoDB Authentication Errors (relevant for next lecture)
** 86. Adding Data Persistence to MongoDB with Volumes
** 87. Volumes, Bind Mounts & Polishing for the NodeJS Container
** 88. Live Source Code Updates for the React Container (with Bind Mounts)
** 89. Module Summary
** 90. Module Resources

* Section 6: Docker Compose: Elegant Multi-Container Orchestration
** 91. Module Introduction
** 92. Docker-Compose: What & Why?
** 93. Creating a Compose File
** 94. Diving into the Compose File Configuration
** 95. Installing Docker Compose on Linux
** 96. Docker Compose Up & Down
** 97. Working with Multiple Containers
** 98. Adding Another Container
** 99. Building Images & Understanding Container Names
** Quiz 5: Docker Compose
** 100. Module Summary
** 101. Module Resources

* Section 7: Working with "Utility Containers" & Executing Commands In Containers
** 102. Module Introduction & What are "Utility Containers"?
** 103. Utility Containers: Why would you use them?
** 104. Different Ways of Running Commands in Containers
** 105. Building a First Utility Container
** 106. Utilizing ENTRYPOINT
** 107. Using Docker Compose
** 108. Utility Containers, Permissions & Linux
** 109. Module Summary
** 110. Module Resources

* Section 8: A More Complex Setup: A Laravel & PHP Dockerized Project
** 111. Module Introduction
** 112. The Target Setup
** 113. Adding a Nginx (Web Server) Container
** 114. Adding a PHP Container
** 115. Adding a MySQL Container
** 116. Adding a Composer Utility Container
** 117. Creating a Laravel App via the Composer Utility Container
** 118. Fixing Errors With The Next Lecture
** 119. Launching Only Some Docker Compose Services
** 120. Adding More Utility Containers
** 121. Docker Compose with and without Dockerfiles
** 122. Bind Mounts and COPY: When To Use What
** 123. Module Resources

* Section 9: Deploying Docker Containers
** 124. Module Introduction
** 125. From Development To Production
** 126. Deployment Process & Providers
** 127. Getting Started With An Example
** 128. Bind Mounts In Production
** 129. Introducing AWS & EC2
** 130. Connecting to an EC2 Instance
** 131. Important: Installing Docker on a Virtual Machine
** 132. Installing Docker on a Virtual Machine
** 133. Installing Docker on Linux in General
** 134. Pushing our local Image to the Cloud
** 135. Running & Publishing the App (on EC2)
** 136. Managing & Updating the Container / Image
** 137. Disadvantages of our Current Approach
** 138. From Manual Deployment to Managed Services
** 139. Important: AWS, Pricing and ECS
** 140. Deploying with AWS ECS: A Managed Docker Container Service
** 141. More on AWS
** 142. Updating Managed Containers
** 143. Preparing a Multi-Container App
** 144. Configuring the NodeJS Backend Container
** 145. Deploying a Second Container & A Load Balancer
** 146. Using a Load Balancer for a Stable Domain
** 147. Using EFS Volumes with ECS
** 148. Our Current Architecture
** 149. Databases & Containers: An Important Consideration
** 150. Moving to MongoDB Atlas
** 151. Using MongoDB Atlas in Production
** 152. Our Updated & Target Architecture
** 153. Understanding a Common Problem
** 154. Creating a "build-only" Container
** 155. Introducing Multi-Stage Builds
** 156. Building a Multi-Stage Image
** 157. Deploying a Standalone Frontend App
** 158. Development vs Production: Differences
** 159. Understanding Multi-Stage Build Targets
** 160. Beyond AWS
** 161. Module Summary
** 162. Module Resources

* Section 10: Docker & Containers - A Summary
** 163. Module Introduction
** 164. Images & Containers
** 165. Key Commands
** 166. Data, Volumes & Networking
** 167. Docker Compose
** 168. Local vs Remote
** 169. Deployment
** 170. Module Resources

* Section 11: Getting Started with Kubernetes
** 171. Module Introduction
** 172. More Problems with Manual Deployment
** 173. Why Kubernetes?
** 174. What Is Kubernetes Exactly?
** 175. Kubernetes: Architecture & Core Concepts
** 176. Kubernetes will NOT manage your Infrastructure!
** 177. A Closer Look at the Worker Nodes
** 178. A Closer Look at the Master Node
** 179. Important Terms & Concepts
** Quiz 6: Kubernetes Core Concepts
** 180. Module Resources

* Section 12: Kubernetes in Action - Diving into the Core Concepts
** 181. Module Introduction
** 182. Kubernetes does NOT manage your Infrastructure
** 183. Kubernetes: Required Setup & Installation Steps
** 184. macOS Setup
** 185. Windows Setup
** 186. Understanding Kubernetes Objects (Resources)
** 187. The "Deployment" Object (Resource)
** 188. A First Deployment - Using the Imperative Approach
** 189. kubectl: Behind The Scenes
** 190. The "Service" Object (Resource)
** 191. Exposing a Deployment with a Service
** 192. Restarting Containers
** 193. Scaling in Action
** 194. Updating Deployments
** 195. Deployment Rollbacks & History
** 196. The Imperative vs The Declarative Approach
** 197. Creating a Deployment Configuration File (Declarative Approach)
** 198. Adding Pod and Container Specs
** 199. Working with Labels & Selectors
** 200. Creating a Service Declaratively
** 201. Updating & Deleting Resources
** 202. Multiple vs Single Config Files
** 203. More on Labels & Selectors
** 204. Liveness Probes
** 205. A Closer Look at the Configuration Options
** 206. Summary
** 207. Module Resources

* Section 13: Managing Data & Volumes with Kubernetes
** 208. Module Introduction
** 209. Starting Project & What We Know Already
** 210. Kubernetes & Volumes - More Than Docker Volumes
** 211. Kubernetes Volumes: Theory & Docker Comparison
** 212. Creating a New Deployment & Service
** 213. Getting Started with Kubernetes Volumes
** 214. A First Volume: The "emptyDir" Type
** 215. A Second Volume: The "hostPath" Type
** 216. Understanding the "CSI" Volume Type
** 217. From Volumes to Persistent Volumes
** 218. Defining a Persistent Volume
** 219. Creating a Persistent Volume Claim
** 220. Using a Claim in a Pod
** 221. Volumes vs Persistent Volumes
** 222. Using Environment Variables
** 223. Environment Variables & ConfigMaps
** 224. Module Summary
** 225. Module Resources

* Section 14: Kubernetes Networking
** 226. Module Introduction
** 227. Starting Project & Our Goal
** 228. Creating a First Deployment
** 229. Another Look at Services
** 230. Multiple Containers in One Pod
** 231. Pod-internal Communication
** 232. Creating Multiple Deployments
** 233. Pod-to-Pod Communication with IP Addresses & Environment Variables
** 234. Using DNS for Pod-to-Pod Communication
** 235. Which Approach Is Best? And a Challenge!
** 236. Challenge Solution
** 237. Adding a Containerized Frontend
** 238. Deploying the Frontend with Kubernetes
** 239. Using a Reverse Proxy for the Frontend
** 240. Module Summary
** 241. Module Resources

* Section 15: Kubernetes - Deployment (AWS EKS)
** 242. Module Introduction
** 243. Deployment Options & Steps
** 244. AWS EKS vs AWS ECS
** 245. Preparing the Starting Project
** 246. A Note on AWS EKS Pricing
** 247. Diving Into AWS
** 248. Creating & Configuring the Kubernetes Cluster with EKS
** 249. Adding Worker Nodes
** 250. Applying Our Kubernetes Config
** 251. Getting Started with Volumes
** 252. Adding EFS as a Volume (with the CSI Volume Type)
** 253. Creating a Persistent Volume for EFS
** 254. Using the EFS Volume
** 255. A Challenge!
** 256. Challenge Solution
** 257. Module Resources

* Section 16: Roundup & Next Steps
** 258. You Learned A Lot!
** 259. Related Topics You Could Explore
** 260. Next Steps!
** 261. Course Roundup
** 262. Bonus!
