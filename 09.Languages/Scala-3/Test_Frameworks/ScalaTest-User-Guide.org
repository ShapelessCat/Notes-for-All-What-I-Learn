#+TITLE: ScalaTest User Guide
#+VERSION: 3.2.2
#+STARTUP: overview
#+STARTUP: entitiespretty

* Getting started
  - This user guide will help you get rolling quickly with ScalaTest.
    First a brief orientation:
    * The central concept in ScalaTest is the suite, a collection of zero to many
      tests.

    * A test can be anything with a name that can start and either succeed, fail,
      be pending, or canceled.

    * The central unit of composition in ScalaTest is Suite, which represents a
      suite of tests.

    * Trait Suite declares run and other “lifecycle” methods that define a default
      way to write and run tests.

    * These lifecycle methods can be overridden to customize how tests are written
      and run.

    * ScalaTest offers style traits that extend ~Suite~ and override lifecycle
      methods to support different testing styles.

    * It provides mixin traits that override lifecycle methods of the style traits
      to address particular testing needs.

    * You define test classes by composing ~Suite~ style and mixin traits.

    * You define test suites by composing ~Suite~ instances.
      
  - To include ScalaTest in your sbt project, simply add this line:
    #+begin_src scala
      libraryDependencies += "org.scalatest" %% "scalatest" % "3.2.2" % Test
    #+end_src
    
* Selecting testing styles
* Defining base classes
* Writing your first test
* Using assertions
* Tagging your tests
* Running your tests
* Sharing fixtures
* Sharing tests
* Using matchers
* Testing with mock objects
* Property-based testing
* Asynchronous testing
* Using Scala-js
* Using Inside
* Using OptionValues
* Using EitherValues
* Using PartialFunctionValues
* Using PrivateMethodTester
* Using WrapWith
* Philosophy and design
* Migrating to 3.0
