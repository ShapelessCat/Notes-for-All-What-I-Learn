#+TITLE: Effective Rust
#+AUTHOR: David Drysdale
#+STARTUP: entitiespretty
#+STARTUP: indent
#+STARTUP: overview

* Preface - v
* 1. Types - 1
** Item 1: Use the type system to express your data structures - 2
** Item 2: Use the type system to express common behavior - 10
** Item 3: Prefer ~Option~ and ~Result~ transforms over explicit ~match~ expressions - 20
** Item 4: Prefer idiomatic ~Error~ types - 25
** Item 5: Understand type conversions - 34
** Item 6: Embrace the newtype pattern - 40
** Item 7: Use builders for complex types - 45
** Item 8: Familiarize yourself with reference and pointer types - 51
** Item 9: Consider using iterator transforms instead of explicit loops - 64

* 2. Traits - 77
** Item 10: Familiarize yourself with standard traits - 77
** Item 11: Implement the ~Drop~ trait for RAII patterns - 89
** Item 12: Understand the trade-offs between generics and trait objects - 93
** Item 13: Use default implementations to minimize required trait methods - 103

* 3. Concepts - 105
** Item 14: Understand lifetimes - 106
** Item 15: Understand the borrow checker - 123
** Item 16: Avoid writing ~unsafe~ code - 142
** Item 17: Be wary of shared-state parallelism - 145
** Item 18: Don't panic - 159
** Item 19: Avoid reflection - 162
** Item 20: Avoid the temptation to over-optimize - 169

* 4. Dependencies - 175
** Item 21: Understand what semantic versioning promises - 176
** Item 22: Minimize visibility - 181
** Item 23: Avoid wildcard imports - 186
** Item 24: Re-export dependencies whose types appear in your API - 188
** Item 25: Manage your dependency graph - 191
** Item 26: Be wary of feature creep - 197

* 5. Tooling - 203
** Item 27: Document public interfaces - 203
** Item 28: Use macros judiciously - 209
** Item 29: Listen to Clippy - 223
** Item 30: Write more than unit tests - 227
** Item 31: Take advantage of the tooling ecosystem - 235
** Item 32: Set up a continuous integration (CI) system - 237

* 6. Beyond Standard Rust - 243
** Item 33: Consider making library code ~no_std~ compatible - 243
** Item 34: Control what crosses FFI boundaries - 249
** Item 35: Prefer bindgen to manual FFI mappings - 261

* Afterword - 265
* Index - 267
