#+TITLE: The rustdoc Book
#+STARTUP: indent
#+STARTUP: overview
#+STARTUP: entitiespretty

* TODO 1. What is rustdoc?
- The standard Rust distribution ships with a tool called *rustdoc*.

- rustdoc's job is to generate documentation for Rust projects.
  On a fundamental level,
  rustdoc
    _TAKES_ as an argument either a /crate root/ or a /Markdown file/, and
    _PRODUCES_ HTML, CSS, and JavaScript.

** Basic usage
** Configuring rustdoc
** Using rustdoc with Cargo
** Outer and inner documentation
** Using standalone Markdown files
** Summary

* TODO 2. Command-line arguments
*** ~-h/--help~: help
*** ~-V/--version~: version information
*** ~-v/--verbose~: more verbose output
*** ~o/--out-dir~: output directory path
*** ~-crate-name~: controlling the name of the crate
*** ~-document-private-items~: Show items that are not public
*** ~L/--library-path~: where to look for dependencies
*** ~-cfg~: passing configuration flags
*** ~-extern~: specify a dependency's location
*** ~C/--codegen~: pass codegen options to rustc
*** ~-test~: run code examples as tests
*** ~-test-args~: pass options to test runner
*** ~-test-run-directory~: run code examples in a specific directory
*** ~-target~: generate documentation for the specified target triple
*** ~-default-theme~: set the default theme
*** ~-markdown-css~: include more CSS files when rendering markdown
*** ~-html-in-header~: include more HTML in
*** ~-html-before-content~: include more HTML before the content
*** ~-html-after-content~: include more HTML after the content
*** ~-markdown-playground-url~: control the location of the playground
*** ~-markdown-no-toc~: don't generate a table of contents
*** ~e/--extend-css~: extend rustdoc's CSS
*** ~-sysroot~: override the system root
*** ~-edition~: control the edition of docs and doctests
*** ~-theme~: add a theme to the documentation output
*** ~-check-theme~: verify custom themes against the default theme
*** ~-crate-version~: control the crate version
*** ~@path~: load command-line flags from a path
*** DONE --passes: add more rustdoc passes
CLOSED: [2023-07-29 Sat 18:16]
_This flag is *deprecated*._

*** DONE --no-defaults: don't run default passes
CLOSED: [2023-07-29 Sat 18:16]
_This flag is *deprecated*._

*** DONE -r/--input-format: input format
CLOSED: [2023-07-29 Sat 18:15]
_This flag is *deprecated* and has *no effect*._

- Rustdoc *ONLY supports* _Rust source code_ and _Markdown input formats_.
  * If the file ends in =.md= or =.markdown=, rustdoc treats it as a Markdown file.
  * Otherwise, it assumes that the input file is _Rust_.

* TODO 3. How to read rustdoc output
*** Structure
*** The Item Documentation
**** Navigation

*** The Navigation Bar
*** The Theme Picker and Search Interface
**** The Search Interface
**** Shortcuts

** 3.1. In-doc settings
*** Changing displayed theme
*** Auto-hide item contents for large items
*** Auto-hide item methods' documentation
*** Auto-hide trait implementation documentation
*** Directly go to item in search if there is only one result
*** Show line numbers on code examples
*** Disable keyboard shortcuts

* TODO 4. How to write documentation
*** Getting Started
*** Documenting components
*** Markdown
**** Strikethrough
**** Footnotes
**** Tables
**** Task lists
**** Smart punctuation

** 4.1. What to include (and exclude)
*** Examples
*** What to Exclude
*** Customizing the output

** 4.2. The ~#[doc]~ attribute
*** At the crate level
**** ~html_favicon_url~
**** ~html_logo_url~
**** ~html_playground_url~
**** ~issue_tracker_base_url~
**** ~html_root_url~
**** ~html_no_sourxcce~
**** ~test(no_crate_inject)~
**** ~test(attr(...))~

*** At the crate level
**** ~inline~ and ~no_inline~
**** ~hidden~
**** ~alias~
**** FFI example

** 4.3. Linking to items by name
*** Valid links
*** Namespaces and Disambiguators
*** Warnings, re-exports, and scoping

** 4.4. Documentation tests
*** Passing or failing a doctest
*** Pre-processing examples
*** Hiding portions of the example
*** Using ~?~ in doc tests
*** Showing warnings in doctests
*** Documenting macros
*** Attributes
*** Syntax reference
**** Include items only when collecting doctests

*** Controlling the compilation and run directories

* TODO 5. Rustdoc-specific lints
** ~broken_intra_doc_links~
** ~private_intra_doc_links~
** ~missing_docs~
** ~missing_crate_level_docs~
** ~missing_doc_code_examples~
** ~private_doc_tests~
** ~invalid_codeblock_attributes~
** ~invalid_html_tags~
** ~invalid_rust_codeblocks~
** ~bare_urls~
** ~unescaped_backticks~

* TODO 6. Scraped examples
** How to use this feature
** How it works
** FAQ
*** My example is not showing uup in the documentation

* TODO 7. Advanced features
** ~#[cfg(doc)]~: Documenting platform-specific or feature-specific information
*** Interactions between platform-specific docs

** Add aliases for an item in documentation search
** Custom search engines

* TODO 8. Unstable features
** Nightly-gated functionality
*** Error numbers for ~compile-fail~ doctests
*** ~missing_doc_code_examples~ lint

** Extensions to the #[doc] attribute
*** ~#[doc(cfg)]~: Recording what platforms or features are required for code to be present
*** ~doc_auto_cfg~: Automatically generate ~#[doc(cfg)]~
*** Adding your trait to the "Notable traits" dialog
*** Exclude certain dependencies from documentation
*** Document primitives
*** Document keywords

** Effects of other nightly features
** ~fundamental~ types
** Unstable command-line arguments
*** ~-markdown-before-content~: include rendered Markdown before the content
*** ~-markdown-after-content~: include rendered Markdown after the content
*** ~-playground-url~: control the location of the playground
*** ~-sort-modules-by-appearance~: control how items on module pages are sorted
*** ~-show-type-layout~: add a section to each type's docs describing its memory layout
*** ~-resource-suffix~: modifying the name of CSS/JavaScript in crate docs
*** ~-extern-html-root-url~: control how rustdoc links to non-local crates
*** ~-Z~ force-unstable-if-unmarked
*** ~-index-page~: provide a top-level landing page for docs
*** ~-enable-index-page~: generate a default index page for docs
*** ~-nocapture~: disable output capture for test
*** ~-check~: only checks the documentation
*** ~-static-root-path~: control how static files are loaded in HTML output
*** ~-persist-doctests~: persist doctest executables after running
*** ~-show-coverage~: calculate the percentage of items with documentation
*** JSON output
*** ~w/--output-format~: output format
*** ~-enable-per-target-ignores~: allow ignore-foo style filters for doctests
*** ~-runtool, --runtool-arg~: program to run tests with; args to pass to it
*** ~-with-examples~: include examples of uses of items as documentation
*** ~-check-cfg~: check configuration flags
*** ~-generate-link-to-definition~: Generate links on types in source code

* TODO 9. Deprecated features
*** Passes

* 10. References
