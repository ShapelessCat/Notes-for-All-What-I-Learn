#+TITLE: The Rust Style Guide
#+VERSION: ???
#+STARTUP: indent
#+STARTUP: overview
#+STARTUP: entitiespretty

* Introduction
** Motivation - why use a formatting tool?
** The default Rust style
** Formatting conventions
*** Indentation and line width
*** Block indent
*** Trailing commas
*** Blank lines
*** Module-level items
*** Statements
*** Expressions
*** Types
*** Comments
**** Doc comments

*** Attributes
*** small items
*** Non-formatting conventions
*** Cargo.toml conventions
*** Principles used for deciding these guidelines

* 1. Items
** Function definitions
** Tuples and tuple structs
*** Single-line

** Enums
** Structs and Unions
** Tuple structs
** Traits
** Impls
** Extern crate
** Modules
** macro_rules!
** Generics
*** ~where~ clauses
*** Type aliases

** Associated types
*** extern items

** Imports (~use~ statements~
*** Large list imports
*** Ordering of imports
*** Ordering list import
*** Normalisation
*** Nested imports
*** Merging/un-merging imports

* 2. Statements
** Let statements
*** ~else~ blocks (let-else statements)

** Macros in statement position
** Expressions in statement position

* 3. Expressions
** Blocks
** Closures
** Struct literals
** Tuple literals
** Tuple struct literals
** Enum literals
** Array literals
** Array accesses, indexing, and slicing. =FIXME=
** Unary operations
** Binary operations
** Control flow
** Function calls
*** Single-line calls
*** Multi-line calls

** Method calls
** Macro uses
*** Special case macros

** Casts (~as~)
** Chains of fields and method calls
*** Multi-line elements

** Control flow expressions
*** Single line ~if else~

** Match
*** Line-breaking

** Combinable expressions
** Ranges
** Hexadecimal literals
** Patterns =FIXME: lower down level=

* 4. Types and Bounds
** Single line formatting
** Line breaks

* 5. Other style advice
** Expressions
** Names
*** modules

* 6. Cargo.toml conventions
** Formatting conventions
** Metadata conventions

* 7. Guiding principles and rationale
* 8. Nightly-only syntax
