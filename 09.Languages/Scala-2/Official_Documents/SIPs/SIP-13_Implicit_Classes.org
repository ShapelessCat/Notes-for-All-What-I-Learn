#+TITLE: SIP-13 - IMPLICIT CLASSES
#+AUTHOR: Josh Suereth
#+STARTUP: overview
#+STARTUP: entitiespretty

* DONE Abstract
  CLOSED: [2019-06-10 Mon 00:28]
  A new language construct is proposed to simplify the creation of /classes/ which
  provide /extension methods/ to another /type/.

* TODO Description
* DONE Specification
  CLOSED: [2019-06-10 Mon 00:31]
  _NO changes_ are required to /Scala's syntax specification/, as the relevant
  production rules already allow for /implicit classes/.
  #+begin_src text
    LocalModifier ::= ‘implicit’
    BlockStat     ::= {LocalModifier} TmplDef
    TmplDef       ::= [‘case’] ‘class’ ClassDef
  #+end_src

  - The language specification (SLS 7.1) would be modified to allow the use of
    the ~implicit~ /modifier/ for /classes/. A new section on _Implicit Classes_
    would describe the behavior of the construct.

* TODO Consequences
  The new syntax should not break existing code, and so remain source compatible
  with existing techniques.
