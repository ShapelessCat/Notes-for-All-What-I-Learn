#+TITLE: Learning SQL
#+VERSION: 2nd
#+AUTHOR: Alan Beaulieu
#+YEAR: 2009
#+STARTUP: overview
#+STARTUP: entitiespretty

* Preface - ix
* 1. A Little Background - 1
** Introduction to Databases 1
   - /database/ :: nothing more than a set of related information.

   - /database system/ :: database with computerized data storage and retrieval mechanisms.

*** TODO Nonrelational Database Systems 2
*** TODO The Relational Model 4
    - /primary key/ :: The information (column(s)) of each table in a /relational
                       database/ that uniquely identifies a row in that table.

    - /compound key/ :: a primary key consisting of two or more columns.

    - /natural key/ and /surrogate key/
      The decision whether to employ natural or surrogate key is a topic of
      widespread debate.

    - /primary key/ columns should never be allowed to change once a value has
      been assigned.

      Since a person's name can change, we won't use the =fname/lname= as the
      primary key here.

    - =TODO= page 6

    - _not proper_: a single column to contain multiple pieces of information,
      such as
      + a name column that contains both a person's first and last names,
        or
      + an address column that contains street, city, state, and zip code
        information.

    - The process of refining a database design to ensure that each independent
      piece of information is in only one place (except for =TODO= /foreign keys/) is
      known as /normalization/.

*** TODO Some Terminology 6
    - Entity :: Something of interest to the database user community. Examples
                include customers, parts, geographic locations, etc.

    - Column :: An individual piece of data stored in a table.

    - Row :: A set of columns that together completely describe an entity or some
             action on an entity. Also called a record.

    - Table :: A set of rows, held either in memory (nonpersistent) or on
               permanent storage (persistent).

    - Result :: set Another name for a nonpersistent table, generally the result
                of an SQL query.

    - Primary key :: One or more columns that can be used as a unique identifier
                     for each row in a table.

    - Foreign key :: One or more columns that can be used together to identify a
                     single row in another table.

** What Is SQL? 7
*** SQL Statement Classes 7
*** SQL: A Nonprocedural Language 9
*** SQL Examples 10
** What Is MySQL? 12
** Whatâ€™s in Store 13

* 2. Creating and Populating a Database - 15
** Creating a MySQL Database 15
** Using the mysql Command-Line Tool 17
** MySQL Data Types 18
*** Character Data 18
*** Numeric Data 21
*** Temporal Data 23

** Table Creation 25
*** Step 1: Design 25
*** Step 2: Refinement 26
*** Step 3: Building SQL Schema Statements 27

** Populating and Modifying Tables 30
*** Inserting Data 31
*** Updating Data 35
*** Deleting Data 35

** When Good Statements Go Bad 36
*** Nonunique Primary Key 36
*** Nonexistent Foreign Key 36
*** Column Value Violations 37
*** Invalid Date Conversions 37

** The Bank Schema 38

* 3. Query Primer - 41
** Query Mechanics 41
** Query Clauses 43
** The select Clause 43
*** Column Aliases 46
*** Removing Duplicates 47

** The from Clause 48
*** Tables 49
*** Table Links 51
*** Defining Table Aliases 52

** The where Clause 52
** The group by and having Clauses 54
** The order by Clause 55
*** Ascending Versus Descending Sort Order 57
*** Sorting via Expressions 58
*** Sorting via Numeric Placeholders 59

** Test Your Knowledge 60

* 4. Filtering - 63
** Condition Evaluation 63
*** Using Parentheses 64
*** Using the not Operator 65

** Building a Condition 66
** Condition Types 66
*** Equality Conditions 66
*** Range Conditions 68
*** Membership Conditions 71
*** Matching Conditions 73

** Null: That Four-Letter Word 76
** Test Your Knowledge 79

* 5. Querying Multiple Tables - 81
** What Is a Join? 81
*** Cartesian Product 82
*** Inner Joins 83
*** The ANSI Join Syntax 86

** Joining Three or More Tables 88
*** Using Subqueries As Tables 90
*** Using the Same Table Twice 92

** Self-Joins 93
** Equi-Joins Versus Non-Equi-Joins 94
** Join Conditions Versus Filter Conditions 96
** Test Your Knowledge 97

* 6. Working with Sets - 99
** Set Theory Primer 99
** Set Theory in Practice 101
** Set Operators 103
*** The union Operator 103
*** The intersect Operator 106
*** The except Operator 107

** Set Operation Rules 108
*** Sorting Compound Query Results 108
*** Set Operation Precedence 109

** Test Your Knowledge 111

* 7. Data Generation, Conversion, and Manipulation - 113
** Working with String Data 113
*** String Generation 114
*** String Manipulation 119

** Working with Numeric Data 126
*** Performing Arithmetic Functions 126
*** Controlling Number Precision 128
*** Handling Signed Data 130

** Working with Temporal Data 130
*** Dealing with Time Zones 131
*** Generating Temporal Data 132
*** Manipulating Temporal Data 137

** Conversion Functions 141
** Test Your Knowledge 142

* 8. Grouping and Aggregates - 143
** Grouping Concepts 143
** Aggregate Functions 145
*** Implicit Versus Explicit Groups 146
*** Counting Distinct Values 147
*** Using Expressions 149
*** How Nulls Are Handled 149

** Generating Groups 150
*** Single-Column Grouping 151
*** Multicolumn Grouping 151
*** Grouping via Expressions 152
*** Generating Rollups 152

** Group Filter Conditions 155
** Test Your Knowledge 156

* 9. Subqueries - 157
** What Is a Subquery? 157
** Subquery Types 158
** Noncorrelated Subqueries 159
*** Multiple-Row, Single-Column Subqueries 160
*** Multicolumn Subqueries 165

** Correlated Subqueries 167
*** The exists Operator 169
*** Data Manipulation Using Correlated Subqueries 170

** When to Use Subqueries 171
*** Subqueries As Data Sources 172
*** Subqueries in Filter Conditions 177
*** Subqueries As Expression Generators 177

** Subquery Wrap-up 181
** Test Your Knowledge 181

* 10. Joins Revisited - 183
** Outer Joins 183
*** Left Versus Right Outer Joins 187
*** Three-Way Outer Joins 188
*** Self Outer Joins 190

** Cross Joins 192
** Natural Joins 198
** Test Your Knowledge 200

* 11. Conditional Logic - 203
** What Is Conditional Logic? 203
** The Case Expression 204
*** Searched Case Expressions 205
*** Simple Case Expressions 206

** Case Expression Examples 207
*** Result Set Transformations 208
*** Selective Aggregation 209
*** Checking for Existence 211
*** Division-by-Zero Errors 212
*** Conditional Updates 213
*** Handling Null Values 214

** Test Your Knowledge 215

* 12. Transactions - 217
** Multiuser Databases 217
*** Locking 217
*** Lock Granularities 218

** What Is a Transaction? 219
*** Starting a Transaction 220
*** Ending a Transaction 221
*** Transaction Savepoints 223

** Test Your Knowledge 225

* 13. Indexes and Constraints - 227
** Indexes 227
*** Index Creation 228
*** Types of Indexes 231
*** How Indexes Are Used 234
*** The Downside of Indexes 237

** Constraints 238
*** Constraint Creation 238
*** Constraints and Indexes 239
*** Cascading Constraints 240

** Test Your Knowledge 242

* 14. Views - 245
** What Are Views? 245
** Why Use Views? 248
*** Data Security 248
*** Data Aggregation 249
*** Hiding Complexity 250
*** Joining Partitioned Data 251

** Updatable Views 251
*** Updating Simple Views 252
*** Updating Complex Views 253

** Test Your Knowledge 255

* 15. Metadata - 257
** Data About Data 257
** Information_Schema 258
** Working with Metadata 262
*** Schema Generation Scripts 263
*** Deployment Verification 265
*** Dynamic SQL Generation 266

** Test Your Knowledge 270

* A. ER Diagram for Example Database - 271
* B. MySQL Extensions to the SQL Language - 273
* C. Solutions to Exercises - 287
* Index - 309
