#+TITLE: Kafka: The Definitive Guide
#+SUBTITLE: Real-Time Data and Stream Processing at Scale
#+VERSION: 2nd
#+AUTHOR: Gwen Shapira, Todd Palino, Rajini Sivaram & Krit Pretty
#+STARTUP: overview
#+STARTUP: entitiespretty

* Foreword to the Second Edition - xv
* Foreword to the First Edition - xvii
* Preface - xxi
* 1. Meet Kafka - 1
** Publish/Subscribe Messaging - 1
*** How It Starts - 2
*** Individual Queue Systems - 3

** Enter Kafka - 4
*** Messages and Batches - 4
*** Schemas - 5
*** Topics and Partitions - 5
*** Producers and Consumers - 6
*** Brokers and Clusters - 8
*** Multiple Clusters - 9

** Why Kafka? - 10
*** Multiple Producers - 10
*** Multiple Consumers - 10
*** Disk-Based Retention - 11
*** Scalable - 11
*** High Performance - 11
*** Platform Features - 11

** The Data Ecosystem - 12
*** Use Cases - 12

** Kafka’s Origin - 14
*** LinkedIn’s Problem - 14
*** The Birth of Kafka - 15
*** Open Source - 16
*** Commercial Engagement - 16
*** The Name - 17

** Getting Started with Kafka - 17

* 2. Installing Kafka - 19
** Environment Setup - 19
*** Choosing an Operating System - 19
*** Installing Java - 19
*** Installing ZooKeeper - 20
** Installing a Kafka Broker - 23
** Configuring the Broker - 24
*** General Broker Parameters - 25
*** Topic Defaults - 27

** Selecting Hardware - 33
*** Disk Throughput - 33
*** Disk Capacity - 34
*** Memory - 34
*** Networking - 35
*** CPU - 35

** Kafka in the Cloud - 35
*** Microsoft Azure - 36
*** Amazon Web Services - 36

** Configuring Kafka Clusters - 36
*** How Many Brokers? - 37
*** Broker Configuration - 38
*** OS Tuning - 38

** Production Concerns - 42
*** Garbage Collector Options - 42
*** Datacenter Layout - 43
*** Colocating Applications on ZooKeeper - 44

** Summary - 46

* 3. Kafka Producers: Writing Messages to Kafka - 47
** Producer Overview - 48
** Constructing a Kafka Producer - 50
** Sending a Message to Kafka - 52
*** Sending a Message Synchronously - 52
*** Sending a Message Asynchronously - 53

** Configuring Producers - 54
*** client.id - 55
*** acks - 55
*** Message Delivery Time - 56
*** linger.ms - 59
*** buffer.memory - 59
*** compression.type - 59
*** batch.size - 59
*** max.in.flight.requests.per.connection - 60
*** max.request.size - 60
*** receive.buffer.bytes and send.buffer.bytes - 61
*** enable.idempotence - 61

** Serializers - 61
*** Custom Serializers - 62
*** Serializing Using Apache Avro - 64
*** Using Avro Records with Kafka - 65

** Partitions - 68
** Headers - 71
** Interceptors - 71
** Quotas and Throttling - 73
** Summary - 75

* 4. Kafka Consumers: Reading Data from Kafka - 77
** Kafka Consumer Concepts - 77
*** Consumers and Consumer Groups - 77
*** Consumer Groups and Partition Rebalance - 80
*** Static Group Membership - 83

** Creating a Kafka Consumer - 84
** Subscribing to Topics - 85
** The Poll Loop - 86
*** Thread Safety - 87

** Configuring Consumers - 88
*** fetch.min.bytes - 88
*** fetch.max.wait.ms - 88
*** fetch.max.bytes - 89
*** max.poll.records - 89
*** max.partition.fetch.bytes - 89
*** session.timeout.ms and heartbeat.interval.ms - 89
*** max.poll.interval.ms - 90
*** default.api.timeout.ms - 90
*** request.timeout.ms - 90
*** auto.offset.reset - 91
*** enable.auto.commit - 91
*** partition.assignment.strategy - 91
*** client.id - 93
*** client.rack - 93
*** group.instance.id - 93
*** receive.buffer.bytes and send.buffer.bytes - 93
*** offsets.retention.minutes - 93

** Commits and Offsets - 94
*** Automatic Commit - 95
*** Commit Current Offset - 96
*** Asynchronous Commit - 97
*** Combining Synchronous and Asynchronous Commits - 99
*** Committing a Specified Offset - 100

** Rebalance Listeners - 101
** Consuming Records with Specific Offsets - 104
** But How Do We Exit? - 105
** Deserializers - 106
*** Custom Deserializers - 107
*** Using Avro Deserialization with Kafka Consumer - 109

** Standalone Consumer: Why and How to Use a Consumer Without a Group - 110
*** Summary - 111

* 5. Managing Apache Kafka Programmatically - 113
** AdminClient Overview - 114
*** Asynchronous and Eventually Consistent API - 114
*** Options - 114
*** Flat Hierarchy - 115
*** Additional Notes - 115

** AdminClient Lifecycle: Creating, Configuring, and Closing - 115
*** client.dns.lookup - 116
*** request.timeout.ms - 117

** Essential Topic Management - 118
** Configuration Management - 121
** Consumer Group Management - 123
*** Exploring Consumer Groups - 123
*** Modifying Consumer Groups - 125

** Cluster Metadata - 127
** Advanced Admin Operations - 127
*** Adding Partitions to a Topic - 127
*** Deleting Records from a Topic - 128
*** Leader Election - 128
*** Reassigning Replicas - 129

** Testing - 131
** Summary - 133

* 6. Kafka Internals - 135
** Cluster Membership - 135
** The Controller - 136
*** KRaft: Kafka’s New Raft-Based Controller - 137

** Replication - 139
** Request Processing - 142
*** Produce Requests - 144
*** Fetch Requests - 145
*** Other Requests - 147

** Physical Storage - 149
*** Tiered Storage - 149
*** Partition Allocation - 151
*** File Management - 152
*** File Format - 153
*** Indexes - 155
*** Compaction - 156
*** How Compaction Works - 156
*** Deleted Events - 158
*** When Are Topics Compacted? - 159

** Summary - 159

* 7. Reliable Data Delivery - 161
** Reliability Guarantees - 162
** Replication - 163
** Broker Configuration - 164
*** Replication Factor - 165
*** Unclean Leader Election - 166
*** Minimum In-Sync Replicas - 167
*** Keeping Replicas In Sync - 168
*** Persisting to Disk - 169

** Using Producers in a Reliable System - 169
*** Send Acknowledgments - 170
*** Configuring Producer Retries - 171
*** Additional Error Handling - 171

** Using Consumers in a Reliable System - 172
*** Important Consumer Configuration Properties for Reliable Processing - 173
*** Explicitly Committing Offsets in Consumers - 174

** Validating System Reliability - 176
*** Validating Configuration - 176
*** Validating Applications - 177
*** Monitoring Reliability in Production - 178

** Summary - 180

* 8. Exactly-Once Sematics - 181
** Idempotent Producer - 182
*** How Does the Idempotent Producer Work? - 182
*** Limitations of the Idempotent Producer - 184
*** How Do I Use the Kafka Idempotent Producer? - 185

** Transactions - 186
*** Transactions Use Cases - 187
*** What Problems Do Transactions Solve? - 187
*** How Do Transactions Guarantee Exactly-Once? - 188
*** What Problems Aren’t Solved by Transactions? - 191
*** How Do I Use Transactions? - 193
*** Transactional IDs and Fencing - 196
*** How Transactions Work - 198

** Performance of Transactions - 200
** Summary - 201

* 9. Building Data Pipelines - 203
** Considerations When Building Data Pipelines - 204
*** Timeliness - 204
*** Reliability - 205
*** High and Varying Throughput - 205
*** Data Formats - 206
*** Transformations - 207
*** Security - 208
*** Failure Handling - 209
*** Coupling and Agility - 209

** When to Use Kafka Connect Versus Producer and Consumer - 210
** Kafka Connect - 211
*** Running Kafka Connect - 211
*** Connector Example: File Source and File Sink - 214
*** Connector Example: MySQL to Elasticsearch - 216
*** Single Message Transformations - 223
*** A Deeper Look at Kafka Connect - 225
*** Alternatives to Kafka Connect - 229
*** Ingest Frameworks for Other Datastores - 229
*** GUI-Based ETL Tools - 229
*** Stream Processing Frameworks - 230

** Summary - 230

* 10. Cross-Cluster Data Mirroring - 233
** Use Cases of Cross-Cluster Mirroring - 234
** Multicluster Architectures - 235
*** Some Realities of Cross-Datacenter Communication - 235
*** Hub-and-Spoke Architecture - 236
*** Active-Active Architecture - 238
*** Active-Standby Architecture - 240
*** Stretch Clusters - 246

** Apache Kafka’s MirrorMaker - 247
*** Configuring MirrorMaker - 249
*** Multicluster Replication Topology - 251
*** Securing MirrorMaker - 252
*** Deploying MirrorMaker in Production - 253
*** Tuning MirrorMaker - 257

** Other Cross-Cluster Mirroring Solutions - 259
*** Uber uReplicator - 259
*** LinkedIn Brooklin - 260
*** Confluent Cross-Datacenter Mirroring Solutions - 261

** Summary - 263

* 11. Securing Kafka - 265
** Locking Down Kafka - 265
** Security Protocols - 268
** Authentication - 269
*** SSL - 270
*** SASL - 275
*** Reauthentication - 286
*** Security Updates Without Downtime - 288

** Encryption - 289
*** End-to-End Encryption - 289

** Authorization - 291
*** AclAuthorizer - 292
*** Customizing Authorization - 295
*** Security Considerations - 297
** Auditing - 298
** Securing ZooKeeper - 299
*** SASL - 299
*** SSL - 300
*** Authorization - 301

** Securing the Platform - 301
*** Password Protection - 301

** Summary - 230

* 12. Administering Kafka - 305
** Topic Operations - 305
*** Creating a New Topic - 306
*** Listing All Topics in a Cluster - 308
*** Describing Topic Details - 308
*** Adding Partitions - 310
*** Reducing Partitions - 311
*** Deleting a Topic - 311

** Consumer Groups - 312
*** List and Describe Groups - 312
*** Delete Group - 313
*** Offset Management - 314

** Dynamic Configuration Changes - 315
*** Overriding Topic Configuration Defaults - 315
*** Overriding Client and User Configuration Defaults - 317
*** Overriding Broker Configuration Defaults - 318
*** Describing Configuration Overrides - 319
*** Removing Configuration Overrides - 319

** Producing and Consuming - 320
*** Console Producer - 320
*** Console Consumer - 322

** Partition Management - 326
*** Preferred Replica Election - 326
*** Changing a Partition’s Replicas - 327
*** Dumping Log Segments - 332
*** Replica Verification - 334

** Other Tools - 334
** Unsafe Operations - 335
*** Moving the Cluster Controller - 335
*** Removing Topics to Be Deleted - 336
*** Deleting Topics Manually - 336

** Summary - 337

* 13. Monitoring Kafka - 339
** Metric Basics - 339
*** Where Are the Metrics? - 339
*** What Metrics Do I Need? - 341
*** Application Health Checks - 343

** Service-Level Objectives - 343
*** Service-Level Definitions - 343
*** What Metrics Make Good SLIs? - 344
*** Using SLOs in Alerting - 345

** Kafka Broker Metrics - 346
*** Diagnosing Cluster Problems - 347
*** The Art of Under-Replicated Partitions - 348
*** Broker Metrics - 354
*** Topic and Partition Metrics - 364
*** JVM Monitoring - 366
*** OS Monitoring - 367
*** Logging - 369

** Client Monitoring - 370
*** Producer Metrics - 370
*** Consumer Metrics - 373
*** Quotas - 376

** Lag Monitoring - 377
** End-to-End Monitoring - 378
** Summary - 378

* 14. Stream Processing - 381
** What Is Stream Processing? - 382
** Stream Processing Concepts - 385
*** Topology - 385
*** Time - 386
*** State - 388
*** Stream-Table Duality - 389
*** Time Windows - 390
*** Processing Guarantees - 392

** Stream Processing Design Patterns - 392
*** Single-Event Processing - 392
*** Processing with Local State - 393
*** Multiphase Processing/Repartitioning - 395
*** Processing with External Lookup: Stream-Table Join - 396
*** Table-Table Join - 398
*** Streaming Join - 398
*** Out-of-Sequence Events - 399
*** Reprocessing - 400
*** Interactive Queries - 401

** Kafka Streams by Example - 402
*** Word Count - 402
*** Stock Market Statistics - 405
*** ClickStream Enrichment - 408

** Kafka Streams: Architecture Overview - 410
*** Building a Topology - 410
*** Optimizing a Topology - 411
*** Testing a Topology - 411
*** Scaling a Topology - 412
*** Surviving Failures - 415

** Stream Processing Use Cases - 416
** How to Choose a Stream Processing Framework - 417
** Summary - 419

* A. Installing Kafka on Other Operating Systems - 421
* B. Additional Kafka Tools - 427
* Index - 433
